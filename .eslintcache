[{"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js":"1","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx":"5","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx":"6","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\socketService.js":"7","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx":"8","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx":"9","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js":"10","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx":"11","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Dashboard.jsx":"12","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js":"13","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx":"14","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js":"15","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js":"16","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\menuReducer.js":"17","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js":"18","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js":"19","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js":"20","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js":"21","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js":"22","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx":"23","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Archive.jsx":"24","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\Menu.jsx":"25","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx":"26","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\UserModalFromHeader.jsx":"27","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx":"28","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx":"29","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js":"30","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js":"31","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx":"32","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\MyAvatar.jsx":"33","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardMenu.jsx":"34","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddDueDateModal.jsx":"35","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx":"36","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx":"37","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx":"38","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx":"39","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\UserActivities.jsx":"40","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\UserCards.jsx":"41","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\DynamicCardActionModal.jsx":"42","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionLabels.jsx":"43","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentPreview.jsx":"44","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js":"45","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\menuAction.js":"46","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx":"47","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx":"48","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx":"49","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx":"50","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js":"51","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx":"52","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\menuService.js":"53","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx":"54","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx":"55","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddChecklistModal.jsx":"56","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddAttachmentModal.jsx":"57","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelListModal.jsx":"58","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberListModal.jsx":"59","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddCoverModal.jsx":"60","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CopyCardModal.jsx":"61","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MoveCardModal.jsx":"62","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js":"63","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx":"64","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupMenu.jsx":"65","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\AddCardInput.jsx":"66","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx":"67","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx":"68","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberList.jsx":"69","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx":"70","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelList.jsx":"71","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklistList.jsx":"72","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx":"73","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklist.jsx":"74","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardEdit.jsx":"75","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardDetails.jsx":"76","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Todo.jsx":"77","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\LinearProgressBar.jsx":"78","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\DynamicGroupModal.jsx":"79","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupModals\\MoveGroupModal.jsx":"80","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupModals\\SortGroupModal.jsx":"81","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\BoardsPick.jsx":"82","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\HomePickModal.jsx":"83"},{"size":910,"mtime":1610460278356,"results":"84","hashOfConfig":"85"},{"size":5064,"mtime":1610460278367,"results":"86","hashOfConfig":"85"},{"size":364,"mtime":1610460278364,"results":"87","hashOfConfig":"85"},{"size":323,"mtime":1610460278387,"results":"88","hashOfConfig":"85"},{"size":1316,"mtime":1611182669007,"results":"89","hashOfConfig":"85"},{"size":3634,"mtime":1611262163900,"results":"90","hashOfConfig":"85"},{"size":1825,"mtime":1611137112910,"results":"91","hashOfConfig":"85"},{"size":1841,"mtime":1611080758940,"results":"92","hashOfConfig":"85"},{"size":313,"mtime":1611004449098,"results":"93","hashOfConfig":"85"},{"size":560,"mtime":1610815597106,"results":"94","hashOfConfig":"85"},{"size":3245,"mtime":1611232978658,"results":"95","hashOfConfig":"85"},{"size":2719,"mtime":1611086336601,"results":"96","hashOfConfig":"85"},{"size":6496,"mtime":1611261734983,"results":"97","hashOfConfig":"85"},{"size":524,"mtime":1611222130024,"results":"98","hashOfConfig":"85"},{"size":3153,"mtime":1611153977998,"results":"99","hashOfConfig":"85"},{"size":9570,"mtime":1611261678256,"results":"100","hashOfConfig":"85"},{"size":279,"mtime":1610815597107,"results":"101","hashOfConfig":"85"},{"size":322,"mtime":1610460278384,"results":"102","hashOfConfig":"85"},{"size":377,"mtime":1610545229448,"results":"103","hashOfConfig":"85"},{"size":818,"mtime":1610580403938,"results":"104","hashOfConfig":"85"},{"size":669,"mtime":1610460278383,"results":"105","hashOfConfig":"85"},{"size":824,"mtime":1611137112913,"results":"106","hashOfConfig":"85"},{"size":727,"mtime":1611080760863,"results":"107","hashOfConfig":"85"},{"size":6030,"mtime":1611244086677,"results":"108","hashOfConfig":"85"},{"size":5723,"mtime":1611004151890,"results":"109","hashOfConfig":"85"},{"size":4368,"mtime":1611184396106,"results":"110","hashOfConfig":"85"},{"size":2230,"mtime":1611137112890,"results":"111","hashOfConfig":"85"},{"size":1268,"mtime":1610891480669,"results":"112","hashOfConfig":"85"},{"size":4271,"mtime":1611137112893,"results":"113","hashOfConfig":"85"},{"size":682,"mtime":1610815597104,"results":"114","hashOfConfig":"85"},{"size":1079,"mtime":1611137112909,"results":"115","hashOfConfig":"85"},{"size":605,"mtime":1610891480666,"results":"116","hashOfConfig":"85"},{"size":547,"mtime":1610898772706,"results":"117","hashOfConfig":"85"},{"size":2519,"mtime":1610898772682,"results":"118","hashOfConfig":"85"},{"size":1515,"mtime":1611011755808,"results":"119","hashOfConfig":"85"},{"size":3983,"mtime":1610891480673,"results":"120","hashOfConfig":"85"},{"size":1490,"mtime":1611004151896,"results":"121","hashOfConfig":"85"},{"size":2172,"mtime":1610891480678,"results":"122","hashOfConfig":"85"},{"size":2215,"mtime":1611004151894,"results":"123","hashOfConfig":"85"},{"size":807,"mtime":1611086336594,"results":"124","hashOfConfig":"85"},{"size":570,"mtime":1611086336594,"results":"125","hashOfConfig":"85"},{"size":2402,"mtime":1611188074533,"results":"126","hashOfConfig":"85"},{"size":6975,"mtime":1611086336599,"results":"127","hashOfConfig":"85"},{"size":516,"mtime":1611011755812,"results":"128","hashOfConfig":"85"},{"size":1832,"mtime":1610580403938,"results":"129","hashOfConfig":"85"},{"size":687,"mtime":1610891480693,"results":"130","hashOfConfig":"85"},{"size":7623,"mtime":1611220146716,"results":"131","hashOfConfig":"85"},{"size":1669,"mtime":1611004151892,"results":"132","hashOfConfig":"85"},{"size":2102,"mtime":1611086336597,"results":"133","hashOfConfig":"85"},{"size":5776,"mtime":1611004151893,"results":"134","hashOfConfig":"85"},{"size":3136,"mtime":1611086336605,"results":"135","hashOfConfig":"85"},{"size":1302,"mtime":1611137112898,"results":"136","hashOfConfig":"85"},{"size":301,"mtime":1610891480688,"results":"137","hashOfConfig":"85"},{"size":1977,"mtime":1611004151897,"results":"138","hashOfConfig":"85"},{"size":524,"mtime":1611004151898,"results":"139","hashOfConfig":"85"},{"size":1961,"mtime":1611011755806,"results":"140","hashOfConfig":"85"},{"size":1955,"mtime":1611137112891,"results":"141","hashOfConfig":"85"},{"size":2400,"mtime":1611137112902,"results":"142","hashOfConfig":"85"},{"size":2580,"mtime":1611137112904,"results":"143","hashOfConfig":"85"},{"size":2734,"mtime":1611137112892,"results":"144","hashOfConfig":"85"},{"size":2928,"mtime":1611137112898,"results":"145","hashOfConfig":"85"},{"size":2284,"mtime":1611137112905,"results":"146","hashOfConfig":"85"},{"size":704,"mtime":1610586036756,"results":"147","hashOfConfig":"85"},{"size":2248,"mtime":1611138600045,"results":"148","hashOfConfig":"85"},{"size":1623,"mtime":1611185192835,"results":"149","hashOfConfig":"85"},{"size":1054,"mtime":1611084660181,"results":"150","hashOfConfig":"85"},{"size":2826,"mtime":1610898772679,"results":"151","hashOfConfig":"85"},{"size":2235,"mtime":1610898772681,"results":"152","hashOfConfig":"85"},{"size":1087,"mtime":1611137112903,"results":"153","hashOfConfig":"85"},{"size":1842,"mtime":1611137112894,"results":"154","hashOfConfig":"85"},{"size":1066,"mtime":1611137112901,"results":"155","hashOfConfig":"85"},{"size":1664,"mtime":1611137112896,"results":"156","hashOfConfig":"85"},{"size":4308,"mtime":1611244081498,"results":"157","hashOfConfig":"85"},{"size":2119,"mtime":1611137112895,"results":"158","hashOfConfig":"85"},{"size":7873,"mtime":1611174338271,"results":"159","hashOfConfig":"85"},{"size":5173,"mtime":1611263612911,"results":"160","hashOfConfig":"85"},{"size":3212,"mtime":1611011755819,"results":"161","hashOfConfig":"85"},{"size":577,"mtime":1610815597067,"results":"162","hashOfConfig":"85"},{"size":1167,"mtime":1611215317953,"results":"163","hashOfConfig":"85"},{"size":2607,"mtime":1611221410022,"results":"164","hashOfConfig":"85"},{"size":1229,"mtime":1611183621271,"results":"165","hashOfConfig":"85"},{"size":4900,"mtime":1611086336600,"results":"166","hashOfConfig":"85"},{"size":2812,"mtime":1611262043345,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"15e2un3",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"170"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"170"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"170"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"170"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"170"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"170"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"170"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"170"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"170"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"170"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"170"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"170"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"170"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"170"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"170"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"170"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"170"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"170"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"170"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"170"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"170"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"170"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"170"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js",[],["363","364"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx",["365"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Component } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n//cmps:\r\nimport { Header } from './cmps/Header'\r\nimport { Home } from './pages/Home'\r\nimport { Board } from './pages/Board'\r\nimport { BoardList } from './cmps/BoardList.jsx'\r\nimport { socketService } from './services/socketService'\r\nimport { Dashboard } from './pages/Dashboard'\r\n\r\nfunction _App(props) {\r\n\r\n  socketService.setup()\r\n  const style = props.board?.style\r\n\r\n  return (\r\n    <div className=\"app\" style={style}>\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/board/:boardId/:cardId?\" component={Board} />\r\n            <Route path=\"/board\" component={BoardList} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            {/* <Route path=\"/signup\" component={Signup} /> */}\r\n            {/* <Route path=\"/login\" component={Login} /> */}\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.board\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx",["366","367","368"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\socketService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx",["369"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Dashboard.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js",["370","371"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx",["372"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js",["373"],"import { utilService } from './utilService'\r\n\r\nexport const cardService = {\r\n    getCardById,\r\n    getCards,\r\n    getCardLabels,\r\n    getCardForUpdate,\r\n    updateChecklistTodo,\r\n    removeChecklist,\r\n    getActivityToAdd,\r\n    getCommentToAdd,\r\n    handleChecklistDrag,\r\n    handleTodoDrag\r\n\r\n}\r\n\r\nfunction getCardById(board, cardId) {\r\n    var currCard\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) currCard = JSON.parse(JSON.stringify(card))\r\n    }))\r\n    if (!currCard) return null\r\n    const labels = getCardLabels(board, currCard.labels)\r\n    const activities = _getCardActivities(board, cardId)\r\n    return { ...currCard, labels, activities }\r\n}\r\n\r\nfunction getCardForUpdate(card) {\r\n    console.log('card in card service',card);\r\n    const labels = card.labels.map(label => label?.id)\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    delete newCard.activities\r\n    // const newCard = JSON.parse(JSON.stringify(card))  //got error on json actions\r\n    return { ...newCard, labels }\r\n\r\n\r\n}\r\nfunction _getCardActivities(board, cardId) {\r\n    return board.activities.filter(act => act.card.id === cardId)\r\n}\r\n\r\nfunction getCardLabels(board, labels) {\r\n    return board.labels.filter(label => labels?.includes(label.id))\r\n}\r\n\r\nfunction getCards(group) {\r\n    const cards = group.cards\r\n    return cards\r\n}\r\n\r\nfunction updateChecklistTodo(card, checklist, todo) {\r\n    const todoToUpdate = JSON.parse(JSON.stringify(todo))\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    if (todoToUpdate.id) var todos = checklist.todos.map(todo => (todo.id === todoToUpdate.id) ? todoToUpdate : todo)\r\n    else {\r\n        todoToUpdate.id = utilService.makeId()\r\n        todos = [...checklist.todos, todoToUpdate]\r\n    }\r\n    const currChecklist = { ...checklist, todos }\r\n    const checklists = card.checklists.map(checklist => (checklist.id === currChecklist.id) ? currChecklist : checklist)\r\n    return { ...newCard, checklists }\r\n}\r\n\r\nfunction removeChecklist(card, currChecklist) {\r\n    const checklists = card.checklists.filter(checklist => checklist.id !== currChecklist.id)\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    return { ...newCard, checklists }\r\n}\r\n\r\nfunction getActivityToAdd(card, user, txt) {\r\n\r\n    return {\r\n        id: utilService.makeId(),\r\n        txt,\r\n        createdAt: Date.now(),\r\n        createdBy: user,\r\n        card: {\r\n            id: card.id,\r\n            title: card.title\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction getCommentToAdd(txt, user) {\r\n    return { txt, createdAt: Date.now(), createdBy: user, id: utilService.makeId() }\r\n}\r\n\r\n\r\nfunction handleTodoDrag(board, card, res) {\r\n    var newCard\r\n    if (res.type = 'checklists') newCard = cardService.handleChecklistDrag(card, res)\r\n    return newCard\r\n\r\n}\r\n\r\nfunction handleChecklistDrag( card, res) {\r\n    console.log(card);\r\n    const checklists = [...card.checklists]\r\n    const checklist = checklists.splice(res.source.index, 1)[0]\r\n    checklists.splice(res.destination.index, 0, checklist)\r\n    const newCard = { ...card, checklists }\r\n    console.log(newCard)\r\n    return newCard\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js",["374","375","376"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\menuReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Archive.jsx",["377","378"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\Menu.jsx",["379","380"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\r\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\r\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\r\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\r\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\r\nimport { MenuActivitiesList } from './menuFirstSee/MenuActivitiesList.jsx'\r\nimport { SectionLabels } from './menuFirstSee/menuTopOptions/SectionLabels.jsx'\r\n\r\n\r\n//icons:\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        menuTitle: 'Menu',\r\n        currMenu: null,\r\n        inMenu: true,\r\n        isMenuOpen: false\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\r\n    }\r\n\r\n    goBack = () => { this.setState({ currMenu: null }) }\r\n\r\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\r\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\r\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\r\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\r\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\r\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\r\n    openLabels = () => { this.setState({ menuTitle: \"Labels\", currMenu: 'SectionLabels' }) }\r\n\r\n    render() {\r\n\r\n\r\n        const { currMenu, menuTitle, isMenuOpen } = this.state\r\n        const { board } = this.props\r\n        if (!board.activities) return null\r\n        return (\r\n            <section className={`menu flex col ${isMenuOpen ? 'open' : ''}`}>\r\n                <button className=\"menu-btn flex align-center\" onClick={this.toggleMenu}><MoreHorizIcon />Show Menu</button>\r\n                <div className=\"menu-top\">\r\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\r\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\r\n                    <button className=\"close-menu-btn\" onClick={this.toggleMenu}><CloseIcon /></button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\r\n\r\n                    <button className=\"menu-option top-option\" onClick={this.openAbout}>\r\n                        <span><InfoIcon /></span>\r\n                        <div className=\"about-all-desc\">\r\n                            <h4 className=\"about-this-board\">About This Board</h4>\r\n                            <span className=\"about-desc\">Add a description to your board</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openBgs}>\r\n                        <span>< WallpaperIcon /></span>\r\n                        <h4 className=\"option-title\">Change Background</h4>\r\n                    </button>\r\n\r\n                    {/* <button className=\"menu-option\" onClick={this.openSearch}>\r\n                        <span><SearchIcon /></span>\r\n                        <h4 className=\"option-title\">Search Cards</h4>\r\n                    </button> */}\r\n\r\n                    {/* <button className=\"menu-option\" onClick={this.openStickers}>\r\n                        <span><LabelImportantIcon /></span>\r\n                        <h4 className=\"option-title\">Stickers</h4>\r\n                    </button> */}\r\n\r\n                    <button className=\"menu-option\" onClick={this.openLabels}>\r\n                        <span><LabelOutlinedIcon /></span>\r\n                        <h4 className=\"option-title\">Labels</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openActivity}>\r\n                        <span><PlaylistAddCheckIcon /></span>\r\n                        <h4 className=\"option-title\">Activity</h4>\r\n                    </button>\r\n                    <MenuActivitiesList board={board} />\r\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\r\n                </section>}\r\n                <DynamicCmp currMenu={currMenu} board={board} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction DynamicCmp({ currMenu, board }) {\r\n    switch (currMenu) {\r\n        case 'SectionAbout':\r\n            return <SectionAbout board={board} />\r\n        case 'SectionBackground':\r\n            return <SectionBackground />\r\n        case 'SectionSearch':\r\n            return <SectionSearch board={board} />\r\n        case 'SectionStickers':\r\n            return <SectionStickers />\r\n        case 'SectionLabels':\r\n            return <SectionLabels board={board} />\r\n        case 'MenuActivity':\r\n            return <MenuActivity board={board} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx",["381"],"import React, { Component } from 'react'\r\nimport { GroupPreview } from \"./GroupPreview\";\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\n\r\n\r\nexport class GroupList extends Component {\r\n\r\n    state = {\r\n        // isModalOpen:false,\r\n        group: {\r\n            title: '',\r\n            style: {},\r\n            cards: []\r\n        },\r\n        isAdding: false,\r\n        isEdit:{\r\n            isOpen:false,\r\n            id:''\r\n        },\r\n        isMenuOpen:false\r\n    } \r\n\r\n\r\n    handleChange = (ev) => {\r\n        const { group } = this.state\r\n        const { value } = ev.target\r\n        this.setState({\r\n            group: { ...group, title: value }\r\n        })\r\n    }\r\n\r\n    onAddGroup = () => {\r\n        const { group } = this.state\r\n        const { board } = this.props\r\n        if(group.title.length===0) return \r\n        this.props.addGroup(board, group)\r\n        this.setState({ group: { title: '', style: {}, cards: [] } })\r\n\r\n    }\r\n\r\n    handleEnter = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault()\r\n            this.onAddGroup()\r\n        }\r\n    }\r\n\r\n    discardChanges = (ev) => {\r\n        this.setState({ group: { title: '', style: {}, cards: [] } })\r\n        ev.currentTarget.blur()\r\n    }\r\n\r\n    handleDrag = (result) => {\r\n        const { board } = this.props\r\n        const { source, destination } = result\r\n\r\n        if (result.type === 'GROUP') {\r\n            const groupId = result.draggableId\r\n            this.props.updateGroupLoaction(board, groupId, source, destination)\r\n        } else {\r\n            const cardId = result.draggableId\r\n            this.props.updateCardLocation(board, source, destination)\r\n\r\n        }\r\n\r\n    }\r\n    enterEditMode = (ev,id) => {\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n        this.setState({\r\n            isEdit:{isOpen:true,id:id} \r\n        })\r\n    }\r\n    \r\n    exitEditMode = (ev) => {\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n        this.setState({\r\n            isEdit:{isOpen:false,id:''}\r\n         })\r\n    }\r\n    // openMenu=()=>{\r\n    //     this.setState({isMenuOpen:true})\r\n    // }\r\n    // closeMenu=()=>{\r\n    //     this.setState({isMenuOpen:true})\r\n    // }\r\n\r\n    render() {\r\n        const { groups } = this.props.board\r\n        const { isEdit,isMenuOpen } = this.state\r\n        return (\r\n            // <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n            <DragDropContext onDragEnd={this.handleDrag}>\r\n                <Droppable droppableId=\"board\" type=\"GROUP\" direction=\"horizontal\">\r\n                    {(provided ) => (\r\n\r\n                            <div ref={provided.innerRef} {...provided.droppableProps} className=\"group-container\" onClick={this.exitEditMode}  >\r\n                                {groups && groups.map((group, idx) => {\r\n                                    return (\r\n                                        <GroupPreview  isMenuOpen={isMenuOpen}  exitEditMode={this.exitEditMode} enterEditMode={this.enterEditMode} isEdit={isEdit} key={group.id} idx={idx} listId={group.id} group={group} />\r\n                                    )\r\n                                })}\r\n\r\n                                <div className=\"hidden-actions-form-container add-group\" >\r\n                                    <form action=\"\" className=\"hidden-actions-form\">\r\n                                        <input onKeyDown={this.handleEnter} className=\"add-list-input\" type=\"text\" placeholder=\"+ Add another list\" value={this.state.group.title} onChange={this.handleChange} />\r\n                                    </form>\r\n                                    <div className=\"hidden-actions flex list\">\r\n                                        <button onClick={this.onAddGroup}>Add List</button>\r\n                                        <button onClick={this.discardChanges} className=\"icon\">\r\n                                            <CloseSharpIcon />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                {provided.placeholder }\r\n                            </div>\r\n                            \r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\UserModalFromHeader.jsx",["382"],"import { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { MyAvatar } from '../cmps/MyAvatar.jsx'\r\nimport { UserActivities } from '../cmps/UserActivities.jsx'\r\nimport { UserCards } from '../cmps/UserCards.jsx'\r\n\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport class UserModalFromHeader extends Component {\r\n\r\n    state = {\r\n        currAct: null\r\n    }\r\n    goBack = () => { this.setState({ currAct: null }) }\r\n    render() {\r\n\r\n        const { currAct } = this.state\r\n        const { user, board } = this.props\r\n        if (!user || !board) return null \r\n        return (\r\n            <section className=\"user-modal-from-header\">\r\n                <div className=\"top-modal\">\r\n                    <span className=\"title\">Account</span>\r\n                    <button className=\"close-modal-btn\" onClick={this.props.closeModal}><CloseRoundedIcon /></button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                <div className=\"user-details-menu\">\r\n                    <span className=\"user-details-user-icon\"> <MyAvatar user={user} /></span>\r\n                    <p>{user.fullname}</p>\r\n                    <span className=\"user-details-user-name\">{user.username}</span>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                <section className=\"user-acts\">\r\n                    {currAct === null && <div className=\"acts-btns\">\r\n                        <button className=\"act\" onClick={() => this.setState({ currAct: 'Activities' })}>Activity</button>\r\n                        <button className=\"act\" onClick={() => this.setState({ currAct: 'Cards' })}>Cards</button>\r\n                    </div>}\r\n                    <DynamicCmp currAct={currAct} board={board} user={user} goBack={this.goBack} />\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DynamicCmp({ currAct, board, user, goBack }) {\r\n    switch (currAct) {\r\n        case 'Activities':\r\n            return <UserActivities board={board} user={user} goBack={goBack} />\r\n        case 'Cards':\r\n            return <UserCards board={board} user={user} goBack={goBack} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx",["383"],"\r\nimport { Component } from 'react'\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\n//icons:\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\n\r\nclass _MenuMapShow extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        gGoogleMap: ''\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"map-section\">\r\n                <Map\r\n                    google={this.props.google}\r\n                    initialCenter={{ lat: 32.0749831, lng: 34.9120554 }}\r\n                    center={this.state.center}\r\n                    zoom={14}>\r\n\r\n                    <Marker\r\n                        name={'Current location'} />\r\n\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}>\r\n                        <div>\r\n                            <h1>{this.state.selectedPlace.name}</h1>\r\n                        </div>\r\n                    </InfoWindow>\r\n\r\n                </Map>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const MenuMapShow = GoogleApiWrapper({\r\n    apiKey: ('AIzaSyBzfpQbTtSYT__Qh9PIPLUnA9xBMKj1iFY')\r\n})(_MenuMapShow)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx",["384"],"import { connect } from \"react-redux\";\r\nimport { cardService } from \"../../services/cardService.js\";\r\nimport { updateBoardCard } from \"../../store/actions/boardAction\";\r\nimport { withRouter } from \"react-router\";\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport { Component } from \"react\";\r\nimport { CardContent } from \"./CardContent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { CardMenu } from \"./CardMenu.jsx\";\r\nimport { DynamicCardActionModal } from \"./DynamicCardActionModal.jsx\";\r\nimport {AddDueDateModal} from \"./AddDueDateModal.jsx\";\r\n// import { CardAction } from \"./CardAction\";\r\n\r\nclass _Card extends Component {\r\n\r\n    state = {\r\n        card: null,\r\n        currModal: {},\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.cardId !== this.props.match.params.cardId) this.loadCard()\r\n        if (prevProps.board._id !== this.props.board?._id) this.loadCard()\r\n    }\r\n\r\n    loadCard = () => {\r\n        const { board } = this.props\r\n        const { cardId } = this.props.match.params\r\n        if (cardId && board.groups) {\r\n            const card = cardService.getCardById(board, cardId)\r\n            this.setState({ card, title: card.title })\r\n        } else this.setState({ card: null })\r\n    }\r\n\r\n    saveCardChanges = async (card, txt) => {\r\n        var { board, loggedUser } = this.props\r\n        if (txt) {\r\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\r\n            board = {...board, activities: [activity, ...board.activities]}\r\n        } \r\n        await this.props.updateBoardCard(board, card)\r\n        this.loadCard()\r\n    }\r\n\r\n    onChangetitle = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({title: value })\r\n    }\r\n\r\n    onSaveTitle = (ev) => {\r\n        if (ev.key && ev.key !== 'Enter') return\r\n        const {card, title} = this.state\r\n        this.saveCardChanges({...card, title} ,'Edited card title')\r\n        ev.currentTarget?.blur()\r\n    }\r\n\r\n    closeModal = () =>{\r\n        const {currModal} = this.state\r\n        if (currModal?.name) this.setState({currModal: null})\r\n    }\r\n\r\n    setCurrModal = (currModal) => {\r\n        this.setState({currModal})\r\n    }\r\n\r\n    render() {\r\n        const { board, loggedUser } = this.props\r\n        const { card, currModal, title } = this.state\r\n        if (!card) return null\r\n        return (\r\n            <Link to={`/board/${board._id}`}>\r\n                <section onClick={this.closeModal} className={\"card-modal-screen flex justify-center\"}>\r\n                    <div onClick={(ev) => { ev.preventDefault() }} className=\"card-modal grid\">\r\n                        <div className=\"header flex\">\r\n                            <WebIcon />\r\n                            <input\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={this.onChangetitle}\r\n                                onBlur={this.onSaveTitle}\r\n                                onKeyDown={this.onSaveTitle}\r\n                            />\r\n                            <Link to={`/board/${board._id}`}><CloseSharpIcon /></Link>\r\n                        </div>\r\n                        <CardContent setCurrModal={this.setCurrModal} closeModal={this.closeModal} user={loggedUser} board={board} card={card} save={this.saveCardChanges} />\r\n                        <CardMenu setCurrModal={this.setCurrModal} closeModal={this.closeModal}/>\r\n                        <div  onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}}>\r\n                        <DynamicCardActionModal closeModal={this.closeModal} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.boardModule.loggedUser, \r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard\r\n}\r\n\r\nexport const Card = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Card))\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\MyAvatar.jsx",["385"],"import { makeStyles } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }))\r\n\r\nexport function MyAvatar({user}){\r\n     const classes = useStyles()\r\n\r\n    if( user.imgUrl) return  <Avatar alt={user.fullname} className={classes.small} src={user.imgUrl} />\r\n    return <Avatar className={classes[user.color], classes.small}>{user.fullname.substring(0, 1)}</Avatar>\r\n\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardMenu.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddDueDateModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx",["386"],"import { Component } from 'react'\r\n\r\nimport stick1 from '../../../../assets/stickers/sticker-01.png'\r\nimport stick2 from '../../../../assets/stickers/sticker-02.png'\r\nimport stick3 from '../../../../assets/stickers/sticker-03.png'\r\nimport stick4 from '../../../../assets/stickers/sticker-04.png'\r\nimport stick5 from '../../../../assets/stickers/sticker-05.png'\r\nimport stick6 from '../../../../assets/stickers/sticker-06.png'\r\nimport stick7 from '../../../../assets/stickers/sticker-07.png'\r\nimport stick8 from '../../../../assets/stickers/sticker-08.png'\r\nimport stick9 from '../../../../assets/stickers/sticker-09.png'\r\nimport stick10 from '../../../../assets/stickers/sticker-10.png'\r\nimport stick11 from '../../../../assets/stickers/sticker-11.png'\r\nimport stick12 from '../../../../assets/stickers/sticker-12.png'\r\n\r\n\r\nexport class SectionStickers extends Component {\r\n\r\n    state = {\r\n        stickers: [\r\n            { src: stick1, _id: 'stick101' },\r\n            { src: stick2, _id: 'stick102' },\r\n            { src: stick3, _id: 'stick103' },\r\n            { src: stick4, _id: 'stick104' },\r\n            { src: stick5, _id: 'stick105' },\r\n            { src: stick6, _id: 'stick106' },\r\n            { src: stick7, _id: 'stick107' },\r\n            { src: stick8, _id: 'stick108' },\r\n            { src: stick9, _id: 'stick109' },\r\n            { src: stick10, _id: 'stick1011' },\r\n            { src: stick11, _id: 'stick1011' },\r\n            { src: stick12, _id: 'stick1012' }\r\n\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        const { stickers } = this.state\r\n\r\n        console.log('stickers:', stickers);\r\n        if (!stickers || !stickers.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"stickers-section\" style={{ display: \"grid\" }}>\r\n                <h1>Stickers!</h1>\r\n                <div className=\"stickers-area\">\r\n                    {stickers.map((sticker, idx) => {\r\n\r\n                        return <div className=\"sticker-img\" key={idx}>\r\n                            <img src={sticker.src} />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx",["387","388","389","390"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\r\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\r\n\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n//imgs:\r\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\r\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\r\n\r\nexport class SectionBackground extends Component {\r\n\r\n    state = {\r\n        currType: null,\r\n        menuTitle: 'Change Background',\r\n        photosSrc,\r\n        colorsSrc\r\n    }\r\n\r\n    goBackBg = () => { this.setState({ currType: null }) }\r\n\r\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\r\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\r\n\r\n    render() {\r\n        const { currType, photosSrc, colorsSrc } = this.state\r\n        return (\r\n            <section className=\"background-section\">\r\n                {currType === null && <section className=\"flex photos-colors\">\r\n                    <div className=\"photos\">\r\n                        <button onClick={this.choosePhotos}>\r\n                            <img src={photosSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Photos</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"colors\">\r\n                        <button onClick={this.chooseColors}>\r\n                            <img src={colorsSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Colors</span>\r\n                        </button>\r\n                    </div>\r\n                </section>}\r\n                {currType === null && <hr className=\"hr-menu\" />}\r\n                <DynamicCmpBg currType={currType} goBack={this.goBackBg} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction DynamicCmpBg({ currType, goBack }) {\r\n    switch (currType) {\r\n        case 'PhotosArea':\r\n            return <PhotosArea goBack={goBack} />\r\n        case 'ColorsArea':\r\n            return <ColorsArea goBack={goBack} />\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\UserActivities.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\UserCards.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\DynamicCardActionModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionLabels.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentPreview.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\menuAction.js",["391"],"import { boardService } from '../../services/boardService.js'\r\nimport { menuService } from '../../services/menuService.js'\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_PHOTOS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\nexport function saveBoardDesc(board, description) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = await boardService.updateBoardDesc(board, description)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        }\r\n        catch (err) {\r\n            console.log('boardActions: err:', err);\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx",["392","393","394"],"import React, { Component } from 'react'\r\nimport { CardList } from \"./CardList\";\r\nimport { connect } from 'react-redux'\r\nimport { loadCards } from '../store/actions/cardActions'\r\nimport { addCard, openLabel, editGroupTitle, copyList, onArchiveList } from '../store/actions/boardAction'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { GroupMenu } from './GroupMenu';\r\nimport { AddCardInput } from './AddCardInput';\r\nimport { DynamicCardActionModal } from './card/DynamicCardActionModal';\r\nimport { DynamicGroupModal } from './DynamicGroupModal';\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        isModalOpen: false,\r\n        modalName:'',\r\n        groupTitle: '',\r\n        card: {\r\n            createdBy: {},\r\n            title: '',\r\n            description: '',\r\n            dueDate: '',\r\n            style: {},\r\n            comments: [],\r\n            checklists: [],\r\n            attachments: [],\r\n            members: [],\r\n            labels: []\r\n        },\r\n        isAdding: false,\r\n        isChangeTitle: false,\r\n        isMenuOpen: false,\r\n        isAddingToTop: false,\r\n        topTitle: ''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { group } = this.props\r\n        this.props.loadCards(group)\r\n        this.setState({ groupTitle: group.title })\r\n    }\r\n\r\n    openTitleBtn = () => {\r\n        this.setState({ isChangeTitle: true })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { card } = this.state\r\n        const { value } = ev.target\r\n        this.setState({\r\n            card: { ...card, title: value }\r\n        })\r\n    }\r\n    onAddCard = async (ev) => {\r\n        const { card, isAddingToTop } = this.state\r\n        const { board, group } = this.props\r\n        if (card.title.length === 0) return\r\n        this.props.addCard(board, group, card, isAddingToTop)\r\n        this.setState({\r\n            card: {\r\n                createdBy: {},\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                createdAt: '',\r\n                dueDate: '',\r\n                style: {},\r\n                comments: [],\r\n                checklists: [],\r\n                attachments: [],\r\n                members: [],\r\n                labels: []\r\n            },\r\n            isAdding: false,\r\n            isAddingToTop: false\r\n        })\r\n    }\r\n\r\n\r\n    handleEditGroupTitle = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ groupTitle: value })\r\n    }\r\n\r\n    discardChanges = (ev) => {\r\n        this.setState({\r\n            card: { ...this.state.card, title: '' }\r\n        })\r\n        ev.currentTarget.blur()\r\n    }\r\n\r\n    editGroupTitle = (ev) => {\r\n        if (ev.key && ev.key !== 'Enter') return\r\n        ev.preventDefault()\r\n        const { board, group } = this.props\r\n        const { groupTitle } = this.state\r\n        this.props.editGroupTitle(board, group, groupTitle)\r\n        this.setState({ isChangeTitle: false })\r\n        ev.currentTarget.blur()\r\n    }\r\n    handleEnter = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault()\r\n            ev.currentTarget?.blur()\r\n            this.onAddCard()\r\n        }\r\n    }\r\n    toggleMenu = () => {\r\n        const { isMenuOpen } = this.state\r\n        this.setState({ isMenuOpen: !isMenuOpen })\r\n\r\n    }\r\n    openInput = (ev) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        this.setState({ isAddingToTop: true, isMenuOpen: false })\r\n    }\r\n\r\n    copyList = () => {\r\n        const { group, board } = this.props\r\n        this.props.copyList(board, group)\r\n        this.setState({ isMenuOpen: false })\r\n    }\r\n\r\n    closeMenu = () => {\r\n        const { isMenuOpen } = this.state\r\n        if (isMenuOpen) this.setState({ isMenuOpen: false })\r\n    }\r\n\r\n    onArchive = () => {\r\n        const { board, group } = this.props\r\n        this.props.onArchiveList(board, group)\r\n\r\n    }\r\n    \r\n    openDynamicModal = (modalName) => {\r\n        this.setState({modalName,\r\n        isMenuOpen:false,\r\n        isModalOpen:true\r\n    })\r\n    \r\n}\r\ncloseModal=()=>{\r\n    this.setState({isModalOpen:false})\r\n    \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { listId, idx, group, board, isLabelOpen, openLabel, updateCardsLocation, isEdit, enterEditMode, exitEditMode } = this.props\r\n        const { cards } = group\r\n        const { groupTitle, isChangeTitle, isMenuOpen, isAddingToTop, isModalOpen,modalName } = this.state\r\n        const { title } = this.state.card\r\n        return (\r\n            <Draggable draggableId={listId} index={idx} >\r\n                {(provided, snapshot) => (\r\n\r\n\r\n                    <div className={(snapshot.isDragging) ? 'group-preview dragging' : 'group-preview'} onClick={this.closeMenu} ref={provided.innerRef} {...provided.draggableProps} >\r\n\r\n                        <div {...provided.dragHandleProps} listId={listId}>\r\n                            <span className=\"group-menu-btn\" onClick={this.toggleMenu} >...</span>\r\n\r\n                            {isMenuOpen && <GroupMenu openDynamicModal={this.openDynamicModal} onArchive={this.onArchive} openInput={this.openInput} copyList={this.copyList} />}\r\n                            {isModalOpen && <DynamicGroupModal  closeModal={this.closeModal} group={group} modalName={modalName} />}\r\n\r\n                            <div className={`hidden-actions-form-container`}>\r\n                                <form className={`hidden-actions-form`}>\r\n                                    <input className=\"group-title-input\" onClick={this.openTitleBtn} onKeyUp={this.editGroupTitle} onChange={this.handleEditGroupTitle} type=\"text\" value={groupTitle} autoComplete=\"off\" />\r\n                                </form>\r\n                                {isChangeTitle && <div className=\"hidden-actions flex\" style={{ marginLeft: '0' }}>\r\n                                    <button type=\"button\" onClick={this.editGroupTitle}  > save </button>\r\n                                    <button onClick={this.discardChanges} className=\"icon\"><CloseSharpIcon /></button>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {isAddingToTop && <AddCardInput isAddingToTop={isAddingToTop} title={title} onShowAddBtn={this.onShowAddBtn} handleEnter={this.handleEnter} onAddCard={this.onAddCard} discardChanges={this.discardChanges} handleChange={this.handleChange} />}\r\n                        <CardList isDragging={snapshot.isDragging} exitEditMode={exitEditMode} enterEditMode={enterEditMode} isEdit={isEdit} listId={listId} cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group} />\r\n                        {!isAddingToTop && <AddCardInput isAddingToTop={isAddingToTop} title={title} onShowAddBtn={this.onShowAddBtn} handleEnter={this.handleEnter} onAddCard={this.onAddCard} discardChanges={this.discardChanges} handleChange={this.handleChange} />}\r\n\r\n\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        cards: state.cardModule.cards,\r\n        board: state.boardModule.board,\r\n        isLabelOpen: state.boardModule.isLabelOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCards,\r\n    addCard,\r\n    openLabel,\r\n    copyList,\r\n    editGroupTitle,\r\n    onArchiveList\r\n}\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview)\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx",["395"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import {menuService} from '../'\r\n//icons:\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n//functions:\r\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\r\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\r\n\r\n//imgs:\r\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\r\n\r\nclass _PhotosArea extends Component {\r\n\r\n    state = {\r\n        photoSearch: '',\r\n        filter: '',\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.state.bgImgs[0]);\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.setFilter(this.state.filterBy)\r\n        })\r\n    }\r\n\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n\r\n    selectImg = (imgSrc) => { this.props.setBackground(this.props.board, { backgroundImage: `url(${imgSrc})` }) }\r\n\r\n    get imgs() {\r\n        const { bgImgs, filter } = this.state\r\n        const regex = new RegExp(filter, 'i')\r\n        return bgImgs.filter(img => regex.test(img.title))\r\n    }\r\n\r\n    render() {\r\n        const imgs = this.imgs\r\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"photo-type\">\r\n                <div className=\"flex search-photo\">\r\n                    <SearchIcon /><input type=\"text\"\r\n                        name=\"filter\"\r\n                        onChange={({ target }) => this.setState({ filter: target.value })}\r\n                        placeholder=\"Photos\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"photos-area\">\r\n                    {this.imgs.map((img, idx) => {\r\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                            onClick={() => { this.selectImg(img.src) }}>\r\n                            <img src={img.src} />\r\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                <span className=\"go-back\" onClick={this.props.goBack}>Go back to backgrounds</span>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        filterBy: state.menuModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBackground,\r\n    setFilter\r\n}\r\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx",["396"],"import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardAttachmentList } from \"./CardAttachmentList\";\r\nimport { CardChecklistList } from \"./CardChecklistList\";\r\nimport { CardCommentList } from \"./CardCommentList\";\r\nimport { CardDescription } from \"./CardDescription\";\r\nimport { LabelList } from \"./LabelList\";\r\nimport { MemberList } from \"./MemberList\";\r\n\r\nclass _CardContent extends Component {\r\n\r\n    render() { \r\n        const {card, save, user, board} = this.props\r\n        return <div onClick={this.props.closeModal} className=\"card-content\">\r\n            <div className=\"flex wrap\">\r\n            <MemberList setCurrModal={this.props.setCurrModal} card={card}/>\r\n            <LabelList setCurrModal={this.props.setCurrModal} card={card}/>\r\n            </div>\r\n            <CardDescription card={card} user={user} save={save}/>\r\n            <CardChecklistList card={card} user={user} save={save}/>\r\n            <CardAttachmentList setCurrModal={this.props.setCurrModal} card={card}/>\r\n            <CardCommentList card={card} user={user} save={save}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardContent = connect(mapStateToProps, mapDispatchToProps)(_CardContent)\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\menuService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddChecklistModal.jsx",["397"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { utilService } from \"../../services/utilService\";\r\n\r\n\r\nexport class AddChecklistModal extends Component{\r\n    state = {\r\n        title: 'Checklist'\r\n    }\r\n\r\n    onAddChecklist = (ev) => {\r\n        if (ev.key && ev.key !== \"Enter\") return \r\n        const { card, save, closeModal } = this.props\r\n        const newChecklist = {\r\n            id: utilService.makeId(),\r\n            title: this.state.title,\r\n            createdAt: Date.now(),\r\n            createdBy: {\r\n                _id: \"u101\",\r\n                fullname: \"Tal Tarablus\",\r\n                imgUrl: \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n            },\r\n            todos: []\r\n        }\r\n        const newCard = {...card, checklists:[...card.checklists, newChecklist]}\r\n        save(newCard, `added checklist ${newChecklist.title} to card`)\r\n        closeModal()\r\n    }\r\n\r\n    handleFocus = (ev) => {\r\n        ev.target.select()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { card, closeModal, style } = this.props\r\n        return (\r\n            <div className=\"checklist-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Add Checklist\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>Title</small>\r\n                <input \r\n                autoComplete=\"off\" \r\n                onFocus={this.handleFocus} \r\n                autoFocus \r\n                type=\"text\" name=\"title\" \r\n                onChange={({ target }) => this.setState({ title: target.value })} value={this.state.title}\r\n                onKeyDown={this.onAddChecklist}\r\n                />\r\n                <button onClick={this.onAddChecklist}>Add</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddAttachmentModal.jsx",["398","399"],"import React, { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { utilService } from \"../../services/utilService\";\r\n\r\n\r\nexport class AddAttachmentModal extends Component {\r\n    state = {\r\n        url: '',\r\n        title: ''\r\n    }\r\n\r\n    onAddAttachment = (ev) => {\r\n        console.log(ev);\r\n        if (!ev.key || ev.key && ev.key === \"Enter\") {\r\n\r\n            const { title, url } = this.state\r\n            const newAttachment = {\r\n                id: utilService.makeId(),\r\n                title: title,\r\n                url: url\r\n            }\r\n            const card = { ...this.props.card, attachments: [...this.props.card.attachments, newAttachment] }\r\n            this.props.save(card, `added attachment to ${newAttachment.title} to card`)\r\n            this.props.closeModal()\r\n        }\r\n    }\r\n\r\n    handleInput = (ev) => {\r\n        const { name, value } = ev.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { closeModal, style } = this.props\r\n        return (\r\n            <div fer className=\"attachments-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Attach From...\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>Attach a link</small>\r\n                <input autoFocus onChange={this.handleInput} onKeyUp={this.onAddAttachment} autoComplete=\"off\" placeholder=\"Paste any link here...\" type=\"text\" name=\"url\" />\r\n                {this.state.url && <small>Link name (optional)</small>}\r\n                {this.state.url && <input ref=\"linkNameRef\" autoComplete=\"off\" onKeyUp={this.onAddAttachment} onChange={this.handleInput} type=\"text\" name=\"title\" />}\r\n                <button onClick={this.onAddAttachment}>Attach</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelListModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberListModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddCoverModal.jsx",["400"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport img1 from '../../assets/bgImgs/image-01.jpg'\r\nimport img2 from '../../assets/bgImgs/image-02.jpg'\r\nimport img3 from '../../assets/bgImgs/image-03.jpg'\r\nimport img4 from '../../assets/bgImgs/image-04.jpg'\r\nimport img5 from '../../assets/bgImgs/image-05.jpg'\r\nimport img6 from '../../assets/bgImgs/image-06.jpg'\r\nimport img7 from '../../assets/bgImgs/image-07.jpg'\r\nimport img8 from '../../assets/bgImgs/image-08.jpg'\r\nimport img9 from '../../assets/bgImgs/image-09.jpg'\r\nimport img10 from '../../assets/bgImgs/image-10.jpg'\r\nimport img11 from '../../assets/bgImgs/image-11.jpg'\r\nimport img12 from '../../assets/bgImgs/image-12.jpg'\r\nimport img13 from '../../assets/bgImgs/image-15.jpg'\r\nimport img14 from '../../assets/bgImgs/image-16.jpg'\r\nimport img15 from '../../assets/bgImgs/image-17.jpg'\r\nimport img16 from '../../assets/bgImgs/image-18.jpg'\r\n\r\nexport class AddCoverModal extends Component {\r\n\r\n    state = {\r\n        filter: ''\r\n    }\r\n\r\n    setColor = (color) => {\r\n        const card = JSON.parse(JSON.stringify(this.props.card))\r\n        const NewCard = { ...card, style: { backgroundColor: color } }\r\n        this.props.save(NewCard, `Set background color`)\r\n        this.props.closeModal()\r\n\r\n    }\r\n\r\n    setImg = (url) => {\r\n        const card = { ...this.props.card, style: { backgroundImage: `url(${url})` } }\r\n        this.props.save(card, `Set background image`)\r\n        this.props.closeModal()\r\n\r\n    }\r\n\r\n    render() {\r\n        const colors = ['lightgray', '#adad85', 'coral', '#ff4d4d', 'crimson', 'yellowgreen', 'teal', '#3385ff',]\r\n        const imgs = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11, img12, img13, img14, img15, img16]\r\n        const { closeModal, style } = this.props\r\n        return (\r\n            <div className=\"cover-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Cover\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>COLORS</small>\r\n                <div className=\"flex wrap space-bt\">\r\n                    {colors.map(color => <div onClick={() => this.setColor(color)} key={Math.random()} className=\"color-box\" style={{ backgroundColor: color }}></div>)}\r\n                </div>\r\n                <small>UNSPLASH</small>\r\n                <div className=\"flex wrap space-bt\">\r\n                    {imgs.map(src => <img onClick={() => this.setImg(src)} key={Math.random()} className=\"color-box\" src={src} />)}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CopyCardModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MoveCardModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx",["401","402","403","404"],"import React, { Component } from 'react'\r\nimport { CardPreview } from \"./CardPreview\";\r\n// ////React DND///\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport class CardList extends Component {\r\n    state = {\r\n        cards: []\r\n    }\r\n    componentDidMount() {\r\n        const { cards } = this.props\r\n        this.setState({ cards })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            const { cards } = this.props\r\n            this.setState({ cards })\r\n        }\r\n    }\r\n\r\n\r\n    handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const { board, currGroup } = this.props\r\n        // const { cards } = this.props\r\n        const { cards } = this.state\r\n        const items = Array.from(cards)\r\n        const [reorderedItem] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n        this.setState({ cards: items })\r\n        this.props.updateCardsLocation(board, currGroup, items)\r\n    }\r\n\r\n    render() {\r\n        const { board,cards, listId, isLabelOpen, openLabel, currGroup,isEdit,enterEditMode,exitEditMode } = this.props\r\n        return (\r\n            <Droppable droppableId={listId} type=\"CARD\">\r\n                {(droppableProvided) => (\r\n\r\n                    <div className={'card-list'} ref={droppableProvided.innerRef} style={{overflow:'none'}} >\r\n                        <div style={{height: '1px'}}></div>\r\n                        {cards.map((card, idx) => {\r\n                            if (card) {\r\n\r\n                                return (\r\n\r\n                                    <CardPreview exitEditMode={exitEditMode} enterEditMode={enterEditMode} isEdit={isEdit} currGroup={currGroup} key={card.id} listId={listId} board={board} idx={idx} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {droppableProvided.placeholder}\r\n          \r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        )\r\n    }\r\n\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupMenu.jsx",["405","406","407"],"import React, { Component } from 'react'\r\nimport {DynamicGroupModal} from '../cmps/DynamicGroupModal'\r\n\r\nexport class GroupMenu extends Component {\r\n\r\n\r\n    state={\r\n        currModal:{\r\n            name:''\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.modalRef = React.createRef();\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        const { openInput, copyList, onArchive,openDynamicModal,closeMenu } = this.props\r\n        const {currModal}=this.state\r\n        return (\r\n            <div className=\"group-menu\">\r\n                <div className=\"group-menu-header\"> list actions</div>\r\n                <hr />\r\n                <div className=\"first-section\">\r\n                    <span className='item' onClick={openInput}>add card...</span>\r\n                    <span className='item' onClick={copyList}>copy list...</span>\r\n                        <span  className='item' onClick={()=>openDynamicModal('move')}> move list...</span>\r\n\r\n\r\n\r\n                    <span className='item'>watch</span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"item\" onClick={()=>openDynamicModal('sort')}>sort by</div>\r\n                <hr />\r\n                <div className=\"first-section\">\r\n                    <span className='item' > move all cards in this list...</span>\r\n                    <span className='item'> archive all cards in this list</span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"item\" onClick={onArchive}>archive this list</div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\AddCardInput.jsx",["408"],"import CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport React, { Component } from 'react'\r\n\r\nexport class AddCardInput extends Component {\r\n\r\n    render() {\r\n\r\n        const {title,onShowAddBtn,handleEnter,onAddCard,discardChanges,handleChange,isAddingToTop} =this.props\r\n        \r\n        return (\r\n\r\n            <div className=\"hidden-actions-form-container\">\r\n                <form action=\"\" className=\"hidden-actions-form\" >\r\n                    <input  onClick={onShowAddBtn} onKeyDown={handleEnter}  value ={title}  type=\"text\" placeholder=\"+ Add another card \" onChange={handleChange} />\r\n                </form> \r\n                {/* className=\"add-card-input-bottom\" */}\r\n\r\n                <div className=\"hidden-actions flex\" style={{margin:'0'}}>\r\n                    <button  onClick={onAddCard}> Add Card</button>\r\n                    <button onClick={discardChanges} className=\"icon\">\r\n                        <CloseSharpIcon />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx",["409"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\"\r\nimport { CardCommentPreview } from \"./CardCommentPreview\"\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { cardService } from \"../../services/cardService\";\r\n\r\nexport class CardCommentList extends Component {\r\n\r\n    state = {\r\n        newCommentTxt: '',\r\n        isShown: false\r\n\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n\r\n    onInput = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddComment = (ev) => {\r\n        if (ev?.key && ev.key === \"Enter\") return\r\n        ev.preventDefault()\r\n        ev.currentTarget.blur()\r\n        const { card, user } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = cardService.getCommentToAdd(txt, user)\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n        this.props.save(newCard)\r\n        this.setState({ newCommentTxt: '' })\r\n    }\r\n\r\n    get data() {\r\n        const { comments, activities } = this.props.card\r\n        if (!this.state.isShown) return comments\r\n        else {\r\n            const data = [...comments, ...activities]\r\n            return data.sort((a, b) => b.createdAt - a.createdAt)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isShown } = this.state\r\n        return <div className=\"card-comments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                <div className=\"flex align-start\">\r\n                    <FormatListBulletedIcon />\r\n                    <h3>Activity</h3>\r\n                </div>\r\n                <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>\r\n            </header>\r\n            <div className={`hidden-actions-form-container`}>\r\n                <form onSubmit={(ev => ev.preventDefault())} className={`hidden-actions-form`}>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        onChange={this.onInput}\r\n                        value={this.state.newCommentTxt}\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Write a comment..\"\r\n                        name=\"newCommentTxt\"\r\n                    />\r\n                </form>\r\n                <div className=\"hidden-actions flex\">\r\n                    <button type=\"button\"\r\n                        className={this.state.newCommentTxt ? '' : 'disabled'}\r\n                        onClick={this.onAddComment}\r\n                    >\r\n                        Save\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n            <CardCommentPreview data={this.data} />\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberList.jsx",["410","411"],"import React, { Component } from \"react\";\r\nimport { MyAvatar } from \"../MyAvatar\";\r\nimport { MemberListModal } from \"./MemberListModal\";\r\n\r\n\r\nexport function MemberList(props) {\r\n    const containerRef = React.createRef()\r\n\r\n    function openModal(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const div = containerRef.current\r\n        const top = div.offsetTop + 50 + div.offsetParent.offsetTop\r\n        const left = ev.target.offsetLeft + ev.target.offsetParent.offsetLeft\r\n        props.setCurrModal({ name: 'members', style: { top , left} })\r\n    }\r\n    const { card } = props\r\n\r\n    return (\r\n        <div className=\"card-members\">\r\n            <h5>MEMBERS</h5>\r\n            <div ref={containerRef} className=\"card-members flex\">\r\n                {card.members.map(user => <div onClick={openModal}><MyAvatar key={Math.random()} user={user} /></div>)}\r\n                <div onClick={openModal} className=\"add-user-button\">\r\n                    <MyAvatar user={{ fullname: '+' }} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx",["412","413"],"import React, { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport CallMadeOutlinedIcon from '@material-ui/icons/CallMadeOutlined';\r\nimport { CallReceived } from \"@material-ui/icons\";\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const { card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = { txt, createdAt: Date.now(), createdBy: {}, id: utilService.makeId() }\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    openModal = (ev) => {\r\n        const top = ev.target.offsetTop + 40 + ev.target.offsetParent.offsetTop\r\n        this.props.setCurrModal({name: 'attachment', style: {left: 'calc(50% - 350px)', top}})\r\n    }\r\n\r\n\r\n    render() {\r\n        const { attachments } = this.props.card\r\n        if (!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <header className=\"flex\">\r\n                <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />\r\n                <h3>Attachments</h3>\r\n            </header>\r\n            {attachments.map(att =>\r\n                <a key={att.id} target=\"_blank\" href={att.url}>\r\n                    <div className=\"attachment flex align-center\">\r\n                        <div>LINK</div>\r\n                        <div className=\"flex align-start\">\r\n                            <h4>{att.title || att.url}</h4>\r\n                            <CallMadeOutlinedIcon />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )}\r\n            <button onClick={this.openModal}>Add an attachment</button>\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelList.jsx",["414"],"import React, { Component } from \"react\";\r\n\r\nexport function LabelList(props) {\r\n\r\n    const containerRef = React.createRef()\r\n\r\n    function openModal(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const div = containerRef.current\r\n        const top = div.offsetTop + 50 + div.offsetParent.offsetTop\r\n        const left = ev.target.offsetLeft + ev.target.offsetParent.offsetLeft\r\n        props.setCurrModal({ name: 'labels', style: { top, left } })\r\n    }\r\n\r\n    const { card } = props\r\n    return (\r\n        <div className=\"card-labels\">\r\n            <h5>LABELS</h5> \r\n            <div className=\"label-container flex\" ref={containerRef}>\r\n                {card.labels.map(label =>\r\n                    <div onClick={openModal} key={label.id} className={`label flex center`} style={{ backgroundColor: label.color }}>\r\n                        {label.title}\r\n                    </div>\r\n                )}\r\n                <div onClick={openModal} className=\"add-label flex center\">+</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklistList.jsx",["415","416"],"import { DragDropContext, Droppable } from \"react-beautiful-dnd\"\r\nimport { connect } from \"react-redux\"\r\nimport { cardService } from \"../../services/cardService\"\r\nimport { handleTodoDrag } from \"../../store/actions/boardAction\"\r\nimport { CardChecklist } from \"./CardChecklist\"\r\n\r\nexport function CardChecklistList(props) {\r\n    const { card, board } = props\r\n\r\n    async function updateChecklist(checklist, todo) {\r\n        let newCard = await cardService.updateChecklistTodo(card, checklist, todo)\r\n        props.save(newCard, `Edited ${checklist.title} checklist`)\r\n    }\r\n\r\n    async function onRemoveChecklist(checklist) {\r\n        let newCard = await cardService.removeChecklist(card, checklist)\r\n        props.save(newCard, `removed ${checklist.title} checklist`)\r\n    }\r\n\r\n    function handleDrag(res) {\r\n            const newCard =  cardService.handleTodoDrag(board, card, res) \r\n            props.save(newCard,null)\r\n        \r\n    }\r\n\r\n    const { checklists } = card\r\n    return (\r\n\r\n        <DragDropContext onDragEnd={handleDrag}>\r\n            <Droppable droppableId=\"checklistList\" type=\"cheklist\" direction=\"vertical\">\r\n                {provided => (\r\n\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className=\"\">\r\n                        {checklists.map((checklist, idx) => <CardChecklist key={checklist.id} removeChecklist={() => onRemoveChecklist(checklist)} saveTodo={updateChecklist} checklist={checklist} idx={idx} checklistId={checklist.id} />)}\r\n                        {provided.placeholder}\r\n\r\n\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx",["417","418","419"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklist.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardEdit.jsx",["420","421","422","423"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport { Archive } from '@material-ui/icons';\r\nimport { DynamicCardActionModal } from \"./card/DynamicCardActionModal\";\r\nimport {cardService} from '../services/cardService'\r\n\r\n\r\n\r\n\r\nexport class CardEdit extends Component {\r\n    state={\r\n        editPos:100,\r\n        isModalOpen:false,\r\n        currModal:{\r\n            name:'',\r\n            style:{\r\n                position:'absolute',\r\n                left:'257px',\r\n                'z-index':'20'\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        const {currGroup,board} =this.props\r\n        const idx = board.groups.findIndex(group=>group.id===currGroup.id)\r\n            const pos = idx+1\r\n            const finalPos=266*pos        \r\n        this.setState({\r\n            // currModal:{...this.state.currModal, style:{...this.state.currModal.style,left:`${finalPos}px`}}\r\n        })\r\n        this.findCardPos()\r\n    }\r\n\r\n\r\n\r\n    findCardPos=()=>{\r\n        const {editPos}=this.state\r\n        const {currGroup,card}=this.props\r\n        const idx = currGroup.cards.findIndex( groupCard=>groupCard.id===card.id)\r\n        var pos= editPos*idx\r\n        // if(card.labels.length>0 || card.comments.length>0||card.description.length>0) pos+=120\r\n        if(idx===0){\r\n            this.setState({editPos:40})\r\n        }\r\n        else if(idx=== 1)this.setState({editPos:120})\r\n        else if(pos>=160)this.setState({editPos:160}) \r\n        else{\r\n            this.setState({editPos:pos})\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    edit=(ev)=>{\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n    }\r\n    \r\n    openModal=(currName)=>{\r\n        this.setState({isModalOpen:true,\r\n        currModal:{...this.state.currModal,name:currName}\r\n        })\r\n    }\r\n    closeModal=()=>{\r\n        this.setState({isModalOpen:false})\r\n    }\r\n\r\n    \r\n    saveCardChanges = async (card, txt) => {\r\n        var { board, loggedUser } = this.props\r\n        if (txt) {\r\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\r\n            board = {...board, activities: [activity, ...board.activities]}\r\n        }\r\n        await this.props.updateBoardCard(board, card)\r\n        this.loadCard()\r\n    }\r\n    \r\n    loadCard = () => {\r\n        const { board } = this.props\r\n        const { cardId } = this.props.card.id\r\n        if (cardId && board.groups) {\r\n            const card = cardService.getCardById(board, cardId)\r\n            this.setState({ card })\r\n        } else this.setState({ card: null })\r\n    }\r\n\r\n    render() {\r\n        const {editPos,currModal,isModalOpen}=this.state\r\n        const {copyList, labels, isEdit, updateBoardCard, card, isLabelOpen,\r\n                board, handleChange, title, enterEditMode,exitEditMode,onArchiveCard,onSave } = this.props\r\n             \r\n            \r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={this.edit} className={`${isEdit ? 'edit' : ''}`}  style={{top:`${editPos}px`}}>\r\n\r\n                    <div className=\"edit-container\">\r\n\r\n                        <div className={`card-preview ${isEdit ? 'edit' : ''} `}  >\r\n                            <div className=\"label-container\">\r\n                                {labels.map((label, idx) => {\r\n                                    return <div onClick={() => this.onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\r\n                                        {isLabelOpen && label.title}\r\n                                    </div>\r\n                                })\r\n                                }\r\n                            </div>\r\n                            <div className=\"edit-and-title\">\r\n                                <Link to={`/board/${board._id}/${card.id}`}>\r\n                                    <div>\r\n                                        <form action=\"\" onSubmit=\"return false\">\r\n\r\n                                            <input disabled={!isEdit} onChange={handleChange}\r\n                                                onClick={(ev) => {\r\n                                                    ev.preventDefault()\r\n                                                }}\r\n                                                type=\"text\" value={title} />\r\n                                        </form>\r\n                                    </div>\r\n                                </Link>\r\n                                <span className=\"edit-icon\" onClick={(ev) => {\r\n                                }} onClick={(ev)=>enterEditMode(ev,card.id)} >\r\n                                    <EditIcon />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"card-icons\">\r\n                                {card.description && <SubjectIcon />}\r\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        { <div className={'edit-menu'}>\r\n                            <div className=\"edit-menu-btn\"> <PaymentIcon className=\"edit-menu-icons rotate\" /> <Link to={`/board/${board.id}/${card.id}`}>     Open Card  </Link> </div>\r\n                            <div className=\"edit-menu-btn\" onClick={()=>this.openModal('labels')} >  <LabelOutlinedIcon className=\"edit-menu-icons\"  />  Edit labels </div>\r\n                            <div className=\"edit-menu-btn\" onClick={()=>this.openModal('members')} > <PersonOutlineIcon className=\"edit-menu-icons\"/> change members</div>\r\n                            <div className=\"edit-menu-btn\" onClick={()=>this.openModal('move')}> <ArrowRightAltIcon className=\"edit-menu-icons\"/> move  </div>\r\n                            <div className=\"edit-menu-btn\"  onClick={copyList} > <PaymentIcon className=\"edit-menu-icons rotate\"/> copy </div>\r\n                            <div className=\"edit-menu-btn\" > <AccessTimeIcon className=\"edit-menu-icons\"/> change due date </div>\r\n                            <div className=\"edit-menu-btn\" onClick={onArchiveCard}> <ArchiveOutlinedIcon className=\"edit-menu-icons\"/> archive </div>\r\n                        </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div className='card-save-btn'>\r\n                        <button   onClick={ onSave} style={{cursor:'pointer'}} >Save</button>\r\n                    </div>\r\n\r\n               {isModalOpen&& <div className=\"card-edit-modals\" >   \r\n                    <DynamicCardActionModal closeModal={this.closeModal} updateBoardCard={updateBoardCard} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\r\n                </div>\r\n                }\r\n\r\n\r\n\r\n                </div >\r\n            </React.Fragment >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardDetails.jsx",["424","425","426","427"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Todo.jsx",["428"],"import React, { Component } from \"react\"\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\n\r\nexport class Todo extends Component {\r\n    state = {\r\n        todo: {\r\n            title: '',\r\n            isDone: false\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { todo } = this.props\r\n        if (todo) this.setState({ todo })\r\n        this.refInput = React.createRef()\r\n    }\r\n\r\n    handelInput = (ev) => {\r\n        const { name, value} = ev.target\r\n        this.setState(prevState => ({ todo: { ...prevState.todo, [name]: value } }))\r\n    }\r\n\r\n    toggleIsDone = (ev) => {\r\n        ev.target.blur()\r\n        const { checked } = ev.target\r\n        const {todo} = this.state\r\n        todo.isDone = checked\r\n        console.log(todo);\r\n        this.setState({ todo })\r\n        this.props.saveTodo(todo)\r\n    }\r\n\r\n    discardChanges = () => {\r\n        const { todo } = this.props\r\n        if (todo) this.setState({ todo })\r\n        else {\r\n            this.props.toggleAdd()\r\n            this.setState({ todo: { title: '', isDone: false } })\r\n        }\r\n    }\r\n\r\n    saveTodo = (ev) => {\r\n        if (ev.key !== \"Enter\") return\r\n        ev.preventDefault()\r\n\r\n        const { todo } = this.state\r\n        if (todo.id) ev.currentTarget.blur()\r\n        if (!todo.title) return\r\n        this.props.saveTodo(todo)\r\n        if (todo.id) {\r\n            this.refInput.current.blur()\r\n        } else {\r\n            this.setState({todo: { title: '', isDone: false } })\r\n            this.refInput.current.focus()\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const isAdd = !this.props.todo\r\n        const { isInputFocused } = this.state\r\n\r\n\r\n\r\n        return (\r\n            <section className=\"card-todo-preview flex align-start\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    onClick={this.toggleIsDone}\r\n                    name=\"isDone\"\r\n                    checked={this.props.todo?.isDone}\r\n                    style={{ visibility: isAdd ? 'hidden' : 'visible' }}\r\n                    />\r\n            <div className={`hidden-actions-form-container  ${isAdd ? 'add' : ''}`}>\r\n                <form onKeyDown={this.saveTodo} className={`hidden-actions-form ${isAdd ? 'add' : ''}`}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={this.handelInput}\r\n                        ref={this.refInput}\r\n                        name=\"title\" placeholder=\"Add an item\"\r\n                        value={this.state.todo.title}\r\n                        autoComplete=\"off\"\r\n                        />\r\n                </form>\r\n                <div className=\"hidden-actions flex\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={this.saveTodo}\r\n                        >\r\n                        {isAdd ? 'Add' : 'Save'}\r\n                    </button>\r\n                    <button\r\n                        onClick={this.discardChanges}\r\n                        className=\"icon\"\r\n                        >\r\n                        <CloseSharpIcon />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        )\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\LinearProgressBar.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\DynamicGroupModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupModals\\MoveGroupModal.jsx",["429","430"],"import { TableCell } from '@material-ui/core';\r\nimport React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\nexport class MoveGroupModal extends Component {\r\n\r\n    state = {\r\n        destinationBoard: null,\r\n        position: 0,\r\n    }\r\n\r\n    handleBoardSelect = async (ev) => {\r\n        const { value, name } = ev.target\r\n        if (name === 'board' && value.length > 5) {\r\n            const board = await boardService.getById(value)\r\n            this.setState({ destinationBoard: board })\r\n        }\r\n        if (name === 'position') {\r\n            this.setState({ position: value })\r\n        }\r\n    }\r\n    moveGroup = () => {\r\n        const { destinationBoard, position } = this.state\r\n        const {boards, group, moveGroup, board,closeModal } = this.props\r\n        moveGroup(boards,board, group, destinationBoard, position)\r\n        closeModal()\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        const { destinationBoard } = this.state\r\n        return (\r\n            <div className=\"group-menu sort\" style={{ height: '220px' }} >\r\n                <div className=\"flex justify-center\">\r\n                    Move group\r\n                </div>\r\n\r\n                <hr />\r\n                <div >\r\n                    <div style={{ backgroundColor: 'rgba(9,30,66,.04)', borderRadius: '3px', padding: '4px', color: 'black' }}>\r\n\r\n                        <label htmlFor=\"\">board</label>\r\n                        <select className=\"move-select-btn\" onChange={this.handleBoardSelect} name=\"board\">\r\n                            <option value=\"\">board</option>\r\n                            {boards ? boards.map(board => <option value={board._id} >{board.title} </option>) : <option>  board</option>}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div style={{ backgroundColor: 'rgba(9,30,66,.04)', borderRadius: '3px', padding: '4px', color: 'black' }}>\r\n                        <label htmlFor=\"\">positon</label>\r\n                        <select className=\"move-select-btn\" onChange={this.handleBoardSelect} name=\"position\">\r\n                            {destinationBoard ? destinationBoard.groups.map((group, idx) => <option value={idx} >{idx}</option>) : <option>  0</option>}\r\n                        </select>\r\n                    </div>\r\n\r\n                </div>\r\n                <button className=\"green\" style={{ backgroundColor: '#5aac44', color: 'white' }} onClick={this.moveGroup} >Move</button>\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupModals\\SortGroupModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\BoardsPick.jsx",["431","432","433"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\HomePickModal.jsx",[],{"ruleId":"434","replacedBy":"435"},{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","severity":1,"message":"439","line":3,"column":10,"nodeType":"440","messageId":"441","endLine":3,"endColumn":19},{"ruleId":"438","severity":1,"message":"442","line":4,"column":10,"nodeType":"440","messageId":"441","endLine":4,"endColumn":22},{"ruleId":"438","severity":1,"message":"443","line":7,"column":10,"nodeType":"440","messageId":"441","endLine":7,"endColumn":20},{"ruleId":"444","severity":1,"message":"445","line":90,"column":86,"nodeType":"446","endLine":90,"endColumn":111},{"ruleId":"438","severity":1,"message":"447","line":2,"column":16,"nodeType":"440","messageId":"441","endLine":2,"endColumn":23},{"ruleId":"438","severity":1,"message":"448","line":2,"column":10,"nodeType":"440","messageId":"441","endLine":2,"endColumn":21},{"ruleId":"438","severity":1,"message":"449","line":227,"column":13,"nodeType":"440","messageId":"441","endLine":227,"endColumn":18},{"ruleId":"438","severity":1,"message":"450","line":1,"column":10,"nodeType":"440","messageId":"441","endLine":1,"endColumn":14},{"ruleId":"451","severity":1,"message":"452","line":92,"column":9,"nodeType":"453","messageId":"454","endLine":92,"endColumn":32},{"ruleId":"455","severity":1,"message":"456","line":191,"column":17,"nodeType":"440","messageId":"457","endLine":191,"endColumn":23},{"ruleId":"455","severity":1,"message":"456","line":196,"column":13,"nodeType":"440","messageId":"457","endLine":196,"endColumn":19},{"ruleId":"438","severity":1,"message":"458","line":279,"column":12,"nodeType":"440","messageId":"441","endLine":279,"endColumn":21},{"ruleId":"438","severity":1,"message":"459","line":6,"column":8,"nodeType":"440","messageId":"441","endLine":6,"endColumn":16},{"ruleId":"438","severity":1,"message":"460","line":7,"column":8,"nodeType":"440","messageId":"441","endLine":7,"endColumn":25},{"ruleId":"438","severity":1,"message":"461","line":18,"column":8,"nodeType":"440","messageId":"441","endLine":18,"endColumn":26},{"ruleId":"438","severity":1,"message":"462","line":20,"column":8,"nodeType":"440","messageId":"441","endLine":20,"endColumn":18},{"ruleId":"438","severity":1,"message":"463","line":63,"column":19,"nodeType":"440","messageId":"441","endLine":63,"endColumn":25},{"ruleId":"438","severity":1,"message":"450","line":2,"column":10,"nodeType":"440","messageId":"441","endLine":2,"endColumn":14},{"ruleId":"438","severity":1,"message":"464","line":6,"column":8,"nodeType":"440","messageId":"441","endLine":6,"endColumn":16},{"ruleId":"438","severity":1,"message":"465","line":12,"column":9,"nodeType":"440","messageId":"441","endLine":12,"endColumn":24},{"ruleId":"466","severity":1,"message":"467","line":17,"column":50,"nodeType":"468","messageId":"469","endLine":17,"endColumn":51},{"ruleId":"470","severity":1,"message":"471","line":50,"column":29,"nodeType":"472","endLine":50,"endColumn":54},{"ruleId":"438","severity":1,"message":"473","line":9,"column":8,"nodeType":"440","messageId":"441","endLine":9,"endColumn":24},{"ruleId":"470","severity":1,"message":"471","line":37,"column":29,"nodeType":"472","endLine":37,"endColumn":75},{"ruleId":"470","severity":1,"message":"471","line":43,"column":29,"nodeType":"472","endLine":43,"endColumn":75},{"ruleId":"474","severity":1,"message":"475","line":61,"column":20,"nodeType":"472","endLine":61,"endColumn":24},{"ruleId":"438","severity":1,"message":"476","line":2,"column":10,"nodeType":"440","messageId":"441","endLine":2,"endColumn":21},{"ruleId":"438","severity":1,"message":"477","line":6,"column":10,"nodeType":"440","messageId":"441","endLine":6,"endColumn":25},{"ruleId":"438","severity":1,"message":"478","line":6,"column":27,"nodeType":"440","messageId":"441","endLine":6,"endColumn":36},{"ruleId":"438","severity":1,"message":"479","line":10,"column":10,"nodeType":"440","messageId":"441","endLine":10,"endColumn":32},{"ruleId":"470","severity":1,"message":"471","line":105,"column":29,"nodeType":"472","endLine":105,"endColumn":50},{"ruleId":"438","severity":1,"message":"449","line":13,"column":34,"nodeType":"440","messageId":"441","endLine":13,"endColumn":39},{"ruleId":"438","severity":1,"message":"480","line":36,"column":17,"nodeType":"440","messageId":"441","endLine":36,"endColumn":21},{"ruleId":"481","severity":1,"message":"482","line":14,"column":21,"nodeType":"483","messageId":"484","endLine":14,"endColumn":23},{"ruleId":"481","severity":1,"message":"482","line":14,"column":31,"nodeType":"483","messageId":"484","endLine":14,"endColumn":33},{"ruleId":"470","severity":1,"message":"471","line":58,"column":38,"nodeType":"472","endLine":58,"endColumn":130},{"ruleId":"438","severity":1,"message":"485","line":4,"column":8,"nodeType":"440","messageId":"441","endLine":4,"endColumn":22},{"ruleId":"438","severity":1,"message":"477","line":6,"column":10,"nodeType":"440","messageId":"441","endLine":6,"endColumn":25},{"ruleId":"438","severity":1,"message":"486","line":6,"column":38,"nodeType":"440","messageId":"441","endLine":6,"endColumn":47},{"ruleId":"487","severity":1,"message":"488","line":46,"column":48,"nodeType":"489","messageId":"490","endLine":46,"endColumn":50},{"ruleId":"438","severity":1,"message":"491","line":2,"column":9,"nodeType":"440","messageId":"441","endLine":2,"endColumn":26},{"ruleId":"438","severity":1,"message":"492","line":25,"column":65,"nodeType":"440","messageId":"441","endLine":25,"endColumn":74},{"ruleId":"438","severity":1,"message":"493","line":26,"column":16,"nodeType":"440","messageId":"441","endLine":26,"endColumn":25},{"ruleId":"438","severity":1,"message":"494","line":8,"column":85,"nodeType":"440","messageId":"441","endLine":8,"endColumn":98},{"ruleId":"438","severity":1,"message":"495","line":2,"column":10,"nodeType":"440","messageId":"441","endLine":2,"endColumn":21},{"ruleId":"438","severity":1,"message":"439","line":1,"column":17,"nodeType":"440","messageId":"441","endLine":1,"endColumn":26},{"ruleId":"438","severity":1,"message":"496","line":3,"column":10,"nodeType":"440","messageId":"441","endLine":3,"endColumn":25},{"ruleId":"438","severity":1,"message":"497","line":5,"column":10,"nodeType":"440","messageId":"441","endLine":5,"endColumn":22},{"ruleId":"498","severity":1,"message":"499","line":34,"column":17,"nodeType":"472","endLine":34,"endColumn":64},{"ruleId":"438","severity":1,"message":"439","line":1,"column":17,"nodeType":"440","messageId":"441","endLine":1,"endColumn":26},{"ruleId":"438","severity":1,"message":"500","line":2,"column":10,"nodeType":"440","messageId":"441","endLine":2,"endColumn":17},{"ruleId":"438","severity":1,"message":"501","line":4,"column":10,"nodeType":"440","messageId":"441","endLine":4,"endColumn":24},{"ruleId":"438","severity":1,"message":"477","line":5,"column":10,"nodeType":"440","messageId":"441","endLine":5,"endColumn":25},{"ruleId":"438","severity":1,"message":"478","line":5,"column":27,"nodeType":"440","messageId":"441","endLine":5,"endColumn":36},{"ruleId":"438","severity":1,"message":"502","line":25,"column":30,"nodeType":"440","messageId":"441","endLine":25,"endColumn":41},{"ruleId":"438","severity":1,"message":"503","line":14,"column":10,"nodeType":"440","messageId":"441","endLine":14,"endColumn":17},{"ruleId":"438","severity":1,"message":"504","line":41,"column":19,"nodeType":"440","messageId":"441","endLine":41,"endColumn":27},{"ruleId":"438","severity":1,"message":"505","line":106,"column":59,"nodeType":"440","messageId":"441","endLine":106,"endColumn":71},{"ruleId":"444","severity":1,"message":"445","line":138,"column":36,"nodeType":"446","endLine":138,"endColumn":77},{"ruleId":"438","severity":1,"message":"460","line":8,"column":8,"nodeType":"440","messageId":"441","endLine":8,"endColumn":25},{"ruleId":"438","severity":1,"message":"506","line":44,"column":37,"nodeType":"440","messageId":"441","endLine":44,"endColumn":43},{"ruleId":"438","severity":1,"message":"507","line":44,"column":84,"nodeType":"440","messageId":"441","endLine":44,"endColumn":96},{"ruleId":"438","severity":1,"message":"508","line":44,"column":105,"nodeType":"440","messageId":"441","endLine":44,"endColumn":118},{"ruleId":"438","severity":1,"message":"509","line":63,"column":17,"nodeType":"440","messageId":"441","endLine":63,"endColumn":31},{"ruleId":"438","severity":1,"message":"510","line":1,"column":10,"nodeType":"440","messageId":"441","endLine":1,"endColumn":19},{"ruleId":"438","severity":1,"message":"500","line":3,"column":10,"nodeType":"440","messageId":"441","endLine":3,"endColumn":17},{"ruleId":"438","severity":1,"message":"511","line":6,"column":8,"nodeType":"440","messageId":"441","endLine":6,"endColumn":25},{"ruleId":"438","severity":1,"message":"512","line":7,"column":8,"nodeType":"440","messageId":"441","endLine":7,"endColumn":18},{"ruleId":"444","severity":1,"message":"445","line":109,"column":81,"nodeType":"446","endLine":109,"endColumn":96},"no-native-reassign",["513"],"no-negated-in-lhs",["514"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'BoardPreview' is defined but never used.","'BoardsPick' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NavLink' is defined but never used.","'cardService' is defined but never used.","'board' is assigned a value but never used.","'Link' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'labels' is already defined.","redeclared","'allBoards' is assigned a value but never used.","'EditIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'LabelImportantIcon' is defined but never used.","'SearchIcon' is defined but never used.","'cardId' is assigned a value but never used.","'RoomIcon' is defined but never used.","'AddDueDateModal' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ArrowBackIosIcon' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'menuService' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'DynamicCardActionModal' is defined but never used.","'card' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'CloseSharpIcon' is defined but never used.","'Draggable' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'DynamicGroupModal' is defined but never used.","'closeMenu' is assigned a value but never used.","'currModal' is assigned a value but never used.","'isAddingToTop' is assigned a value but never used.","'utilService' is defined but never used.","'MemberListModal' is defined but never used.","'CallReceived' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'connect' is defined but never used.","'handleTodoDrag' is defined but never used.","'isModalOpen' is assigned a value but never used.","'Archive' is defined but never used.","'finalPos' is assigned a value but never used.","'exitEditMode' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'EnterEditMode' is assigned a value but never used.","'isInputFocused' is assigned a value but never used.","'TableCell' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'homeImgSrc' is defined but never used.","no-global-assign","no-unsafe-negation"]