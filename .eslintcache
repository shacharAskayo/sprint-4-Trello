[{"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/index.js":"1","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/serviceWorkerRegistration.js":"2","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/reportWebVitals.js":"3","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/store.js":"4","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/App.jsx":"5","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardList.jsx":"6","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardPreview.jsx":"7","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Home.jsx":"8","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/index.js":"9","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/boardAction.js":"10","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Board.jsx":"11","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMapShow.jsx":"12","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/httpService.js":"13","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/boardService.js":"14","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/reviewReducer.js":"15","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/boardReducer.js":"16","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/systemReducer.js":"17","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/userReducer.js":"18","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/menuReducer.js":"19","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/cardReducer.js":"20","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupList.jsx":"21","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardHeader.jsx":"22","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Card.jsx":"23","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Header.jsx":"24","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/Menu.jsx":"25","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/utilService.js":"26","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/cardService.js":"27","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardMenu.jsx":"28","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/DynamicCardActionModal.jsx":"29","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionBackground.jsx":"30","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivitiesList.jsx":"31","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionSearch.jsx":"32","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionAbout.jsx":"33","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionStickers.jsx":"34","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionMore.jsx":"35","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentPreview.jsx":"36","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupPreview.jsx":"37","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardContent.jsx":"38","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuButler.jsx":"39","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuPowerups.jsx":"40","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/MyAvatar.jsx":"41","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/ColorsArea.jsx":"42","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/userActions.js":"43","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMap.jsx":"44","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivity.jsx":"45","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/menuAction.js":"46","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/PhotosArea.jsx":"47","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddChecklistModal.jsx":"48","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberListModal.jsx":"49","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelListModal.jsx":"50","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddAttachmentModal.jsx":"51","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/menuService.js":"52","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/cardActions.js":"53","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/LabelSearchBy.jsx":"54","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/UserSearchBy.jsx":"55","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuMore/SectionLabels.jsx":"56","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/userService.js":"57","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberList.jsx":"58","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelList.jsx":"59","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardDescription.jsx":"60","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklistList.jsx":"61","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentList.jsx":"62","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardAttachmentList.jsx":"63","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardList.jsx":"64","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklist.jsx":"65","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPreview.jsx":"66","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Todo.jsx":"67","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/LinearProgressBar.jsx":"68","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPrev2.jsx":"69","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPrev.jsx":"70","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddDueDateModal.jsx":"71","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddCoverModal.jsx":"72","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/socketService.js":"73"},{"size":910,"mtime":1610480913306,"results":"74","hashOfConfig":"75"},{"size":5064,"mtime":1610480913306,"results":"76","hashOfConfig":"75"},{"size":364,"mtime":1610480913306,"results":"77","hashOfConfig":"75"},{"size":312,"mtime":1610480913309,"results":"78","hashOfConfig":"75"},{"size":759,"mtime":1611001773187,"results":"79","hashOfConfig":"75"},{"size":937,"mtime":1610824345197,"results":"80","hashOfConfig":"75"},{"size":351,"mtime":1610581763946,"results":"81","hashOfConfig":"75"},{"size":3450,"mtime":1610987701282,"results":"82","hashOfConfig":"75"},{"size":544,"mtime":1610806693749,"results":"83","hashOfConfig":"75"},{"size":3291,"mtime":1610996617717,"results":"84","hashOfConfig":"75"},{"size":1486,"mtime":1611001759545,"results":"85","hashOfConfig":"75"},{"size":1225,"mtime":1610892226053,"results":"86","hashOfConfig":"75"},{"size":1038,"mtime":1610996744408,"results":"87","hashOfConfig":"75"},{"size":4815,"mtime":1611003030651,"results":"88","hashOfConfig":"75"},{"size":647,"mtime":1610480913309,"results":"89","hashOfConfig":"75"},{"size":707,"mtime":1610992203896,"results":"90","hashOfConfig":"75"},{"size":309,"mtime":1610480913309,"results":"91","hashOfConfig":"75"},{"size":790,"mtime":1610581763949,"results":"92","hashOfConfig":"75"},{"size":268,"mtime":1610806693749,"results":"93","hashOfConfig":"75"},{"size":360,"mtime":1610581763949,"results":"94","hashOfConfig":"75"},{"size":3819,"mtime":1610989856797,"results":"95","hashOfConfig":"75"},{"size":635,"mtime":1610811589401,"results":"96","hashOfConfig":"75"},{"size":3978,"mtime":1610921217256,"results":"97","hashOfConfig":"75"},{"size":1945,"mtime":1610892226052,"results":"98","hashOfConfig":"75"},{"size":7300,"mtime":1610892811065,"results":"99","hashOfConfig":"75"},{"size":656,"mtime":1610647470146,"results":"100","hashOfConfig":"75"},{"size":2486,"mtime":1610967567642,"results":"101","hashOfConfig":"75"},{"size":2482,"mtime":1610965617486,"results":"102","hashOfConfig":"75"},{"size":2051,"mtime":1610927385849,"results":"103","hashOfConfig":"75"},{"size":2182,"mtime":1610806693744,"results":"104","hashOfConfig":"75"},{"size":583,"mtime":1610892226053,"results":"105","hashOfConfig":"75"},{"size":1484,"mtime":1610892226055,"results":"106","hashOfConfig":"75"},{"size":3884,"mtime":1610892226054,"results":"107","hashOfConfig":"75"},{"size":2116,"mtime":1610892226055,"results":"108","hashOfConfig":"75"},{"size":1044,"mtime":1610892226054,"results":"109","hashOfConfig":"75"},{"size":501,"mtime":1610907329931,"results":"110","hashOfConfig":"75"},{"size":6703,"mtime":1610989255475,"results":"111","hashOfConfig":"75"},{"size":1367,"mtime":1610963625637,"results":"112","hashOfConfig":"75"},{"size":232,"mtime":1610806693742,"results":"113","hashOfConfig":"75"},{"size":499,"mtime":1610806693742,"results":"114","hashOfConfig":"75"},{"size":529,"mtime":1610837616890,"results":"115","hashOfConfig":"75"},{"size":1519,"mtime":1610806693743,"results":"116","hashOfConfig":"75"},{"size":1761,"mtime":1610581763949,"results":"117","hashOfConfig":"75"},{"size":234,"mtime":1610892226053,"results":"118","hashOfConfig":"75"},{"size":2094,"mtime":1610892226053,"results":"119","hashOfConfig":"75"},{"size":664,"mtime":1610892226057,"results":"120","hashOfConfig":"75"},{"size":6072,"mtime":1610892226054,"results":"121","hashOfConfig":"75"},{"size":1904,"mtime":1610921263752,"results":"122","hashOfConfig":"75"},{"size":2524,"mtime":1610921316461,"results":"123","hashOfConfig":"75"},{"size":2373,"mtime":1610921303561,"results":"124","hashOfConfig":"75"},{"size":1898,"mtime":1610921279533,"results":"125","hashOfConfig":"75"},{"size":293,"mtime":1610892226057,"results":"126","hashOfConfig":"75"},{"size":680,"mtime":1610584712043,"results":"127","hashOfConfig":"75"},{"size":2272,"mtime":1610892226056,"results":"128","hashOfConfig":"75"},{"size":290,"mtime":1610892226056,"results":"129","hashOfConfig":"75"},{"size":565,"mtime":1610892226055,"results":"130","hashOfConfig":"75"},{"size":2496,"mtime":1610585915650,"results":"131","hashOfConfig":"75"},{"size":847,"mtime":1610886458820,"results":"132","hashOfConfig":"75"},{"size":870,"mtime":1610882794022,"results":"133","hashOfConfig":"75"},{"size":2170,"mtime":1610875400976,"results":"134","hashOfConfig":"75"},{"size":856,"mtime":1610756795918,"results":"135","hashOfConfig":"75"},{"size":2745,"mtime":1610892226068,"results":"136","hashOfConfig":"75"},{"size":1648,"mtime":1610963872695,"results":"137","hashOfConfig":"75"},{"size":3727,"mtime":1610886838581,"results":"138","hashOfConfig":"75"},{"size":1528,"mtime":1610883565145,"results":"139","hashOfConfig":"75"},{"size":3347,"mtime":1610886838582,"results":"140","hashOfConfig":"75"},{"size":3108,"mtime":1610896674392,"results":"141","hashOfConfig":"75"},{"size":558,"mtime":1610673370614,"results":"142","hashOfConfig":"75"},{"size":5313,"mtime":1610930516261,"results":"143","hashOfConfig":"75"},{"size":2751,"mtime":1610824345197,"results":"144","hashOfConfig":"75"},{"size":1470,"mtime":1610926696429,"results":"145","hashOfConfig":"75"},{"size":2604,"mtime":1610967413772,"results":"146","hashOfConfig":"75"},{"size":1763,"mtime":1610545056604,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"f4780n",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"150"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"150"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"150"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"150"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"150"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"150"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"150"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"150"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"150"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"150"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"150"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"150"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"150"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"150"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"150"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"150"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"150"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"150"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"150"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"150"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"150"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"150"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"150"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"150"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"150"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"150"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"150"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/index.js",[],["322","323"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/serviceWorkerRegistration.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/reportWebVitals.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/store.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/App.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardList.jsx",["324"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { loadBoards } from '../store/actions/boardAction.js'\nimport { BoardPreview } from './BoardPreview.jsx'\n\nclass _BoardList extends Component {\n\n    componentDidMount() {\n        this.props.loadBoards()\n    }\n    get boardsForDisplay() {\n        let boards = this.props.boards\n        return boards\n    }\n    render() {\n        const { boards } = this.boardsForDisplay\n        return (\n            <section className=\"board-list\">\n                {boards.map(board => {\n                    <div> key={board._id}\n                        <BoardPreview board={board} /></div>\n                })}\n            </section>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        boards: state.boardModule.boards\n    }\n}\nconst mapDispatchToProps = {\n    loadBoards\n}\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardPreview.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Home.jsx",["325"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/index.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/boardAction.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Board.jsx",["326"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMapShow.jsx",["327"],"\nimport { Component } from 'react'\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\n//icons:\nimport RoomIcon from '@material-ui/icons/Room';\n\n\nclass _MenuMapShow extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        gGoogleMap: ''\n    };\n\n    render() {\n        return (\n            <section className=\"map-section\">\n                <Map\n                    google={this.props.google}\n                    initialCenter={{ lat: 32.0749831, lng: 34.9120554 }}\n                    center={this.state.center}\n                    zoom={14}>\n\n                    <Marker\n                        name={'Current location'} />\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <div>\n                            <h1>{this.state.selectedPlace.name}</h1>\n                        </div>\n                    </InfoWindow>\n\n                </Map>\n            </section>\n        )\n    }\n}\nexport const MenuMapShow = GoogleApiWrapper({\n    apiKey: ('AIzaSyBzfpQbTtSYT__Qh9PIPLUnA9xBMKj1iFY')\n})(_MenuMapShow)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/httpService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/boardService.js",["328"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/reviewReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/boardReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/systemReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/userReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/menuReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/cardReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupList.jsx",["329","330"],"import React, { Component } from 'react'\nimport { GroupPreview } from \"./GroupPreview\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { boardService } from '../services/boardService';\n\n\nexport class GroupList extends Component {\n\n    state = {\n        // isModalOpen:false,\n        group: {\n            id: '',\n            title: '',\n            style: {},\n            cards: []\n        },\n        isAdding: false\n    }\n\n\n    handleChange = (ev) => {\n        const { group } = this.state\n        const { value } = ev.target\n        this.setState({\n            group: { ...group, title: value }\n        })\n    }\n\n    onShowAddBtn = () => {\n        this.setState({ isAdding: true })\n    }\n    onAddGroup = () => {\n        const { group } = this.state\n        const { board } = this.props\n        this.props.addGroup(board._id, group)\n        this.setState({\n            group: { ...group, title: '' },\n            isAdding: false\n        })\n        \n    }\n\n    handleEnter=(ev)=>{\n        if(ev.key==='Enter'){\n            this.onAddGroup()\n            ev.currentTarget.blur()\n        } \n    }\n\n    discardChanges=(ev)=>{\n        const { group } = this.state\n        this.setState({\n            group: { ...group, title: '' },\n            isAdding: false\n        })\n        ev.currentTarget.blur()\n\n    }\n\n    // handleOnDragEnd = (result) => {\n    //     console.log(result);\n    //     if (!result.destination) return;\n    //     const { board } = this.props\n    //     const { groups } = board\n    //     const items = Array.from(groups)\n    //     const [reorderedItem] = items.splice(result.source.index, 1)\n    //     items.splice(result.destination.index, 0, reorderedItem)\n    //     this.props.updateGroupLoaction(board, items)\n    // }\n    \n    handleDrag=(result)=>{\n        const {board} = this.props\n        const {source,destination}  = result\n        \n        if(result.type==='GROUP'){\n            const groupId = result.draggableId\n            this.props.updateGroupLoaction(board,groupId,source,destination)\n        }else{\n            const cardId = result.draggableId\n            this.props.updateCardLocation(board,cardId,source,destination)\n            \n        }\n        \n    }\n    \n    render() {\n        const { groups } = this.props.board\n        return (\n            // <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <DragDropContext onDragEnd={this.handleDrag}>\n                <Droppable droppableId=\"board\" type=\"GROUP\" direction=\"horizontal\">\n                    {provided => (\n\n                        <div ref={provided.innerRef} {...provided.droppableProps} className=\"group-container\" onClick={this.onEditModalClose}   >\n                            {groups && groups.map((group, idx) => {\n                                return (\n                                    <GroupPreview key={group.id} idx={idx} listId={group.id} group={group} />\n                                )\n                            })}\n                            {provided.placeholder}\n\n                            <div className=\"hidden-actions-form-container add-group\" >\n                                <form action=\"\" className=\"hidden-actions-form\">\n                                    <input onKeyDown={this.handleEnter}  className=\"add-list-input\" type=\"text\" placeholder=\"+ Add another list\" value={this.state.group.title}  onChange={this.handleChange} />\n                                </form>\n                                <div className=\"hidden-actions flex list\">\n                                      <button onClick={this.onAddGroup}>Add List</button>\n                                    <button onClick={this.discardChanges} className=\"icon\">\n                                        <CloseSharpIcon />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n}\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardHeader.jsx",["331"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\n\n\n//icons:\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nclass _BoardHeader extends Component {\n\n    render() {\n        return (\n            <div className=\"flex board-header\" >\n                <h4>board header</h4>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        reviews: state.reviewModule.reviews,\n        board: state.boardModule.board,\n    }\n}\nconst mapDispatchToProps = {\n    // getBoardById,\n    // addGroup\n}\n\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Card.jsx",["332"],"import { connect } from \"react-redux\";\nimport { cardService } from \"../../services/cardService.js\";\nimport { updateBoardCard } from \"../../store/actions/boardAction\";\nimport { withRouter } from \"react-router\";\nimport WebIcon from '@material-ui/icons/Web';\nimport { Component } from \"react\";\nimport { CardContent } from \"./CardContent\";\nimport { Link } from \"react-router-dom\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { CardMenu } from \"./CardMenu.jsx\";\nimport { DynamicCardActionModal } from \"./DynamicCardActionModal.jsx\";\nimport {AddDueDateModal} from \"./AddDueDateModal.jsx\";\n// import { CardAction } from \"./CardAction\";\n\nclass _Card extends Component {\n\n    state = {\n        card: null,\n        currModal: {}\n    }\n\n    componentDidMount() {\n        this.loadCard()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.cardId !== this.props.match.params.cardId) this.loadCard()\n        if (prevProps.board._id !== this.props.board?._id) this.loadCard()\n    }\n\n    loadCard = () => {\n        const { board } = this.props\n        const { cardId } = this.props.match.params\n        if (cardId && board.groups) {\n            const card = cardService.getCardById(board, cardId)\n            this.setState({ card })\n        } else this.setState({ card: null })\n    }\n\n    saveCardChanges = async (card, txt) => {\n        var { board, loggedUser } = this.props\n        if (txt) {\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\n            board = {...board, activities: [activity, ...board.activities]}\n        }\n        await this.props.updateBoardCard(board, card)\n        this.loadCard()\n    }\n\n    onChangetitle = ({ target }) => {\n        const { value } = target\n        this.setState(prevState => ({ card: { ...prevState.card, title: value } }))\n    }\n\n    onSaveTitle = () => {\n        this.saveCardChanges(this.state.card,'Edited card title')\n    }\n\n    closeModal = () =>{\n        const {currModal} = this.state\n        if (currModal?.name) this.setState({currModal: null})\n    }\n\n    setCurrModal = (currModal) => {\n        this.setState({currModal})\n    }\n\n    render() {\n        const { board, loggedUser } = this.props\n        const { card, currModal } = this.state\n        if (!card) return null\n        return (\n            <Link to={`/board/${board._id}`}>\n                <section onClick={this.closeModal} className={\"card-modal-screen flex justify-center\"}>\n                    <div onClick={(ev) => { ev.preventDefault() }} className=\"card-modal grid\">\n                        <div className=\"header flex\">\n                            <WebIcon />\n                            <input\n                                type=\"text\"\n                                value={card.title}\n                                onChange={this.onChangetitle}\n                                onBlur={this.onSaveTitle}\n                            />\n                            <Link to={`/board/${board._id}`}><CloseSharpIcon /></Link>\n                        </div>\n                        <CardContent setCurrModal={this.setCurrModal} closeModal={this.closeModal} user={loggedUser} board={board} card={card} save={this.saveCardChanges} />\n                        <CardMenu setCurrModal={this.setCurrModal} closeModal={this.closeModal}/>\n                        <div  onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}}>\n                        <DynamicCardActionModal closeModal={this.closeModal} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\n                        </div>\n                    </div>\n                </section>\n            </Link>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedUser: state.boardModule.loggedUser, \n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    updateBoardCard\n}\n\nexport const Card = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Card))\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Header.jsx",["333"],"import { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport AppsIcon from '@material-ui/icons/Apps';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { MenuMapShow } from './menu/menuFirstSee/MenuMapShow';\n\nclass _Header extends Component {\n    state = { isMapOpen: false }\n    toggleMap = () => { this.setState({ isMapOpen: !this.state.isMapOpen }) }\n    render() {\n        const { isMapOpen } = this.state\n        return (\n            <header className=\"main-header\">\n                <div className=\"icons-container\">\n\n                    <span className=\"apps-icon\">\n                        <AppsIcon />\n                    </span>\n                    <span className=\"apps-icon\">\n                        <Link to=\"/\">\n                            <DashboardIcon />\n                        </Link>\n                    </span>\n                </div>\n\n                <h3>Trello</h3>\n                <div className=\"icons-container\">\n                    <span className=\"apps-icon\" onClick={this.toggleMap}>\n                        {/* <Link to=\"/map\"></Link> */}\n                        <RoomIcon />\n                        {isMapOpen && <MenuMapShow />}\n                    </span>\n                    <span className=\"apps-icon\">\n                        <AddIcon />\n                    </span>\n                    <span className=\"apps-icon\">\n                        <AccountCircleIcon />\n                    </span>\n                </div>\n            </header>\n        )\n\n    }\n\n\n}\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userModule.loggedInUser\n    }\n}\nconst mapDispatchToProps = {}\n\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/Menu.jsx",["334","335"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\n\n//cmps:\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\nimport { SectionMore } from './menuFirstSee/menuTopOptions/SectionMore.jsx'\nimport { MenuButler } from './menuFirstSee/MenuButler';\nimport { MenuPowerups } from './menuFirstSee/MenuPowerups';\nimport { MenuMap } from './menuFirstSee/MenuMap';\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\nimport { MenuActivitiesList } from './menuFirstSee/MenuActivitiesList.jsx'\n\n\n//icons:\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RoomIcon from '@material-ui/icons/Room';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport ArrowUpwardSharpIcon from '@material-ui/icons/ArrowUpwardSharp';\n\n\nexport class Menu extends Component {\n\n    state = {\n        menuTitle: 'Menu',\n        currMenu: null,\n        inMenu: true,\n        isMenuOpen: false\n    }\n\n    toggleMenu = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\n    }\n\n    goBack = () => { this.setState({ currMenu: null }) }\n\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\n    openButler = () => { this.setState({ menuTitle: \"butler\", currMenu: 'MenuButler' }) }\n    openPowerups = () => { this.setState({ menuTitle: \"Power-ups\", currMenu: 'MenuPowerups' }) }\n    openMap = () => { this.setState({ menuTitle: \"Map\", currMenu: 'MenuMap' }) }\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\n\n    render() {\n\n\n        const { currMenu, menuTitle, inMenu, isMenuOpen } = this.state\n        const { board } = this.props\n        if (!board.activities) return null\n        return (\n            <section className={`menu flex col ${isMenuOpen ? 'open' : ''}`}>\n                <button className=\"menu-btn flex align-center\" onClick={this.toggleMenu}><MoreHorizIcon />Show Menu</button>\n                <div className=\"menu-top\">\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\n                    <button className=\"close-menu-btn\" onClick={this.toggleMenu}><CloseIcon /></button>\n                    <hr className=\"hr-menu\" />\n                </div>\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\n\n                    <button className=\"menu-option\" onClick={this.openAbout}>\n                        <span><InfoIcon /></span>\n                        <div className=\"about-all-desc\">\n                            <h4 className=\"about-this-board\">About This Board</h4>\n                            <span className=\"about-desc\">Add a description to your board</span>\n                        </div>\n                    </button>\n\n                    <button className=\"menu-option\" onClick={this.openBgs}>\n                        <span>< WallpaperIcon /></span>\n                        <h4 className=\"option-title\">Change Background</h4>\n                    </button>\n\n                    <button className=\"menu-option\" onClick={this.openSearch}>\n                        <span><SearchIcon /></span>\n                        <h4 className=\"option-title\">Search Cards</h4>\n                    </button>\n\n                    <button className=\"menu-option\" onClick={this.openStickers}>\n                        <span><LabelImportantIcon /></span>\n                        <h4 className=\"option-title\">Stickers</h4>\n                    </button>\n\n                    <button className=\"menu-option\" onClick={this.openMore}>\n                        <span><MoreHorizIcon /></span>\n                        <h4 className=\"option-title\">More</h4>\n                    </button>\n                    <hr className=\"hr-menu\" />\n                    <button className=\"menu-option\" onClick={this.openButler}>\n                        <span className=\"butler-icon\">🤖</span>\n                        <div className=\"butler-div\">\n                            <h4> Butler</h4>\n                            <span>Automate cards and more...</span>\n                        </div>\n                    </button>\n                    <hr className=\"hr-menu\" />\n                    <button className=\"menu-option\" onClick={this.openPowerups}>\n                        <span className=\"powerups-icon\"><ArrowUpwardSharpIcon /></span>\n                        <div className=\"powerups-div\">\n                            <h4>Power-Ups</h4>\n                            <span className=\"power-ups-desc\">Calendar, Google Drive and more...</span>\n                        </div>\n                    </button>\n\n                    <button className=\"menu-option\" onClick={this.openMap}>\n                        <span><RoomIcon /></span>\n                        <h4 className=\"option-title\">Map</h4>\n                    </button>\n                    <hr className=\"hr-menu\" />\n                    <button className=\"menu-option\" onClick={this.openActivity}>\n                        <span><PlaylistAddCheckIcon /></span>\n                        <h4 className=\"option-title\">Activity</h4>\n                    </button>\n                    <MenuActivitiesList board={board} />\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\n                </section>}\n                <DynamicCmp currMenu={currMenu} board={board} />\n            </section >\n        )\n    }\n}\n\n\n\n\nfunction DynamicCmp({ currMenu, board }) {\n    switch (currMenu) {\n        case 'SectionAbout':\n            return <SectionAbout board={board} />\n        case 'SectionBackground':\n            return <SectionBackground />\n        case 'SectionSearch':\n            return <SectionSearch board={board} />\n        case 'SectionStickers':\n            return <SectionStickers />\n        case 'SectionMore':\n            return <SectionMore board={board} />\n        case 'MenuButler':\n            return <MenuButler />\n        case 'MenuPowerups':\n            return <MenuPowerups />\n        case 'MenuMap':\n            return <MenuMap />\n        case 'MenuActivity':\n            return <MenuActivity board={board} />\n        default:\n            return null\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/utilService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/cardService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardMenu.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/DynamicCardActionModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionBackground.jsx",["336","337","338"],"import { Component } from 'react'\n\n//cmps:\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\n\n\n//icons:\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\n\n//imgs:\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\n\nexport class SectionBackground extends Component {\n\n    state = {\n        currType: null,\n        menuTitle: 'Change Background',\n        photosSrc,\n        colorsSrc\n    }\n\n    goBackBg = () => { this.setState({ currType: null }) }\n\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\n\n    render() {\n        const { currType, photosSrc, colorsSrc } = this.state\n        return (\n            <section className=\"background-section\">\n                {currType === null && <section className=\"flex photos-colors\">\n                    <div className=\"photos\">\n                        <button onClick={this.choosePhotos}>\n                            <img src={photosSrc} className=\"img-select\" />\n                            <span className=\"select-img-title\">Photos</span>\n                        </button>\n                    </div>\n                    <div className=\"colors\">\n                        <button onClick={this.chooseColors}>\n                            <img src={colorsSrc} className=\"img-select\" />\n                            <span className=\"select-img-title\">Colors</span>\n                        </button>\n                    </div>\n                </section>}\n                {currType && <button className=\"back-bg-btn\" onClick={this.goBackBg}><ArrowBackIosIcon /></button>}\n                <hr className=\"hr-menu\" />\n                <DynamicCmpBg currType={currType} />\n            </section>\n        )\n    }\n}\nfunction DynamicCmpBg({ currType }) {\n    switch (currType) {\n        case 'PhotosArea':\n            return <PhotosArea />\n        case 'ColorsArea':\n            return <ColorsArea />\n        default:\n            return <h1></h1>\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivitiesList.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionSearch.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionAbout.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionStickers.jsx",["339"],"import { Component } from 'react'\n\nimport stick1 from '../../../../assets/stickers/sticker-01.png'\nimport stick2 from '../../../../assets/stickers/sticker-02.png'\nimport stick3 from '../../../../assets/stickers/sticker-03.png'\nimport stick4 from '../../../../assets/stickers/sticker-04.png'\nimport stick5 from '../../../../assets/stickers/sticker-05.png'\nimport stick6 from '../../../../assets/stickers/sticker-06.png'\nimport stick7 from '../../../../assets/stickers/sticker-07.png'\nimport stick8 from '../../../../assets/stickers/sticker-08.png'\nimport stick9 from '../../../../assets/stickers/sticker-09.png'\nimport stick10 from '../../../../assets/stickers/sticker-10.png'\nimport stick11 from '../../../../assets/stickers/sticker-11.png'\nimport stick12 from '../../../../assets/stickers/sticker-12.png'\n\n\nexport class SectionStickers extends Component {\n\n    state = {\n        stickers: [\n            { src: stick1, _id: 'stick101' },\n            { src: stick2, _id: 'stick102' },\n            { src: stick3, _id: 'stick103' },\n            { src: stick4, _id: 'stick104' },\n            { src: stick5, _id: 'stick105' },\n            { src: stick6, _id: 'stick106' },\n            { src: stick7, _id: 'stick107' },\n            { src: stick8, _id: 'stick108' },\n            { src: stick9, _id: 'stick109' },\n            { src: stick10, _id: 'stick1011' },\n            { src: stick11, _id: 'stick1011' },\n            { src: stick12, _id: 'stick1012' }\n\n        ]\n    }\n\n\n    render() {\n        const { stickers } = this.state\n\n        console.log('stickers:', stickers);\n        if (!stickers || !stickers.length) return <h1>Loading...</h1>\n        return (\n            <section className=\"stickers-section\" style={{ display: \"grid\" }}>\n                <h1>Stickers!</h1>\n                <div className=\"stickers-area\">\n                    {stickers.map((sticker, idx) => {\n\n                        return <div className=\"sticker-img\" key={idx}>\n                            <img src={sticker.src} />\n                        </div>\n                    })}\n                </div>\n            </section >\n        )\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionMore.jsx",["340"],"import { Component } from 'react'\n\n//icons:\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\n\n//cmps:\nimport { SectionLabels } from './menuMore/SectionLabels';\n\nexport class SectionMore extends Component {\n\n    state = {\n        currMore: null\n    }\n\n    openLabels = () => { this.setState({ currMore: 'labels' }) }\n\n    render() {\n        const { board } = this.props\n        const { currMore } = this.state\n        return (\n            <section className=\"more-section\" style={{ display: \"grid\" }}>\n                <button className=\"menu-option\" onClick={this.openLabels}>\n                    <span><LabelOutlinedIcon /></span>\n                    <h4 className=\"option-title\">Labels</h4>\n                </button>\n                <DynamicCmp currMore={currMore} board={board} />\n            </section >\n        )\n    }\n}\nexport function DynamicCmp({ currMore, board }) {\n    switch (currMore) {\n        case 'labels':\n            return <SectionLabels board={board} />\n\n        default:\n            return <h1></h1>\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentPreview.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupPreview.jsx",["341","342"],"import React, { Component } from 'react'\nimport { CardList } from \"./CardList\";\nimport { connect } from 'react-redux'\nimport { loadCards } from '../store/actions/cardActions'\nimport { addCard, openLabel, editGroupTitle } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\n\nexport class _GroupPreview extends Component {\n\n    state = {\n        groupTitle: '',\n        card: {\n            createdBy: {},\n            id: '',\n            title: '',\n            description: '',\n            createdAt: Date.now(),\n            dueDate: '',\n            style: {},\n            comments: [],\n            checklists: [],\n            attachments: [],\n            members: [],\n            labels: []\n        },\n        isChangeTitle: false\n    }\n\n    componentDidMount() {\n        const { group } = this.props\n        this.props.loadCards(group)\n        this.setState({ groupTitle: group.title })\n    }\n\n    handleChange = (ev) => {\n        const { card } = this.state\n        const { value } = ev.target\n        this.setState({\n            card: { ...card, title: value }\n        })\n    }\n    onAddCard = async () => {\n        const { card } = this.state\n        const { board, group } = this.props\n        this.props.addCard(board, group, card)\n        this.setState({\n            card: { ...card, title: '' },\n        })\n    }\n\n    // handleOnDragEnd = (result) => {\n    //     if (!result.destination) return;\n    //     const { board, group } = this.props\n    //     const { cards } = group\n    //     const items = Array.from(cards)\n    //     const [reorderedItem] = items.splice(result.source.index, 1)\n    //     items.splice(result.destination.index, 0, reorderedItem)\n    //     this.setState({ cards: items })\n    //     this.props.updateCardsLocation(board, group, items)\n    // }\n\n    handleEditGroupTitle = (ev) => {\n        const { value } = ev.target\n        // console.log(ev.target.value);\n        this.setState({ groupTitle: value })\n    }\n\n    discardChanges = (ev) => {\n        this.setState({\n            card: { ...this.state.card, title: '' }\n        })\n        ev.currentTarget.blur()\n    }\n\n    editGroupTitle = () => {\n        const { board, group } = this.props\n        const { groupTitle } = this.state\n        this.props.editGroupTitle(board, group, groupTitle)\n        this.setState({ isChangeTitle: false })\n    }\n    handleEnter = (ev) => {\n        if (ev.key === 'Enter') {\n            this.onAddCard()\n            ev.currentTarget.blur()\n        }\n    }\n\n    render() {\n        const { listId, idx, group, board, isLabelOpen, openLabel, updateCardsLocation } = this.props\n        const { cards } = group\n        const { groupTitle, isChangeTitle } = this.state\n        const { title } = this.state.card\n        return (\n            <Draggable draggableId={listId} index={idx} >\n                {provided => (\n                    <div className=\"group-preview\" ref={provided.innerRef} {...provided.draggableProps} >\n                        <div {...provided.dragHandleProps} listId={listId}>\n                            <span className=\"group-menu-btn\" onClick={this.openMenu}>...</span>\n                            <div className={`hidden-actions-form-container`}>\n                                <form action=\"\" className={`hidden-actions-form`}>\n\n                                    <input className=\"group-title-input\" onChange={this.handleEditGroupTitle} type=\"text\" value={groupTitle} autoComplete=\"off\" />\n\n                                </form>\n                                {isChangeTitle && <div className=\"hidden-actions flex\">\n                                    <button type=\"button\" onClick={this.editGroupTitle} style={{ marginLeft: '6px' }} > save </button>\n                                    <button onClick={this.discardChanges} className=\"icon\">\n                                        <CloseSharpIcon />\n                                    </button>\n                                </div>\n                                }\n                            </div>\n                        </div>\n                        <CardList listId={listId} cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group} />\n\n                        <div className=\"hidden-actions-form-container\">\n\n                            <form action=\"\" className=\"hidden-actions-form\">\n                                <input onClick={this.onShowAddBtn} onKeyDown={this.handleEnter} value={title} type=\"text\" placeholder=\"+ Add another card \" onChange={this.handleChange} />\n                            </form>\n\n                            <div className=\"hidden-actions flex\">\n                                <button onClick={this.onAddCard}> Add Card</button>\n                                <button onClick={this.discardChanges} className=\"icon\">\n                                    <CloseSharpIcon />\n                                </button>\n\n                            </div>\n                        </div>\n\n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        reviews: state.reviewModule.reviews,\n        cards: state.cardModule.cards,\n        board: state.boardModule.board,\n        isLabelOpen: state.boardModule.isLabelOpen\n    }\n}\nconst mapDispatchToProps = {\n    loadCards,\n    addCard,\n    openLabel,\n    editGroupTitle\n}\n\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview)\n\n\n/**{\n *\n *\n *\n *          TOP\n *             // <Droppable droppableId={group.id} type=\"CARD\">\n            //  {(provided)=>(\n                // <div className=\"group-preview\" ref={provided.innerRef} {...provided.droppableProps}    >\n                  // )}\n            //  </Droppable>\n\n\n\n        const {group,board,isLabelOpen,openLabel,updateCardsLocation} = this.props\n        const { cards } = group\n        const { isAdding } = this.state\n        const { title } = this.state.card\n        return (\n            <div className=\"group-preview\" >\n                <h3>{group.title}</h3>\n                <CardList cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group}/>\n                <form action=\"\">\n                <input onClick={this.onShowAddBtn} value={title} type=\"text\" placeholder=\"+ Add another card \" onChange={this.handleChange} />\n                { isAdding && <button onClick={this.onAddCard}> Add Card</button>}\n                </form>\n            </div>\n        )\n    } */","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardContent.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuButler.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuPowerups.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/MyAvatar.jsx",["343"],"import { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }))\n\nexport function MyAvatar({user}){\n     const classes = useStyles()\n\n    if( user.imgUrl) return  <Avatar alt={user.fullname} className={classes.small} src={user.imgUrl} />\n    return <Avatar className={classes[user.color], classes.small}>{user.fullname.substring(0, 1)}</Avatar>\n\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/ColorsArea.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/userActions.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMap.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivity.jsx",["344"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { boardService } from '../../../services/boardService';\n\n//cmps:\nimport { CardCommentPreview } from '../../card/CardCommentPreview';\n\n\n\nexport class MenuActivity extends Component {\n\n\n    state = {\n        backgroundColorAll: '',\n        colorAll: '',\n        textDecorationAll: '',\n        backgroundColorComments: '',\n        colorComments: '',\n        textDecorationComments: '',\n        filterBy: ''\n    }\n\n    changeBgClrAndAllActs = () => { this.setState({ backgroundColorAll: 'rgb(0, 121, 191)', colorAll: '#fff', textDecorationAll: 'none', backgroundColorComments: '', colorComments: '', textDecorationComments: '', filterBy: 'all' }) }\n    changeBgClr = () => { this.setState({ backgroundColorComments: 'rgb(0, 121, 191)', colorComments: '#fff', textDecorationComments: 'none', backgroundColorAll: '', colorAll: '', textDecorationAll: '', filterBy: '' }) }\n\n    get data() {\n        const { board } = this.props\n        const { filterBy } = this.state\n        const allActivites = boardService.getActivities(board, filterBy)\n        return allActivites\n    }\n\n    render() {\n        const { backgroundColorAll, backgroundColorComments, colorAll, colorComments, textDecorationAll, textDecorationComments } = this.state\n        console.log('state', this.state);\n        return (\n            <section className=\"menu-activities-section\">\n                <div className=\"select-active-filter\">\n                    <button className=\"active-filter-btn filter-all\" onClick={this.changeBgClrAndAllActs} style={{ backgroundColor: backgroundColorAll, color: colorAll, textDecoration: textDecorationAll }}>All</button>\n                    <button className=\"active-filter-btn filter-comments\" onClick={this.changeBgClr} style={{ backgroundColor: backgroundColorComments, color: colorComments, textDecoration: textDecorationComments }}>Comments</button>\n                </div>\n                <hr className=\"hr-menu\" />\n                <CardCommentPreview data={this.data} />\n            </section>\n        )\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/menuAction.js",["345"],"import { boardService } from '../../services/boardService.js'\nimport { menuService } from '../../services/menuService.js'\n\nexport function setFilter(filterBy) {\n    return (dispatch) => {\n        const action = {\n            type: 'FILTER_PHOTOS',\n            filterBy\n        }\n        dispatch(action)\n    }\n}\nexport function saveBoardDesc(board, description) {\n    return async dispatch => {\n        try {\n            const updatedBoard = await boardService.updateBoardDesc(board, description)\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\n        }\n        catch (err) {\n            console.log('boardActions: err:', err);\n        }\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/PhotosArea.jsx",["346"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\n\n// import {menuService} from '../'\n//icons:\nimport SearchIcon from '@material-ui/icons/Search';\n\n\n//functions:\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\n\n//imgs:\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\n\nclass _PhotosArea extends Component {\n\n    state = {\n        photoSearch: '',\n        filterBy: {\n            name: ''\n        },\n        bgImgs: [\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\n        ]\n        // bgImgs:[]\n    }\n    componentDidMount() {\n        // console.log(this.state.bgImgs[0]);\n    }\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\n            this.props.setFilter(this.state.filterBy)\n        })\n    }\n    // getFromNet = (q) => {\n    //     menuService.getPhotos(q)\n    //         .then(res => this.setState({ books: res.items.splice(0, 4) }));\n    // }\n    // handleChange = (ev) => {\n    //     console.log('your search:', ev.target.value);\n    //     this.getFromNet(ev.target.value);\n    // };\n    toggleImgTitle = (imgIdx) => {\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\n        })\n        this.setState({ bgImgs })\n    }\n    selectImg = (imgSrc) => {\n        imgSrc = '../assets/bgImgs/' + (imgSrc.substr(14)).substr(0, 8) + '.jpg'\n        console.log('edited imgSrc:', imgSrc);\n        this.props.setBackground(this.props.board, { backgroundImage: imgSrc })\n    }\n\n    get imgsForDidsplay() {\n        let imgs = this.state.bgImgs\n        const regex = new RegExp(this.props.filterBy, 'i')\n        imgs = imgs.filter(img => regex.test(img.title))\n        return imgs\n    }\n    render() {\n        const { name } = this.state.filterBy\n        const imgs = this.imgsForDidsplay\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\n        return (\n            <section className=\"photo-type\">\n                <div className=\"flex search-photo\">\n                    <SearchIcon /><input type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this.handleChange}\n                        placeholder=\"Photos\"\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div className=\"photos-area\">\n                    {imgs.map((img, idx) => {\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\n                            onClick={() => { this.selectImg(img.src) }}>\n                            <img src={img.src} />\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\n                        </div>\n                    })}\n                </div>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        board: state.boardModule.board,\n        filterBy: state.menuModule.filterBy\n    }\n}\nconst mapDispatchToProps = {\n    setBackground,\n    setFilter\n}\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddChecklistModal.jsx",["347"],"import { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { utilService } from \"../../services/utilService\";\n\n\nexport class AddChecklistModal extends Component{\n    state = {\n        title: 'Checklist'\n    }\n\n    onAddChecklist = (ev) => {\n        if (ev.key && ev.key !== \"Enter\") return \n        const { card, save, closeModal } = this.props\n        const newChecklist = {\n            id: utilService.makeId(),\n            title: this.state.title,\n            createdAt: Date.now(),\n            createdBy: {\n                _id: \"u101\",\n                fullname: \"Tal Tarablus\",\n                imgUrl: \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\n            },\n            todos: []\n        }\n        const newCard = {...card, checklists:[...card.checklists, newChecklist]}\n        save(newCard, `added checklist ${newChecklist.title} to card`)\n        closeModal()\n    }\n\n    handleFocus = (ev) => {\n        ev.target.select()\n    }\n\n    render() {\n\n        const { card, closeModal, style } = this.props\n        return (\n            <div className=\"checklist-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Add Checklist\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <small>Title</small>\n                <input \n                autoComplete=\"off\" \n                onFocus={this.handleFocus} \n                autoFocus \n                type=\"text\" name=\"title\" \n                onChange={({ target }) => this.setState({ title: target.value })} value={this.state.title}\n                onKeyDown={this.onAddChecklist}\n                />\n                <button onClick={this.onAddChecklist}>Add</button>\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberListModal.jsx",["348"],"import { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { MyAvatar } from \"../MyAvatar\";\n\n\nexport class MemberListModal extends Component {\n\n    state = {\n        filter: ''\n    }\n\n    get members() {\n        const { filter } = this.state\n        const { members } = this.props.board\n        const regex = new RegExp(filter, 'i')\n        return members.filter(member => member.fullname.match(regex))\n    }\n\n    get cardMembersNames(){\n        const { members } = this.props.card\n        return members.map(member => member.fullname)\n    }\n\n    onAddMember = (member) => {\n        const card = {...this.props.card, members:[...this.props.card.members, member]}\n        this.props.save(card, `added ${member.fullname} to card`)\n    }\n\n    removeMember = (currMember) => {\n        const members = this.props.card.members.filter(member => {console.log(member.id); return member._id !== currMember._id})\n        const card = {...this.props.card, members}\n        this.props.save(card, `removed ${currMember.fullname} from card`)\n    }\n\n    render() {\n\n        const { card, closeModal, style } = this.props\n        return (\n            <div className=\"member-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Members\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <input autoFocus onChange={({ target }) => this.setState({ filter: target.value })} type=\"text\" name=\"filter\" placeholder=\"Search members...\" />\n                <small>MEMBERS</small>\n                <div className=\"members-container\">\n                    {this.members.map(member =>\n                        <div  onClick={() => this.onAddMember(member)} key={member._id} className={`flex align-center space-bt`} style={{ backgroundColor: member.color }}>\n                            <div className=\"flex align-center\" >\n                            <MyAvatar user={member}/>\n                            <span>{member.fullname}</span>\n                            </div>\n                            {(this.cardMembersNames.includes(member.fullname) && <span  onClick={(ev) => {ev.stopPropagation(); ev.preventDefault(); this.removeMember(member)}} style={{color: '#596880'}}>&#10003;</span>)}\n                        </div>)}\n                </div>\n                {/* <button>Show other team members</button> */}\n\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelListModal.jsx",["349","350"],"import { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport {cardService} from '../../services/cardService';\nimport { Save } from \"@material-ui/icons\";\n\n\nexport class LabelListModal extends Component {\n\n    state = {\n        filter: ''\n    }\n\n    get labels() {\n        const { filter } = this.state\n        const { labels } = this.props.board\n        const regex = new RegExp(filter, 'i')\n        return labels.filter(label => label.title.match(regex))\n    }\n\n    onAddLable = (label ) => {\n        const card = {...this.props.card, labels:[...this.props.card.labels, label]}\n        this.props.save(card, `added label ${label.title}`)\n    }\n\n    removeLabel = (labelId) => {\n        const labels = this.props.card.labels.filter(label => label.id !== labelId)\n        const card = {...this.props.card, labels}\n        this.props.save(card, `removed a label`)\n    }\n\n    render() {\n\n        const { card, closeModal, style } = this.props\n        return (\n            <div className=\"label-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Labels\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <input autoFocus onChange={({ target }) => this.setState({ filter: target.value })} type=\"text\" name=\"filter\" placeholder=\"Search labels...\" />\n                <small>LABELS</small>\n                <div className=\"labels-container\">\n                    {this.labels.map(label =>\n                        <div onClick={() => this.onAddLable(label)} key={label.id} className=\"flex\">\n                            <div className={`flex space-bt bgc-${label.color?.substring(1)}`} style={{ backgroundColor: label.color }}>\n                                <span>{label.title}</span>\n                                {(card.labels.includes(label) && <span onClick={(ev) => {ev.stopPropagation(); ev.preventDefault(); this.removeLabel(label.id)}}>&#10003;</span>)}\n                            </div>\n                            <EditOutlinedIcon />\n                        </div>\n                    )}\n                </div>\n                <button>Create a new label</button>\n\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddAttachmentModal.jsx",["351","352"],"import React, { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { utilService } from \"../../services/utilService\";\n\n\nexport class AddAttachmentModal extends Component{\n    state = {\n        url: '',\n        title: ''\n    }\n\n\n\n    onAddAttachment = (ev) => {\n        console.log(ev);\n        if (!ev.key || ev.key && ev.key === \"Enter\") {\n\n            const {title, url} = this.state\n            const newAttachment = {\n                id: utilService.makeId(),\n                title: title,\n                url: url\n            }\n            const card = {...this.props.card, attachments:[...this.props.card.attachments, newAttachment]}\n            this.props.save(card, `added attachment to ${newAttachment.title} to card`)\n            this.props.closeModal()\n        }\n    }\n\n    handleInput = (ev) => {\n        const {name, value} = ev.target\n        this.setState({ [name]: value })\n    }\n    \n\n    render() {\n\n        const { closeModal, style } = this.props\n        return (\n            <div className=\"attachments-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Attach From...\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <small>Attach a link</small>\n                <input autoFocus  onChange={this.handleInput} onKeyUp={this.onAddAttachment} autoComplete=\"off\" placeholder=\"Paste any link here...\" type=\"text\" name=\"url\" />\n                {this.state.url && <small>Link name (optional)</small>}\n                {this.state.url && <input ref=\"linkNameRef\" autoComplete=\"off\" onKeyUp={this.onAddAttachment} onChange={this.handleInput} type=\"text\" name=\"title\" />}\n                <button onClick={this.onAddAttachment}>Attach</button>\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/menuService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/cardActions.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/LabelSearchBy.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/UserSearchBy.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuMore/SectionLabels.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/userService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberList.jsx",["353","354","355","356","357"],"import { Component } from \"react\";\nimport { MyAvatar } from \"../MyAvatar\";\nimport { MemberListModal } from \"./MemberListModal\";\n\n\nexport function MemberList(props) {\n\n    function openModal(ev) {\n        ev.preventDefault()\n        ev.stopPropagation()\n        props.setCurrModal({ name: 'members', style: { top: '21%', left: 'calc(50% - 300px)' } })\n    }\n    const { card, save, user, board } = props\n\n    return (\n        <div className=\"card-members\">\n            <h5>MEMBERS</h5>\n            <div className=\"card-members flex\">\n                {card.members.map(user => <div onClick={openModal}><MyAvatar key={Math.random()} user={user} /></div>)}\n                <div onClick={openModal} className=\"add-user-button\">\n                    <MyAvatar user={{ fullname: '+' }} />\n                </div>\n            </div>\n\n        </div>\n    )\n\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelList.jsx",["358","359","360","361"],"import { Component } from \"react\";\nimport { LabelListModal } from \"./LabelListModal\";\n\nexport function LabelList(props) {\n\n    function openModal(ev) {\n        ev.preventDefault()\n        ev.stopPropagation()\n        props.setCurrModal({ name: 'labels', style: { top: '21%', left: 'calc(50% - 100px)' } })\n    }\n\n    const { card, board, save } = props\n    return (\n        <div className=\"card-labels\">\n            <h5>LABELS</h5> \n            <div className=\"label-container flex\">\n                {card.labels.map(label =>\n                    <div onClick={openModal} key={label.id} className={`label flex center`} style={{ backgroundColor: label.color }}>\n                        {label.title}\n                    </div>\n                )}\n                <div onClick={openModal} className=\"add-label flex center\">+</div>\n            </div>\n\n        </div>\n    )\n\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardDescription.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklistList.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentList.jsx",["362"],"import { Component } from \"react\"\nimport { utilService } from \"../../services/utilService\"\nimport { CardCommentPreview } from \"./CardCommentPreview\"\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { cardService } from \"../../services/cardService\";\n\nexport class CardCommentList extends Component {\n\n    state = {\n        newCommentTxt: '',\n        isShown: false\n\n    }\n\n    showActivities = () => {\n        this.setState({ isShown: !this.state.isShown })\n    }\n\n\n    onInput = ({ target }) => {\n        const { name, value } = target\n        this.setState({ [name]: value })\n    }\n\n    onAddComment = (ev) => {\n        if (ev?.key && ev.key === \"Enter\") return\n        ev.preventDefault()\n        ev.currentTarget.blur()\n        const { card, user } = this.props\n        const txt = this.state.newCommentTxt\n        const comment = cardService.getCommentToAdd(txt, user)\n        const newCard = { ...card }\n        newCard.comments.unshift(comment)\n        this.props.save(newCard)\n        this.setState({ newCommentTxt: '' })\n    }\n\n    get data() {\n        const { comments, activities } = this.props.card\n        if (!this.state.isShown) return comments\n        else {\n            const data = [...comments, ...activities]\n            return data.sort((a, b) => b.createdAt - a.createdAt)\n        }\n    }\n\n\n    render() {\n        const { isShown } = this.state\n        return <div className=\"card-comments\">\n            <header className=\"in-card-section flex space-bt align-end\">\n                <div className=\"flex align-start\">\n                    <FormatListBulletedIcon />\n                    <h3>Activity</h3>\n                </div>\n                <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>\n            </header>\n            <div className={`hidden-actions-form-container`}>\n                <form onSubmit={(ev => ev.preventDefault())} className={`hidden-actions-form`}>\n                    <textarea\n                        type=\"text\"\n                        onChange={this.onInput}\n                        value={this.state.newCommentTxt}\n                        autoComplete=\"off\"\n                        placeholder=\"Write a comment..\"\n                        name=\"newCommentTxt\"\n                    />\n                </form>\n                <div className=\"hidden-actions flex\">\n                    <button type=\"button\"\n                        className={this.state.newCommentTxt ? '' : 'disabled'}\n                        onClick={this.onAddComment}\n                    >\n                        Save\n                    </button>\n\n                </div>\n            </div>\n            <CardCommentPreview data={this.data} />\n        </div>\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardAttachmentList.jsx",["363"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardList.jsx",["364","365","366"],"import React, { Component } from 'react'\nimport { CardPreview } from \"./CardPreview\";\n// ////React DND///\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\n\n\nexport class CardList extends Component {\n    state = {\n        cards: []\n    }\n    componentDidMount() {\n        const { cards } = this.props\n        this.setState({ cards })\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            const { cards } = this.props\n            this.setState({ cards })\n        }\n    }\n\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n        const { board, currGroup } = this.props\n        // const { cards } = this.props\n        const { cards } = this.state\n        const items = Array.from(cards)\n        const [reorderedItem] = items.splice(result.source.index, 1)\n        items.splice(result.destination.index, 0, reorderedItem)\n        this.setState({ cards: items })\n        this.props.updateCardsLocation(board, currGroup, items)\n    }\n\n    render() {\n        const { board, listId, isLabelOpen, openLabel, currGroup } = this.props\n        const { cards } = this.props\n        return (\n            <Droppable droppableId={listId} type=\"CARD\">\n                {(droppableProvided) => (\n\n                    <div className=\"card-list\" ref={droppableProvided.innerRef} >\n                        {cards.map((card, idx) => {\n                            if (card) {\n\n                                return (\n\n                                    <CardPreview currGroup={currGroup} key={card.id} listId={listId} board={board} idx={idx} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\n                                )\n                            }\n                        })}\n                        {droppableProvided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        )\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n\n\n    //     {\n    //         const { board, isLabelOpen, openLabel, currGroup } = this.props\n    //         console.log('the fucking', board);\n    //         // const { cards } = this.props\n    //         const { cards } = this.state\n    //         return (\n    //             <DragDropContext onDragEnd={this.handleOnDragEnd}>\n    //                 <Droppable droppableId={currGroup.id} type=\"CARD\" >\n    //                     {(provided) => (\n    //                         <div className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}  >\n    //                             {cards.map((card, idx) => {\n    //                                 return (\n    //                                     <Draggable key={card.id} draggableId={card.id} index={idx}>\n    //                                         {(provided) => (\n    //                                             <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n    //                                                 <CardPreview board={board} idx={card.id} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\n    //                                             </div>\n    //                                         )}\n    //                                     </Draggable>\n    //                                 )\n    //                             })}\n    //                             {provided.placeholder}\n    //                         </div>\n    //                     )}\n    //                 </Droppable>\n    //             </DragDropContext>\n    //         )\n    //     }\n    // }\n\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklist.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPreview.jsx",["367","368","369"],"import React, { Component } from 'react'\nimport { cardService } from \"../services/cardService\";\nimport { connect } from 'react-redux'\nimport { updateBoardCard } from '../store/actions/boardAction'\nimport { CardPrev } from './CardPrev'\nimport { CardPrev2 } from './CardPrev2'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\n\n\n\nclass _CardPreview extends Component {\n\n    state = {\n        isModalOpen: false,\n        labels: [],\n        isEdit: false,\n        title: ''\n    }\n\n\n    componentDidMount() {\n        const { card, board, isModalOpen } = this.props\n        // const updatedCard =cardService.getCardById()\n        // console.log(updatedCard);\n        const labels = cardService.getCardLabels(board, card.labels)\n        this.setState({\n            labels,\n            title: card.title\n        })\n    }\n    componentDidUpdate(prevProps) {\n        // const { isModalOpen } = this.props\n        // if (prevProps !== this.props) {\n        //     this.setState({ isModalOpen: isModalOpen })\n        // }\n    }\n\n\n\n    onOpenLabel = () => {\n        this.props.openLabel()\n    }\n\n    on = (id) => {\n        console.log('id:', id);\n    }\n    EnterEditMode = () => {\n        console.log('edit');\n        const { isEdit } = this.state\n        this.setState({\n            isEdit: !isEdit\n        })\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        this.setState({ title: value })\n    }\n    onSave = () => {\n        console.log('save');\n        const { card, board } = this.props\n        const { title } = this.state\n        card.title = title\n        console.log(card);\n        this.props.updateBoardCard(board, card)\n        this.setState({ isEdit: false })\n    }\n\n    render() {\n        const { card, board,idx, isLabelOpen, currGroup } = this.props\n        const { labels, isEdit, title } = this.state\n\n        return (\n            <React.Fragment>\n                <Draggable\n                    draggableId={card.id}\n                    index={idx}\n                >\n                    {(draggbleProvided) => (\n                        <div ref={draggbleProvided.innerRef}\n                        {...draggbleProvided.draggableProps}\n                        {...draggbleProvided.dragHandleProps}>\n\n                            { <CardPrev isEdit={isEdit} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} EnterEditMode={this.EnterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\n                            {isEdit && <CardPrev2 onSave={this.onSave} currGroup={currGroup} isEdit={isEdit} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} EnterEditMode={this.EnterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\n                        </div>\n                    )}\n                    </Draggable>\n            </React.Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n                    reviews: state.reviewModule.reviews,\n        cards: state.cardModule.cards,\n        board: state.boardModule.board,\n        isLabelOpen: state.boardModule.isLabelOpen\n    }\n}\nconst mapDispatchToProps = {\n                    updateBoardCard\n\n                }\n\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview)\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Todo.jsx",["370"],"import React, { Component } from \"react\"\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\n\nexport class Todo extends Component {\n    state = {\n        todo: {\n            title: '',\n            isDone: false\n        },\n    }\n\n    componentDidMount() {\n        const { todo } = this.props\n        if (todo) this.setState({ todo })\n        this.refInput = React.createRef()\n    }\n\n    handelInput = (ev) => {\n        const { name, value} = ev.target\n        this.setState(prevState => ({ todo: { ...prevState.todo, [name]: value } }))\n    }\n\n    toggleIsDone = (ev) => {\n        ev.target.blur()\n        const { checked } = ev.target\n        const {todo} = this.state\n        todo.isDone = checked\n        console.log(todo);\n        this.setState({ todo })\n        this.props.saveTodo(todo)\n    }\n\n    discardChanges = () => {\n        const { todo } = this.props\n        if (todo) this.setState({ todo })\n        else {\n            this.props.toggleAdd()\n            this.setState({ todo: { title: '', isDone: false } })\n        }\n    }\n\n    saveTodo = (ev) => {\n        if (ev.key !== \"Enter\") return\n        ev.preventDefault()\n\n        const { todo } = this.state\n        if (todo.id) ev.currentTarget.blur()\n        if (!todo.title) return\n        this.props.saveTodo(todo)\n        if (todo.id) {\n            this.refInput.current.blur()\n        } else {\n            this.setState({todo: { title: '', isDone: false } })\n            this.refInput.current.focus()\n\n        }\n    }\n\n\n    render() {\n        const isAdd = !this.props.todo\n        const { isInputFocused } = this.state\n\n\n\n        return (\n            <section className=\"card-todo-preview flex align-start\">\n                <input\n                    type=\"checkbox\"\n                    onClick={this.toggleIsDone}\n                    name=\"isDone\"\n                    checked={this.props.todo?.isDone}\n                    style={{ visibility: isAdd ? 'hidden' : 'visible' }}\n                    />\n            <div className={`hidden-actions-form-container  ${isAdd ? 'add' : ''}`}>\n                <form onKeyDown={this.saveTodo} className={`hidden-actions-form ${isAdd ? 'add' : ''}`}>\n                    <input\n                        type=\"text\"\n                        onChange={this.handelInput}\n                        ref={this.refInput}\n                        name=\"title\" placeholder=\"Add an item\"\n                        value={this.state.todo.title}\n                        autoComplete=\"off\"\n                        />\n                </form>\n                <div className=\"hidden-actions flex\">\n                    <button\n                        type=\"button\"\n                        onClick={this.saveTodo}\n                        >\n                        {isAdd ? 'Add' : 'Save'}\n                    </button>\n                    <button\n                        onClick={this.discardChanges}\n                        className=\"icon\"\n                        >\n                        <CloseSharpIcon />\n                    </button>\n                </div>\n            </div>\n        </section>\n        )\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/LinearProgressBar.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPrev2.jsx",["371","372","373","374"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport { Archive } from '@material-ui/icons';\n\n\n\n\nexport class CardPrev2 extends Component {\n    state={\n        editPos:70\n    }\n    componentDidMount(){\n        this.findCardPos()\n    }\n\n    findCardPos=()=>{\n        const {editPos}=this.state\n        const {currGroup,card}=this.props\n        const idx = currGroup.cards.findIndex( groupCard=>groupCard.id===card.id)\n        const top=idx+1\n        const pos= editPos*top\n        if(idx===0){\n            \n            this.setState({editPos:40})\n        }else{\n            this.setState({editPos:pos})\n        }\n        \n    }\n    test=()=>{\n        console.log('test');\n    }\n\n    render() {\n        const {editPos}=this.state\n        const { labels, isEdit,onSave, currGroup, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode } = this.props\n        return (\n            <React.Fragment>\n\n                <div className={`${isEdit ? 'edit' : ''}`}  style={{top:`${editPos}px`}}>\n\n                    <div className=\"edit-container\">\n\n                        <div className={`card-preview ${isEdit ? 'edit' : ''} `}  >\n                            <div className=\"label-container\">\n                                {labels.map((label, idx) => {\n                                    return <div onClick={() => this.onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\n                                        {isLabelOpen && label.title}\n                                    </div>\n                                })\n                                }\n                            </div>\n                            <div className=\"edit-and-title\">\n                                <Link to={`/board/${board._id}/${card.id}`}>\n                                    <div>\n                                        <form action=\"\" onSubmit=\"return false\">\n\n                                            <input disabled={!isEdit} onChange={handleChange}\n                                                onClick={(ev) => {\n                                                    ev.preventDefault()\n                                                }}\n                                                type=\"text\" value={title} />\n                                        </form>\n                                    </div>\n                                </Link>\n                                <span className=\"edit-icon\" onClick={(ev) => {\n                                }} onClick={EnterEditMode} >\n                                    <EditIcon />\n                                </span>\n                            </div>\n                            <div className=\"card-icons\">\n                                {card.description && <SubjectIcon />}\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n                            </div>\n\n\n                        </div>\n\n\n                        { <div className={'edit-menu'}>\n                        \n                            <div className=\"edit-menu-btn\">  <PaymentIcon className=\"edit-menu-icons rotate\" /> <span>  Open Card </span></div>\n                            <div className=\"edit-menu-btn\">  <LabelOutlinedIcon className=\"edit-menu-icons\"  />  Edit labels </div>\n                            <div className=\"edit-menu-btn\"> <PersonOutlineIcon className=\"edit-menu-icons\"/> change members</div>\n                            <div className=\"edit-menu-btn\"> <ArrowRightAltIcon className=\"edit-menu-icons\"/> move  </div>\n                            <div className=\"edit-menu-btn\"> <PaymentIcon className=\"edit-menu-icons rotate\"/> copy </div>\n                            <div className=\"edit-menu-btn\"> <AccessTimeIcon className=\"edit-menu-icons\"/> change due date </div>\n                            <div className=\"edit-menu-btn\"> <ArchiveOutlinedIcon className=\"edit-menu-icons\"/> archive </div>\n                        </div>\n                        }\n\n\n                    </div>\n\n                    <div className='card-save-btn'>\n                        <button   onClick={onSave} style={{cursor:'pointer'}} >Save</button>\n                    </div>\n\n                </div >\n            </React.Fragment >\n\n        )\n    }\n}\n\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPrev.jsx",["375"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport class CardPrev extends Component {\n\n\n    render() {\n        const { labels, isEdit, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode } = this.props\n\n        return (\n            <React.Fragment>\n{/* ${isEdit ? 'edit' : ''} */}\n                    <div className={`card-preview  `} >\n\n                        <div className=\"label-container\">\n                            {labels.map((label, idx) => {\n                                return <div onClick={() => onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\n                                    {isLabelOpen && label.title}\n                                </div>\n                            })\n                            }\n                        </div>\n                        <div className=\"edit-and-title\">\n                            <Link to={`/board/${board._id}/${card.id}`}>\n                                <div>\n                                    <form action=\"\">\n\n                                        <input disabled={!isEdit} onChange={handleChange}\n                                            onClick={(ev) => {\n                                                ev.preventDefault()\n                                            }}\n                                            type=\"text\" value={title} />\n                                    </form>\n                                </div>\n                            </Link>\n                            <span className=\"edit-icon\" onClick={(ev) => {\n                            }} onClick={EnterEditMode} >\n                                <EditIcon />\n                            </span>\n                        </div>\n                        <div className=\"card-icons\">\n                            {card.description && <SubjectIcon />}\n                            {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                            {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                            {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n                        </div>\n\n                    </div>\n\n           \n                 \n            </React.Fragment>\n\n        )\n    }\n}\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddDueDateModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddCoverModal.jsx",["376"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/socketService.js",["377"],{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","severity":1,"message":"383","line":19,"column":35,"nodeType":"384","messageId":"385","endLine":19,"endColumn":37},{"ruleId":"386","severity":1,"message":"387","line":91,"column":79,"nodeType":"388","endLine":91,"endColumn":94},{"ruleId":"389","severity":1,"message":"390","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":16},{"ruleId":"389","severity":1,"message":"393","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":16},{"ruleId":"389","severity":1,"message":"394","line":1,"column":10,"nodeType":"391","messageId":"392","endLine":1,"endColumn":21},{"ruleId":"389","severity":1,"message":"395","line":3,"column":38,"nodeType":"391","messageId":"392","endLine":3,"endColumn":47},{"ruleId":"389","severity":1,"message":"396","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":22},{"ruleId":"389","severity":1,"message":"397","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":21},{"ruleId":"389","severity":1,"message":"398","line":12,"column":9,"nodeType":"391","messageId":"392","endLine":12,"endColumn":24},{"ruleId":"389","severity":1,"message":"399","line":2,"column":16,"nodeType":"391","messageId":"392","endLine":2,"endColumn":23},{"ruleId":"389","severity":1,"message":"400","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":17},{"ruleId":"389","severity":1,"message":"401","line":58,"column":38,"nodeType":"391","messageId":"392","endLine":58,"endColumn":44},{"ruleId":"402","severity":1,"message":"403","line":37,"column":29,"nodeType":"404","endLine":37,"endColumn":75},{"ruleId":"402","severity":1,"message":"403","line":43,"column":29,"nodeType":"404","endLine":43,"endColumn":75},{"ruleId":"405","severity":1,"message":"406","line":62,"column":20,"nodeType":"404","endLine":62,"endColumn":24},{"ruleId":"402","severity":1,"message":"403","line":50,"column":29,"nodeType":"404","endLine":50,"endColumn":54},{"ruleId":"405","severity":1,"message":"406","line":37,"column":20,"nodeType":"404","endLine":37,"endColumn":24},{"ruleId":"389","severity":1,"message":"407","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":25},{"ruleId":"389","severity":1,"message":"408","line":6,"column":27,"nodeType":"391","messageId":"392","endLine":6,"endColumn":36},{"ruleId":"409","severity":1,"message":"410","line":17,"column":50,"nodeType":"411","messageId":"412","endLine":17,"endColumn":51},{"ruleId":"389","severity":1,"message":"400","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":17},{"ruleId":"389","severity":1,"message":"413","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":21},{"ruleId":"402","severity":1,"message":"403","line":118,"column":29,"nodeType":"404","endLine":118,"endColumn":50},{"ruleId":"389","severity":1,"message":"414","line":36,"column":17,"nodeType":"391","messageId":"392","endLine":36,"endColumn":21},{"ruleId":"389","severity":1,"message":"414","line":37,"column":17,"nodeType":"391","messageId":"392","endLine":37,"endColumn":21},{"ruleId":"389","severity":1,"message":"415","line":4,"column":9,"nodeType":"391","messageId":"392","endLine":4,"endColumn":20},{"ruleId":"389","severity":1,"message":"416","line":5,"column":10,"nodeType":"391","messageId":"392","endLine":5,"endColumn":14},{"ruleId":"417","severity":1,"message":"418","line":16,"column":21,"nodeType":"419","messageId":"420","endLine":16,"endColumn":23},{"ruleId":"417","severity":1,"message":"418","line":16,"column":31,"nodeType":"419","messageId":"420","endLine":16,"endColumn":33},{"ruleId":"389","severity":1,"message":"421","line":1,"column":10,"nodeType":"391","messageId":"392","endLine":1,"endColumn":19},{"ruleId":"389","severity":1,"message":"422","line":3,"column":10,"nodeType":"391","messageId":"392","endLine":3,"endColumn":25},{"ruleId":"389","severity":1,"message":"423","line":13,"column":19,"nodeType":"391","messageId":"392","endLine":13,"endColumn":23},{"ruleId":"389","severity":1,"message":"424","line":13,"column":25,"nodeType":"391","messageId":"392","endLine":13,"endColumn":29},{"ruleId":"389","severity":1,"message":"425","line":13,"column":31,"nodeType":"391","messageId":"392","endLine":13,"endColumn":36},{"ruleId":"389","severity":1,"message":"421","line":1,"column":10,"nodeType":"391","messageId":"392","endLine":1,"endColumn":19},{"ruleId":"389","severity":1,"message":"426","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":24},{"ruleId":"389","severity":1,"message":"425","line":12,"column":19,"nodeType":"391","messageId":"392","endLine":12,"endColumn":24},{"ruleId":"389","severity":1,"message":"423","line":12,"column":26,"nodeType":"391","messageId":"392","endLine":12,"endColumn":30},{"ruleId":"389","severity":1,"message":"394","line":2,"column":10,"nodeType":"391","messageId":"392","endLine":2,"endColumn":21},{"ruleId":"427","severity":1,"message":"428","line":31,"column":17,"nodeType":"404","endLine":31,"endColumn":64},{"ruleId":"389","severity":1,"message":"407","line":4,"column":10,"nodeType":"391","messageId":"392","endLine":4,"endColumn":25},{"ruleId":"389","severity":1,"message":"395","line":4,"column":38,"nodeType":"391","messageId":"392","endLine":4,"endColumn":47},{"ruleId":"382","severity":1,"message":"429","line":44,"column":48,"nodeType":"384","messageId":"430","endLine":44,"endColumn":50},{"ruleId":"389","severity":1,"message":"407","line":7,"column":10,"nodeType":"391","messageId":"392","endLine":7,"endColumn":25},{"ruleId":"389","severity":1,"message":"408","line":7,"column":27,"nodeType":"391","messageId":"392","endLine":7,"endColumn":36},{"ruleId":"389","severity":1,"message":"431","line":23,"column":30,"nodeType":"391","messageId":"392","endLine":23,"endColumn":41},{"ruleId":"389","severity":1,"message":"432","line":63,"column":17,"nodeType":"391","messageId":"392","endLine":63,"endColumn":31},{"ruleId":"389","severity":1,"message":"433","line":14,"column":10,"nodeType":"391","messageId":"392","endLine":14,"endColumn":17},{"ruleId":"389","severity":1,"message":"434","line":47,"column":40,"nodeType":"391","messageId":"392","endLine":47,"endColumn":49},{"ruleId":"389","severity":1,"message":"435","line":47,"column":51,"nodeType":"391","messageId":"392","endLine":47,"endColumn":62},{"ruleId":"386","severity":1,"message":"387","line":78,"column":36,"nodeType":"388","endLine":78,"endColumn":59},{"ruleId":"386","severity":1,"message":"387","line":42,"column":32,"nodeType":"388","endLine":42,"endColumn":55},{"ruleId":"402","severity":1,"message":"403","line":55,"column":38,"nodeType":"404","endLine":55,"endColumn":130},{"ruleId":"389","severity":1,"message":"436","line":10,"column":10,"nodeType":"391","messageId":"392","endLine":10,"endColumn":29},"no-native-reassign",["437"],"no-negated-in-lhs",["438"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'RoomIcon' is defined but never used.","'utilService' is defined but never used.","'Draggable' is defined but never used.","'boardService' is defined but never used.","'MoreHorizIcon' is defined but never used.","'AddDueDateModal' is defined but never used.","'NavLink' is defined but never used.","'connect' is defined but never used.","'inMenu' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'menuService' is defined but never used.","'card' is assigned a value but never used.","'cardService' is defined but never used.","'Save' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Component' is defined but never used.","'MemberListModal' is defined but never used.","'save' is assigned a value but never used.","'user' is assigned a value but never used.","'board' is assigned a value but never used.","'LabelListModal' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'isModalOpen' is assigned a value but never used.","'isInputFocused' is assigned a value but never used.","'Archive' is defined but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","'createSocketService' is defined but never used.","no-global-assign","no-unsafe-negation"]