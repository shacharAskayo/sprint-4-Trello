[{"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\index.js":"1","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\serviceWorkerRegistration.js":"2","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\reportWebVitals.js":"3","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\store.js":"4","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\App.jsx":"5","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardList.jsx":"6","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardPreview.jsx":"7","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\index.js":"8","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\boardAction.js":"9","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Board.jsx":"10","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Home.jsx":"11","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\httpService.js":"12","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\boardService.js":"13","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\cardReducer.js":"14","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\reviewReducer.js":"15","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\systemReducer.js":"16","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\menuReducer.js":"17","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\userReducer.js":"18","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\boardReducer.js":"19","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupList.jsx":"20","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Header.jsx":"21","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardHeader.jsx":"22","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\Menu.jsx":"23","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Card.jsx":"24","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\utilService.js":"25","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\cardService.js":"26","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\ActivityList.jsx":"27","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardMenu.jsx":"28","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx":"29","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx":"30","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx":"31","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx":"32","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx":"33","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\DynamicCardActionModal.jsx":"34","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupPreview.jsx":"35","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\userActions.js":"36","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx":"37","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx":"38","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx":"39","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx":"40","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx":"41","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx":"42","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardContent.jsx":"43","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\menuAction.js":"44","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelListModal.jsx":"45","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\userService.js":"46","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\cardActions.js":"47","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\menuService.js":"48","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardList.jsx":"49","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelList.jsx":"50","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardDescription.jsx":"51","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentList.jsx":"52","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklistList.jsx":"53","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardAttachmentList.jsx":"54","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPreview.jsx":"55","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentPreview.jsx":"56","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklist.jsx":"57","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPrev.jsx":"58","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPrev2.jsx":"59","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\MyAvatar.jsx":"60","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Todo.jsx":"61","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\LinearProgressBar.jsx":"62","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx":"63","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx":"64","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx":"65","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx":"66","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuMore\\SectionLabels.jsx":"67"},{"size":935,"mtime":1610481008514,"results":"68","hashOfConfig":"69"},{"size":5201,"mtime":1610481008516,"results":"70","hashOfConfig":"69"},{"size":377,"mtime":1610481008516,"results":"71","hashOfConfig":"69"},{"size":323,"mtime":1610481008527,"results":"72","hashOfConfig":"69"},{"size":749,"mtime":1610853790676,"results":"73","hashOfConfig":"69"},{"size":971,"mtime":1610823614957,"results":"74","hashOfConfig":"69"},{"size":362,"mtime":1610540312102,"results":"75","hashOfConfig":"69"},{"size":560,"mtime":1610622588603,"results":"76","hashOfConfig":"69"},{"size":4027,"mtime":1610823614983,"results":"77","hashOfConfig":"69"},{"size":1498,"mtime":1610839811965,"results":"78","hashOfConfig":"69"},{"size":3578,"mtime":1610823614971,"results":"79","hashOfConfig":"69"},{"size":1109,"mtime":1610586031761,"results":"80","hashOfConfig":"69"},{"size":4605,"mtime":1610882174980,"results":"81","hashOfConfig":"69"},{"size":377,"mtime":1610586031764,"results":"82","hashOfConfig":"69"},{"size":669,"mtime":1610481008526,"results":"83","hashOfConfig":"69"},{"size":322,"mtime":1610481008526,"results":"84","hashOfConfig":"69"},{"size":279,"mtime":1610623330055,"results":"85","hashOfConfig":"69"},{"size":818,"mtime":1610554789226,"results":"86","hashOfConfig":"69"},{"size":910,"mtime":1610823614985,"results":"87","hashOfConfig":"69"},{"size":3171,"mtime":1610823614960,"results":"88","hashOfConfig":"69"},{"size":2003,"mtime":1610854016776,"results":"89","hashOfConfig":"69"},{"size":665,"mtime":1610823614955,"results":"90","hashOfConfig":"69"},{"size":7539,"mtime":1610885431958,"results":"91","hashOfConfig":"69"},{"size":3640,"mtime":1610823614964,"results":"92","hashOfConfig":"69"},{"size":682,"mtime":1610823614979,"results":"93","hashOfConfig":"69"},{"size":2235,"mtime":1610823614977,"results":"94","hashOfConfig":"69"},{"size":1317,"mtime":1610717824799,"results":"95","hashOfConfig":"69"},{"size":2391,"mtime":1610823614967,"results":"96","hashOfConfig":"69"},{"size":2246,"mtime":1610689479900,"results":"97","hashOfConfig":"69"},{"size":3983,"mtime":1610851756132,"results":"98","hashOfConfig":"69"},{"size":1082,"mtime":1610885289505,"results":"99","hashOfConfig":"69"},{"size":1532,"mtime":1610854481949,"results":"100","hashOfConfig":"69"},{"size":2172,"mtime":1610837721867,"results":"101","hashOfConfig":"69"},{"size":1518,"mtime":1610823614968,"results":"102","hashOfConfig":"69"},{"size":6185,"mtime":1610824459587,"results":"103","hashOfConfig":"69"},{"size":1832,"mtime":1610554626638,"results":"104","hashOfConfig":"69"},{"size":515,"mtime":1610652716076,"results":"105","hashOfConfig":"69"},{"size":244,"mtime":1610853476549,"results":"106","hashOfConfig":"69"},{"size":243,"mtime":1610687342378,"results":"107","hashOfConfig":"69"},{"size":2141,"mtime":1610883324557,"results":"108","hashOfConfig":"69"},{"size":1568,"mtime":1610709818319,"results":"109","hashOfConfig":"69"},{"size":6211,"mtime":1610831501903,"results":"110","hashOfConfig":"69"},{"size":1089,"mtime":1610823614967,"results":"111","hashOfConfig":"69"},{"size":687,"mtime":1610850855482,"results":"112","hashOfConfig":"69"},{"size":1224,"mtime":1610823614969,"results":"113","hashOfConfig":"69"},{"size":2586,"mtime":1610586031762,"results":"114","hashOfConfig":"69"},{"size":704,"mtime":1610586031763,"results":"115","hashOfConfig":"69"},{"size":301,"mtime":1610831252926,"results":"116","hashOfConfig":"69"},{"size":3889,"mtime":1610823614958,"results":"117","hashOfConfig":"69"},{"size":647,"mtime":1610823614968,"results":"118","hashOfConfig":"69"},{"size":2488,"mtime":1610823614967,"results":"119","hashOfConfig":"69"},{"size":2826,"mtime":1610881152750,"results":"120","hashOfConfig":"69"},{"size":878,"mtime":1610823614966,"results":"121","hashOfConfig":"69"},{"size":1532,"mtime":1610823614966,"results":"122","hashOfConfig":"69"},{"size":3179,"mtime":1610823614959,"results":"123","hashOfConfig":"69"},{"size":509,"mtime":1610823614967,"results":"124","hashOfConfig":"69"},{"size":1564,"mtime":1610823614966,"results":"125","hashOfConfig":"69"},{"size":2813,"mtime":1610823614959,"results":"126","hashOfConfig":"69"},{"size":5223,"mtime":1610823614959,"results":"127","hashOfConfig":"69"},{"size":531,"mtime":1610823614962,"results":"128","hashOfConfig":"69"},{"size":3199,"mtime":1610823614969,"results":"129","hashOfConfig":"69"},{"size":577,"mtime":1610823614962,"results":"130","hashOfConfig":"69"},{"size":2323,"mtime":1610854224261,"results":"131","hashOfConfig":"69"},{"size":1268,"mtime":1610853325491,"results":"132","hashOfConfig":"69"},{"size":303,"mtime":1610854465347,"results":"133","hashOfConfig":"69"},{"size":605,"mtime":1610881773738,"results":"134","hashOfConfig":"69"},{"size":585,"mtime":1610885120114,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1ogt17l",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\index.js",[],["289","290"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\serviceWorkerRegistration.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\reportWebVitals.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\store.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\App.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardList.jsx",["291"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardAction.js'\r\nimport { BoardPreview } from './BoardPreview.jsx'\r\n\r\nclass _BoardList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n    get boardsForDisplay() {\r\n        let boards = this.props.boards\r\n        return boards\r\n    }\r\n    render() {\r\n        const { boards } = this.boardsForDisplay\r\n        return (\r\n            <section className=\"board-list\">\r\n                {boards.map(board => {\r\n                    <div> key={board._id}\r\n                        <BoardPreview board={board} /></div>\r\n                })}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardPreview.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\index.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\boardAction.js",["292"],"import { boardService } from '../../services/boardService.js'\r\nimport { httpService } from '../../services/httpService.js'\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query()\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err)\r\n    }\r\n  }\r\n}\r\nexport function addBoard(newBoard){\r\n  return dispatch=>{\r\n    const board = boardService.addBoard(newBoard)\r\n    dispatch({type:'ADD_BOARD',board:board})\r\n  }\r\n}\r\n\r\nexport function getBoardById(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      // socketService.on('board-update',updatedBoard=>{\r\n      //   dispatch({ type: 'SET_BOARD', updatedBoard })\r\n      // })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function addCard(boardId, groupId, cardToAdd) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addCard(boardId, groupId, cardToAdd)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addGroup(boardId, group) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addGroup(boardId, group)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoardCard(board, card) {\r\n  return async dispatch => {\r\n    const newBoard = boardService.updateBoardCard(board, card)\r\n    //const newBoard = await httpService.put('board/' + board._id,boardService.updateBoardCard(board,card))\r\n    dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n  }\r\n}\r\n\r\nexport function openLabel() {\r\n  return dispatch => {\r\n    dispatch({ type: 'OPEN-LABELS' })\r\n  }\r\n}\r\nexport function setBackground(board, background) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = { ...board, style: background }\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectImg(board, imgSrc) {\r\n  return async dispatch => {\r\n    try {\r\n      const selectedImg = await boardService.selectImg(board, imgSrc)\r\n      dispatch({ type: 'CHANGE_STYLE', selectedImg })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectImg', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectColor(board, color) {\r\n  return async dispatch => {\r\n    try {\r\n      console.log('hi***');\r\n      const selectedColor = await boardService.selectColor(board, color)\r\n      console.log('selectedColor:', selectedColor);\r\n      dispatch({ type: 'SELECT_COLOR', selectedColor })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateCardsLocation(board,group,cards){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateCardsLocation(board,group,cards)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateGroupLoaction(board,groups){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupLoaction(board,groups)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function editGroupTitle(board,group,groupTitle){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupTitle(board,group,groupTitle)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Board.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Home.jsx",["293"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards,addBoard } from '../store/actions/boardAction'\r\n// import { BoardList } from '../cmps/BoardList'\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        bgColors: [\r\n            { color: 'lightgray' },\r\n            { color: 'green' },\r\n            { color: 'coral' },\r\n            { color: '#ff4d4d' },\r\n            { color: 'crimson' },\r\n            { color: 'yellowgreen' },\r\n            { color: 'teal' },\r\n            { color: 'blue' },\r\n            { color: 'pink' }\r\n        ],\r\n        board:{\r\n            _id:'',\r\n            title:'',\r\n            createdAt:Date.now(),\r\n            style:{},\r\n            isPrivate:false,\r\n            createBy:{},\r\n            labels:[],\r\n            members:[],\r\n            groups:[],\r\n            activities:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    handleChange=(ev)=>{\r\n        const {value}=ev.target\r\n        const {board} = this.state\r\n        this.setState({\r\n            board:{...board,title:value}\r\n        })\r\n    }\r\n    \r\n    setBgColor=(color)=>{\r\n        const {board} = this.state\r\n        this.setState({\r\n            board:{...board,style:{...board.style,backgroundColor:color}}\r\n        })\r\n    }\r\n\r\n\r\n    addBoard = () => {\r\n        const {board} = this.state\r\n        this.props.addBoard(board)\r\n        this.setState({isOpen:false})\r\n    }\r\n    render() {\r\n        const { isOpen, bgColors } = this.state\r\n        const { boards } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {isOpen && <section className=\"new-board-modal\">\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Add board title\" onChange={this.handleChange} />\r\n                        <button onClick={this.addBoard}> Add Board</button>\r\n                    </div>\r\n                    <div className=\"color-picker\">\r\n                        {bgColors.map(bg => <div className=\"colors\" style={{ backgroundColor: bg.color }} onClick={()=>this.setBgColor(bg.color)}></div>)}\r\n                    </div>\r\n                </section>\r\n                }\r\n                <section>\r\n                    <h1>Create new board</h1>\r\n                    <div  className=\"board-preview\" onClick={()=>this.setState({isOpen:true})} >\r\n                        <span>\r\n                            New Board\r\n                    </span>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"my-boards\">\r\n                    <h1>My Boards</h1>\r\n                    {boards&& boards.map((board,idx) => {\r\n                        return (\r\n                            <div key={board.id}>\r\n                                <Link to={`/board/${board._id}`}>\r\n                                    <div key={idx}  className=\"board-preview\" key={board._id} style={board.style}>\r\n                                        {board.title}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard\r\n}\r\n\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\httpService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\boardService.js",["294"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\cardReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\reviewReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\systemReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\menuReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\userReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\boardReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupList.jsx",["295","296","297"],"import React, { Component } from 'react'\r\nimport { GroupPreview } from \"./GroupPreview\";\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nexport class GroupList extends Component {\r\n\r\n    state = {\r\n        // isModalOpen:false,\r\n        group: {\r\n            id: '',\r\n            title: '',\r\n            style: {},\r\n            cards: []\r\n        },\r\n        isAdding: false\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const { group } = this.state\r\n        const { value } = ev.target\r\n        this.setState({\r\n            group: { ...group, title: value }\r\n        })\r\n    }\r\n\r\n    onShowAddBtn = () => {\r\n        this.setState({ isAdding: true })\r\n    }\r\n    onAddGroup = () => {\r\n        const { group } = this.state\r\n        const { board } = this.props\r\n        this.props.addGroup(board._id, group)\r\n        this.setState({\r\n            group: { ...group, title: '' },\r\n            isAdding: false\r\n        })\r\n\r\n    }\r\n    handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const { board } = this.props\r\n        const { groups } = board\r\n        const items = Array.from(groups)\r\n        const [reorderedItem] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n        this.props.updateGroupLoaction(board, items)\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { groups } = this.props.board\r\n        return (\r\n            // <DragDropContext>\r\n                // <Droppable droppableId='board' type=\"GROUP\">\r\n                    // {(provided) => (\r\n                        // <div className=\"group-container\" ref={provided.innerRef} {...provided.droppableProps}  >\r\n                        <div className=\"group-container\" onClick={this.onEditModalClose}   >\r\n                            {groups && groups.map((group, idx) => {\r\n                                return (\r\n                                        // <Draggable key={group.id} draggableId={group.id} index={idx}>\r\n                                            // {(provided) => (\r\n                                                // <div ref={provided.innerRef} {...provided.draggbleProps} {...provided.dragHandleProps}>\r\n                                                    <GroupPreview group={group}   />\r\n                                                // </div>\r\n                                            // )}\r\n                                    // </Draggable>\r\n                                     )\r\n                            })}\r\n                            <div >\r\n                                <form action=\"\">\r\n                                    <input className=\"add-list-input\" type=\"text\" placeholder=\"+ Add another list\" value={this.state.group.title} onClick={this.onShowAddBtn} onChange={this.handleChange}  />\r\n                                    {this.state.isAdding && <button onClick={this.onAddGroup}>Add List</button>}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    // )}\r\n                // </Droppable>\r\n            // </DragDropContext>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Header.jsx",["298"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardHeader.jsx",["299"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n//icons:\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nclass _BoardHeader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex board-header\" >\r\n                <h4>board header</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // getBoardById,\r\n    // addGroup\r\n}\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\Menu.jsx",["300","301"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Card.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\utilService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\cardService.js",["302"],"import {utilService} from './utilService'\r\n\r\nexport const cardService = {\r\n    getCardById,\r\n    getCards,\r\n    getCardLabels,\r\n    getCardForUpdate,\r\n    updateChecklistTodo,\r\n    removeChecklist,\r\n    getActivityToAdd,\r\n    getCommentToAdd\r\n\r\n}\r\n\r\nfunction getCardById(board, cardId) {\r\n    var currCard\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) currCard = card\r\n    }))\r\n    const labels = getCardLabels(board, currCard.labels)\r\n    const activities = _getCardActivities(board, cardId)\r\n    return {...currCard, labels, activities }\r\n}\r\n\r\nfunction getCardForUpdate(card){\r\n    delete card.activities\r\n    const labels = card.labels.map(label => label.id)\r\n    return {...card, labels}\r\n\r\n\r\n}\r\nfunction _getCardActivities(board, cardId) {\r\n    return board.activities.filter(act => act.card.id === cardId)\r\n}\r\n\r\nfunction getCardLabels(board, labels) {\r\n    return board.labels.filter(label => labels.includes(label.id))\r\n}\r\n\r\nfunction getCards(group){\r\n    const cards = group.cards\r\n    return cards\r\n}\r\n\r\nfunction updateChecklistTodo(card, checklist, todo){\r\n    const todoToUpdate = {...todo}\r\n    if (todoToUpdate.id) var todos = checklist.todos.map(todo => (todo.id === todoToUpdate.id) ? todoToUpdate : todo)\r\n    else {\r\n        todoToUpdate.id = utilService.makeId()\r\n        var todos = [...checklist.todos, todoToUpdate]\r\n    }\r\n    const currChecklist = {...checklist, todos}\r\n    const checklists = card.checklists.map(checklist => (checklist.id === currChecklist.id) ? currChecklist : checklist)\r\n    return {...card, checklists}\r\n}\r\n\r\nfunction removeChecklist(card, currChecklist){\r\n    const checklists = card.checklists.filter(checklist => checklist.id !== currChecklist.id)\r\n    return {...card, checklists}\r\n}\r\n\r\nfunction getActivityToAdd(card, user, txt ){\r\n    \r\n        return {\r\n            id: utilService.makeId(),\r\n            txt ,\r\n            createdAt: Date.now(),\r\n            createdBy: user,\r\n            card: {\r\n               id: card.id,\r\n               title: card.title\r\n            }\r\n        }\r\n\r\n}\r\n\r\nfunction getCommentToAdd(txt, user){\r\n    return {txt, createdAt: Date.now(), createdBy: user, id: utilService.makeId()}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\ActivityList.jsx",["303","304"],"import { Component } from \"react\"\r\n\r\n//icons:\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\n// import FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\nexport class ActivityList extends Component {\r\n\r\n    state = {\r\n        isShown: false\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n    render() {\r\n        const { activities, inMenu } = this.props\r\n        const { isShown } = this.state\r\n        return <div className=\"attachments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                {!inMenu && <div className=\"flex align-start\">\r\n                    <span><PlaylistAddCheckIcon /></span>\r\n                    <h4 className=\"option-title\">Activity</h4>\r\n                </div>}\r\n                {!inMenu && <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>}\r\n            </header>\r\n            {isShown || inMenu && activities.map(act =>\r\n                <div key={act.id}>\r\n                    <span>{act.createdBy.fullname}: </span>\r\n                    <span> {act.txt}</span>\r\n                    <br />\r\n                    <small>At: {act.createdAt}</small>\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardMenu.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx",["305","306","307"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\r\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\r\n\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n//imgs:\r\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\r\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\r\n\r\nexport class SectionBackground extends Component {\r\n\r\n    state = {\r\n        currType: null,\r\n        menuTitle: 'Change Background',\r\n        photosSrc,\r\n        colorsSrc\r\n    }\r\n\r\n    goBackBg = () => { this.setState({ currType: null }) }\r\n\r\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\r\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\r\n\r\n    render() {\r\n        const { currType, photosSrc, colorsSrc } = this.state\r\n        return (\r\n            <section className=\"background-section\">\r\n                {currType === null && <section className=\"flex photos-colors\">\r\n                    <div className=\"photos\">\r\n                        <button onClick={this.choosePhotos}>\r\n                            <img src={photosSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Photos</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"colors\">\r\n                        <button onClick={this.chooseColors}>\r\n                            <img src={colorsSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Colors</span>\r\n                        </button>\r\n                    </div>\r\n                </section>}\r\n                {currType && <button className=\"back-bg-btn\" onClick={this.goBackBg}><ArrowBackIosIcon /></button>}\r\n                <hr className=\"hr-menu\" />\r\n                <DynamicCmpBg currType={currType} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction DynamicCmpBg({ currType }) {\r\n    switch (currType) {\r\n        case 'PhotosArea':\r\n            return <PhotosArea />\r\n        case 'ColorsArea':\r\n            return <ColorsArea />\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx",["308"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx",["309"],"import { Component } from 'react'\r\n\r\nimport stick1 from '../../../../assets/stickers/sticker-01.png'\r\nimport stick2 from '../../../../assets/stickers/sticker-02.png'\r\nimport stick3 from '../../../../assets/stickers/sticker-03.png'\r\nimport stick4 from '../../../../assets/stickers/sticker-04.png'\r\nimport stick5 from '../../../../assets/stickers/sticker-05.png'\r\nimport stick6 from '../../../../assets/stickers/sticker-06.png'\r\nimport stick7 from '../../../../assets/stickers/sticker-07.png'\r\nimport stick8 from '../../../../assets/stickers/sticker-08.png'\r\nimport stick9 from '../../../../assets/stickers/sticker-09.png'\r\nimport stick10 from '../../../../assets/stickers/sticker-10.png'\r\nimport stick11 from '../../../../assets/stickers/sticker-11.png'\r\nimport stick12 from '../../../../assets/stickers/sticker-12.png'\r\n\r\n\r\nexport class SectionStickers extends Component {\r\n\r\n    state = {\r\n        stickers: [\r\n            { src: stick1, _id: 'stick101' },\r\n            { src: stick2, _id: 'stick102' },\r\n            { src: stick3, _id: 'stick103' },\r\n            { src: stick4, _id: 'stick104' },\r\n            { src: stick5, _id: 'stick105' },\r\n            { src: stick6, _id: 'stick106' },\r\n            { src: stick7, _id: 'stick107' },\r\n            { src: stick8, _id: 'stick108' },\r\n            { src: stick9, _id: 'stick109' },\r\n            { src: stick10, _id: 'stick1011' },\r\n            { src: stick11, _id: 'stick1011' },\r\n            { src: stick12, _id: 'stick1012' }\r\n\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        const { stickers } = this.state\r\n\r\n        console.log('stickers:', stickers);\r\n        if (!stickers || !stickers.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"stickers-section\" style={{ display: \"grid\" }}>\r\n                <h1>Stickers!</h1>\r\n                <div className=\"stickers-area\">\r\n                    {stickers.map((sticker, idx) => {\r\n\r\n                        return <div className=\"sticker-img\" key={idx}>\r\n                            <img src={sticker.src} />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\DynamicCardActionModal.jsx",["310"],"import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LabelListModal } from \"./LabelListModal\";\r\n\r\n\r\nclass _DynamicCardActionModal extends Component {\r\n\r\n    render() {\r\n        const { card, currModal,save,board, closeModal } = this.props\r\n        switch (currModal) {\r\n            case null:\r\n                return null\r\n            // case 'members':\r\n            //     return <AddMemberModal card={card} save={save} />\r\n            case 'labels':\r\n                return <LabelListModal closeModal={closeModal} card={card} save={save} board={board}/>\r\n            // case 'checklist':\r\n            //     return <AddChecklistModal card={card} save={save} />\r\n            // case 'dueDate':\r\n            //     return <AddDueDateModal card={card} save={save} />\r\n            // case 'attachment':\r\n            //     return <AddAttachmentModal card={card} save={save} />\r\n            // case 'cover':\r\n            //     return  <AddCover card={card} save={save} />\r\n            // case 'move':\r\n            //     return \r\n            // case 'copy':\r\n            //     return\r\n            // case 'watch':\r\n            //     return\r\n            // case 'archive':\r\n            //     return\r\n            // case 'share':\r\n            //     return\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const DynamicCardActionModal = connect(mapStateToProps, mapDispatchToProps)(_DynamicCardActionModal)\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupPreview.jsx",["311","312","313","314","315"],"import React, { Component } from 'react'\r\nimport { CardList } from \"./CardList\";\r\nimport { connect } from 'react-redux'\r\nimport { loadCards } from '../store/actions/cardActions'\r\nimport { addCard, openLabel, updateCardsLocation,editGroupTitle } from '../store/actions/boardAction'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        groupTitle:'',\r\n        card: {\r\n            createdBy: {},\r\n            id: '',\r\n            title: '',\r\n            description: '',\r\n            createdAt: Date.now(),\r\n            dueDate: '',\r\n            style: {},\r\n            comments: [],\r\n            checklists: [],\r\n            attachments: [],\r\n            members: [],\r\n            labels: []\r\n        },\r\n        isAdding: false,\r\n        isChangeTitle:false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {group} = this.props\r\n        this.props.loadCards(group)\r\n        this.setState({groupTitle:group.title})\r\n    }\r\n\r\n\r\n    onShowAddBtn = () => {\r\n        this.setState({ isAdding: true })\r\n    }\r\n    handleChange = (ev) => {\r\n        const { card } = this.state\r\n        const { value } = ev.target\r\n        this.setState({\r\n            card: { ...card, title: value }\r\n        })\r\n    }\r\n    onAddCard = async () => {\r\n        const { card } = this.state\r\n        const { board, group } = this.props\r\n        this.props.addCard(board._id, group.id, card)\r\n        this.setState({\r\n            card: { ...card, title: '' },\r\n            isAdding: false\r\n        })\r\n    }\r\n    \r\n    handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const { board, group } = this.props\r\n        const { cards } = group\r\n        const items = Array.from(cards)\r\n        const [reorderedItem] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n        this.setState({ cards: items })\r\n        this.props.updateCardsLocation(board, group, items)\r\n    }\r\n    \r\n    handleEditGroupTitle=(ev)=>{\r\n        const {value} = ev.target\r\n        // console.log(ev.target.value);\r\n        this.setState({groupTitle:value})\r\n    }\r\n    \r\n    discardChanges = (ev) => {\r\n        const { group } = this.props\r\n        ev.currentTarget.blur()\r\n        this.setState({ groupTitle:group.title, isChangeTitle:false})\r\n    }\r\n    \r\n    editGroupTitle=()=>{\r\n        const { board, group } = this.props\r\n        const {groupTitle}= this.state\r\n        this.props.editGroupTitle(board,group,groupTitle)\r\n        this.setState({isChangeTitle:false})\r\n    }\r\n\r\n    render() {\r\n        const { group, board, isLabelOpen, openLabel, updateCardsLocation,isModalOpen,onEditModalOpen } = this.props\r\n        const { cards } = group\r\n        const { isAdding ,groupTitle,isChangeTitle } = this.state\r\n        const { title } = this.state.card\r\n        return (\r\n\r\n                    <div className=\"group-preview\" >\r\n                        <span className=\"group-menu-btn\" onClick={this.openMenu}>...</span>\r\n                            <div className={`hidden-actions-form-container`}>\r\n                                <form action=\"\" className={`hidden-actions-form`}>\r\n                                    <input onClick={()=>{this.setState({isChangeTitle:true})}} onChange={this.handleEditGroupTitle} type=\"text\"  value={groupTitle} autoComplete=\"off\"/>\r\n                                </form>\r\n                                {isChangeTitle&&<div className=\"hidden-actions flex\">\r\n                                        <button type=\"button\" onClick={this.editGroupTitle} style={{marginLeft:'6px'}} > save </button>\r\n                                        <button onClick={this.discardChanges} className=\"icon\">\r\n                                        <CloseSharpIcon />\r\n                                        </button>\r\n                                    </div>\r\n    }\r\n                            </div>\r\n                            <CardList cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group}    />\r\n                            <form action=\"\">\r\n                                <input onClick={this.onShowAddBtn} value={title} type=\"text\" placeholder=\"+ Add another card \" onChange={this.handleChange} />\r\n                                {isAdding && <button onClick={this.onAddCard}> Add Card</button>}\r\n                            </form>\r\n                        </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        cards: state.cardModule.cards,\r\n        board: state.boardModule.board,\r\n        isLabelOpen: state.boardModule.isLabelOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCards,\r\n    addCard,\r\n    openLabel,\r\n    updateCardsLocation,\r\n    editGroupTitle\r\n}\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview)\r\n\r\n\r\n/**{\r\n * \r\n * \r\n * \r\n *          TOP\r\n *             // <Droppable droppableId={group.id} type=\"CARD\">\r\n            //  {(provided)=>(\r\n                // <div className=\"group-preview\" ref={provided.innerRef} {...provided.droppableProps}    >\r\n                  // )}\r\n            //  </Droppable>\r\n\r\n\r\n\r\n        const {group,board,isLabelOpen,openLabel,updateCardsLocation} = this.props\r\n        const { cards } = group\r\n        const { isAdding } = this.state\r\n        const { title } = this.state.card\r\n        return (\r\n            <div className=\"group-preview\" >\r\n                <h3>{group.title}</h3>\r\n                <CardList cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group}/>\r\n                <form action=\"\">\r\n                <input onClick={this.onShowAddBtn} value={title} type=\"text\" placeholder=\"+ Add another card \" onChange={this.handleChange} />\r\n                { isAdding && <button onClick={this.onAddCard}> Add Card</button>}\r\n                </form>\r\n            </div>\r\n        )\r\n    } */","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\userActions.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx",["316"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx",["317"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import {menuService} from '../'\r\n//icons:\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n//functions:\r\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\r\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\r\n\r\n//imgs:\r\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\r\n\r\nclass _PhotosArea extends Component {\r\n\r\n    state = {\r\n        photoSearch: '',\r\n        filterBy: {\r\n            name: ''\r\n        },\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ]\r\n        // bgImgs:[]\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.state.bgImgs[0]);\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.setFilter(this.state.filterBy)\r\n        })\r\n    }\r\n    // getFromNet = (q) => {\r\n    //     menuService.getPhotos(q)\r\n    //         .then(res => this.setState({ books: res.items.splice(0, 4) }));\r\n    // }\r\n    // handleChange = (ev) => {\r\n    //     console.log('your search:', ev.target.value);\r\n    //     this.getFromNet(ev.target.value);\r\n    // };\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n    selectImg = (imgSrc) => {\r\n        imgSrc = '../assets/bgImgs/' + (imgSrc.substr(14)).substr(0, 8) + '.jpg'\r\n        console.log('edited imgSrc:', imgSrc);\r\n        this.props.setBackground(this.props.board, { backgroundImage: imgSrc })\r\n    }\r\n\r\n    get imgsForDidsplay() {\r\n        let imgs = this.state.bgImgs\r\n        const regex = new RegExp(this.props.filterBy, 'i')\r\n        imgs = imgs.filter(img => regex.test(img.title))\r\n        return imgs\r\n    }\r\n    render() {\r\n        const { name } = this.state.filterBy\r\n        const imgs = this.imgsForDidsplay\r\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"photo-type\">\r\n                <div className=\"flex search-photo\">\r\n                    <SearchIcon /><input type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Photos\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"photos-area\">\r\n                    {imgs.map((img, idx) => {\r\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                            onClick={() => { this.selectImg(img.src) }}>\r\n                            <img src={img.src} />\r\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        filterBy: state.menuModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBackground,\r\n    setFilter\r\n}\r\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardContent.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\menuAction.js",["318"],"import { boardService } from '../../services/boardService.js'\r\nimport { menuService } from '../../services/menuService.js'\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_PHOTOS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\nexport function saveBoardDesc(board, description) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = await boardService.updateBoardDesc(board, description)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        }\r\n        catch (err) {\r\n            console.log('boardActions: err:', err);\r\n        }\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelListModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\userService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\cardActions.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\menuService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardList.jsx",["319","320","321"],"import React, { Component } from 'react'\r\nimport { CardPreview } from \"./CardPreview\";\r\n// ////React DND///\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport class CardList extends Component {\r\n    state = {\r\n        cards: []\r\n    }\r\n    componentDidMount() {\r\n        const { cards } = this.props\r\n        this.setState({ cards })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            const { cards } = this.props\r\n            this.setState({ cards })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const { board, currGroup } = this.props\r\n        // const { cards } = this.props\r\n        const { cards } = this.state\r\n        const items = Array.from(cards)\r\n        const [reorderedItem] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n        this.setState({ cards: items })\r\n        this.props.updateCardsLocation(board, currGroup, items)\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { board, isLabelOpen, openLabel, currGroup } = this.props\r\n        const { cards } = this.props\r\n        return (\r\n            \r\n            <div className=\"card-list\" >\r\n                {cards.map((card, idx) => {\r\n                    \r\n                    return (\r\n                        \r\n                        // <Draggable key={card.id} draggableId={card.id} index={idx}>\r\n                        //  {(provided)=>(\r\n                            // <div ref={provided.innerRef} {...provided.draggbleProps} {...provided.dragHandleProps} >\r\n                            <CardPreview currGroup={currGroup} key={card.id}  board={board} idx={card.id} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\r\n                            // </div>\r\n                            // )}\r\n                            // </Draggable>\r\n                            )\r\n                        })}\r\n            </div>\r\n        )\r\n    }\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n \r\n \r\n \r\n \r\n \r\n    //     {\r\n    //         const { board, isLabelOpen, openLabel, currGroup } = this.props\r\n    //         console.log('the fucking', board);\r\n    //         // const { cards } = this.props\r\n    //         const { cards } = this.state\r\n    //         return (\r\n    //             <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n    //                 <Droppable droppableId={currGroup.id} type=\"CARD\" >\r\n    //                     {(provided) => (\r\n    //                         <div className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}  >\r\n    //                             {cards.map((card, idx) => {\r\n    //                                 return (\r\n    //                                     <Draggable key={card.id} draggableId={card.id} index={idx}>\r\n    //                                         {(provided) => (\r\n    //                                             <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n    //                                                 <CardPreview board={board} idx={card.id} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\r\n    //                                             </div>\r\n    //                                         )}\r\n    //                                     </Draggable>\r\n    //                                 )\r\n    //                             })}\r\n    //                             {provided.placeholder}\r\n    //                         </div>\r\n    //                     )}\r\n    //                 </Droppable>\r\n    //             </DragDropContext>\r\n    //         )\r\n    //     }\r\n    // }\r\n \r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardDescription.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentList.jsx",["322"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklistList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardAttachmentList.jsx",["323"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport CallMadeOutlinedIcon from '@material-ui/icons/CallMadeOutlined';\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const { card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = { txt, createdAt: Date.now(), createdBy: {}, id: utilService.makeId() }\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    render() {\r\n        const { attachments } = this.props.card\r\n        if (!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <header className=\"flex\">\r\n                <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />\r\n                <h3>Attachments</h3>\r\n            </header>\r\n            {attachments.map(att =>\r\n                <a key={att.id} target=\"_blank\" href={att.url}>\r\n                    <div className=\"attachment flex align-center\">\r\n                        <div>LINK</div>\r\n                        <div className=\"flex align-start\">\r\n                            <h4>{att.title}</h4>\r\n                            <CallMadeOutlinedIcon />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )}\r\n            <button>Add an attachment</button>\r\n        </div>\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPreview.jsx",["324","325","326","327","328","329","330","331"],"import React, { Component } from 'react'\r\nimport { cardService } from \"../services/cardService\";\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { connect } from 'react-redux'\r\nimport { updateBoardCard } from '../store/actions/boardAction'\r\nimport { CardPrev } from './CardPrev'\r\nimport { CardPrev2 } from './CardPrev2'\r\n\r\n\r\n\r\nclass _CardPreview extends Component {\r\n\r\n    state = {\r\n        isModalOpen: false,\r\n        labels: [],\r\n        isEdit: false,\r\n        title: ''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { card, board, isModalOpen } = this.props\r\n        const labels = cardService.getCardLabels(board, card.labels)\r\n        this.setState({\r\n            labels,\r\n            title: card.title\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        // const { isModalOpen } = this.props\r\n        // if (prevProps !== this.props) {\r\n        //     this.setState({ isModalOpen: isModalOpen })\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    onOpenLabel = () => {\r\n        this.props.openLabel()\r\n    }\r\n\r\n    on = (id) => {\r\n        console.log('id:', id);\r\n    }\r\n    EnterEditMode = () => {\r\n        document.body.classList.add('edit-open')\r\n        const { isEdit } = this.state\r\n        this.setState({\r\n            isEdit: !isEdit\r\n        })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ title: value })\r\n    }\r\n    onSave = () => {\r\n        const { card, board } = this.props\r\n        const { title } = this.state\r\n        card.title = title\r\n        console.log(card);\r\n        this.props.updateBoardCard(board, card)\r\n        this.setState({ isEdit: false })\r\n    }\r\n\r\n    render() {\r\n        const { card, board, isLabelOpen,currGroup } = this.props\r\n        const { labels, isEdit, title } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                { <CardPrev isEdit={isEdit} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} EnterEditMode={this.EnterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\r\n                {isEdit && <CardPrev2 currGroup={currGroup} isEdit={isEdit} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} EnterEditMode={this.EnterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        cards: state.cardModule.cards,\r\n        board: state.boardModule.board,\r\n        isLabelOpen: state.boardModule.isLabelOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard\r\n\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview)\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentPreview.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklist.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPrev.jsx",["332"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nexport class CardPrev extends Component {\r\n\r\n\r\n    render() {\r\n        const { labels, isEdit, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode } = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n{/* ${isEdit ? 'edit' : ''} */}\r\n                    <div className={`card-preview  `} >\r\n\r\n                        <div className=\"label-container\">\r\n                            {labels.map((label, idx) => {\r\n                                return <div onClick={() => onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\r\n                                    {isLabelOpen && label.title}\r\n                                </div>\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className=\"edit-and-title\">\r\n                            <Link to={`/board/${board._id}/${card.id}`}>\r\n                                <div>\r\n                                    <form action=\"\">\r\n\r\n                                        <input disabled={!isEdit} onChange={handleChange}\r\n                                            onClick={(ev) => {\r\n                                                ev.preventDefault()\r\n                                            }}\r\n                                            type=\"text\" value={title} />\r\n                                    </form>\r\n                                </div>\r\n                            </Link>\r\n                            <span className=\"edit-icon\" onClick={(ev) => {\r\n                            }} onClick={EnterEditMode} >\r\n                                <EditIcon />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"card-icons\">\r\n                            {card.description && <SubjectIcon />}\r\n                            {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                            {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                            {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n           \r\n                 \r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPrev2.jsx",["333","334","335","336"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport { Archive } from '@material-ui/icons';\r\n\r\n\r\n\r\n\r\nexport class CardPrev2 extends Component {\r\n    state={\r\n        editPos:60\r\n    }\r\n    componentDidMount(){\r\n        this.findCardPos()\r\n    }\r\n\r\n    findCardPos=()=>{\r\n        const {editPos}=this.state\r\n        const {currGroup,card}=this.props\r\n        const idx = currGroup.cards.findIndex( groupCard=>groupCard.id===card.id)\r\n        const top=idx+1\r\n        const pos= editPos*top\r\n        this.setState({editPos:pos})\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {editPos}=this.state\r\n        const { labels, isEdit, currGroup, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className={`${isEdit ? 'edit' : ''}`}  style={{top:`${editPos}px`}}>\r\n\r\n                    <div className=\"edit-container\">\r\n\r\n                        <div className={`card-preview ${isEdit ? 'edit' : ''} `}  >\r\n                            <div className=\"label-container\">\r\n                                {labels.map((label, idx) => {\r\n                                    return <div onClick={() => this.onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\r\n                                        {isLabelOpen && label.title}\r\n                                    </div>\r\n                                })\r\n                                }\r\n                            </div>\r\n                            <div className=\"edit-and-title\">\r\n                                <Link to={`/board/${board._id}/${card.id}`}>\r\n                                    <div>\r\n                                        <form action=\"\">\r\n\r\n                                            <input disabled={!isEdit} onChange={handleChange}\r\n                                                onClick={(ev) => {\r\n                                                    ev.preventDefault()\r\n                                                }}\r\n                                                type=\"text\" value={title} />\r\n                                        </form>\r\n                                    </div>\r\n                                </Link>\r\n                                <span className=\"edit-icon\" onClick={(ev) => {\r\n                                }} onClick={EnterEditMode} >\r\n                                    <EditIcon />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"card-icons\">\r\n                                {card.description && <SubjectIcon />}\r\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        { <div className={'edit-menu'}>\r\n                        \r\n                            <div className=\"edit-menu-btn\">  <PaymentIcon className=\"edit-menu-icons rotate\" /> <span>  Open Card </span></div>\r\n                            <div className=\"edit-menu-btn\">  <LabelOutlinedIcon className=\"edit-menu-icons\"  />  Edit labels </div>\r\n                            <div className=\"edit-menu-btn\"> <PersonOutlineIcon className=\"edit-menu-icons\"/> change members</div>\r\n                            <div className=\"edit-menu-btn\"> <ArrowRightAltIcon className=\"edit-menu-icons\"/> move  </div>\r\n                            <div className=\"edit-menu-btn\"> <PaymentIcon className=\"edit-menu-icons rotate\"/> copy </div>\r\n                            <div className=\"edit-menu-btn\"> <AccessTimeIcon className=\"edit-menu-icons\"/> change due date </div>\r\n                            <div className=\"edit-menu-btn\"> <ArchiveOutlinedIcon className=\"edit-menu-icons\"/> archive </div>\r\n                        </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='card-save-btn'>\r\n                        { <button onClick={this.onSave} >save</button>}\r\n                    </div>\r\n\r\n                </div >\r\n            </React.Fragment >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\MyAvatar.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Todo.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\LinearProgressBar.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx",["337"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuMore\\SectionLabels.jsx",[],{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","severity":1,"message":"343","line":19,"column":35,"nodeType":"344","messageId":"345","endLine":19,"endColumn":37},{"ruleId":"346","severity":1,"message":"347","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":92,"column":79,"nodeType":"352","endLine":92,"endColumn":94},{"ruleId":"346","severity":1,"message":"347","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"346","severity":1,"message":"353","line":3,"column":10,"nodeType":"348","messageId":"349","endLine":3,"endColumn":25},{"ruleId":"346","severity":1,"message":"354","line":3,"column":27,"nodeType":"348","messageId":"349","endLine":3,"endColumn":36},{"ruleId":"346","severity":1,"message":"355","line":3,"column":38,"nodeType":"348","messageId":"349","endLine":3,"endColumn":47},{"ruleId":"346","severity":1,"message":"356","line":2,"column":16,"nodeType":"348","messageId":"349","endLine":2,"endColumn":23},{"ruleId":"346","severity":1,"message":"357","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":21},{"ruleId":"346","severity":1,"message":"358","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":17},{"ruleId":"346","severity":1,"message":"359","line":58,"column":38,"nodeType":"348","messageId":"349","endLine":58,"endColumn":44},{"ruleId":"360","severity":1,"message":"361","line":50,"column":13,"nodeType":"348","messageId":"362","endLine":50,"endColumn":18},{"ruleId":"363","severity":1,"message":"364","line":28,"column":22,"nodeType":"365","messageId":"366","endLine":28,"endColumn":24},{"ruleId":"363","severity":1,"message":"364","line":28,"column":32,"nodeType":"365","messageId":"366","endLine":28,"endColumn":34},{"ruleId":"367","severity":1,"message":"368","line":37,"column":29,"nodeType":"369","endLine":37,"endColumn":75},{"ruleId":"367","severity":1,"message":"368","line":43,"column":29,"nodeType":"369","endLine":43,"endColumn":75},{"ruleId":"370","severity":1,"message":"371","line":62,"column":20,"nodeType":"369","endLine":62,"endColumn":24},{"ruleId":"370","severity":1,"message":"371","line":37,"column":20,"nodeType":"369","endLine":37,"endColumn":24},{"ruleId":"367","severity":1,"message":"368","line":50,"column":29,"nodeType":"369","endLine":50,"endColumn":54},{"ruleId":"372","severity":1,"message":"373","line":10,"column":9,"nodeType":"374","messageId":"375","endLine":35,"endColumn":10},{"ruleId":"346","severity":1,"message":"353","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":25},{"ruleId":"346","severity":1,"message":"354","line":6,"column":27,"nodeType":"348","messageId":"349","endLine":6,"endColumn":36},{"ruleId":"346","severity":1,"message":"355","line":6,"column":38,"nodeType":"348","messageId":"349","endLine":6,"endColumn":47},{"ruleId":"346","severity":1,"message":"376","line":90,"column":75,"nodeType":"348","messageId":"349","endLine":90,"endColumn":86},{"ruleId":"346","severity":1,"message":"377","line":90,"column":87,"nodeType":"348","messageId":"349","endLine":90,"endColumn":102},{"ruleId":"346","severity":1,"message":"358","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":17},{"ruleId":"367","severity":1,"message":"368","line":118,"column":29,"nodeType":"369","endLine":118,"endColumn":50},{"ruleId":"346","severity":1,"message":"378","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"346","severity":1,"message":"353","line":4,"column":10,"nodeType":"348","messageId":"349","endLine":4,"endColumn":25},{"ruleId":"346","severity":1,"message":"354","line":4,"column":27,"nodeType":"348","messageId":"349","endLine":4,"endColumn":36},{"ruleId":"346","severity":1,"message":"355","line":4,"column":38,"nodeType":"348","messageId":"349","endLine":4,"endColumn":47},{"ruleId":"346","severity":1,"message":"379","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"380","severity":1,"message":"381","line":27,"column":17,"nodeType":"369","endLine":27,"endColumn":64},{"ruleId":"346","severity":1,"message":"382","line":3,"column":8,"nodeType":"348","messageId":"349","endLine":3,"endColumn":20},{"ruleId":"346","severity":1,"message":"383","line":4,"column":10,"nodeType":"348","messageId":"349","endLine":4,"endColumn":14},{"ruleId":"346","severity":1,"message":"384","line":5,"column":8,"nodeType":"348","messageId":"349","endLine":5,"endColumn":19},{"ruleId":"346","severity":1,"message":"385","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":36},{"ruleId":"346","severity":1,"message":"386","line":7,"column":8,"nodeType":"348","messageId":"349","endLine":7,"endColumn":29},{"ruleId":"346","severity":1,"message":"387","line":8,"column":8,"nodeType":"348","messageId":"349","endLine":8,"endColumn":33},{"ruleId":"346","severity":1,"message":"388","line":9,"column":8,"nodeType":"348","messageId":"349","endLine":9,"endColumn":16},{"ruleId":"346","severity":1,"message":"376","line":28,"column":30,"nodeType":"348","messageId":"349","endLine":28,"endColumn":41},{"ruleId":"350","severity":1,"message":"351","line":42,"column":32,"nodeType":"352","endLine":42,"endColumn":55},{"ruleId":"346","severity":1,"message":"389","line":14,"column":10,"nodeType":"348","messageId":"349","endLine":14,"endColumn":17},{"ruleId":"346","severity":1,"message":"390","line":41,"column":33,"nodeType":"348","messageId":"349","endLine":41,"endColumn":42},{"ruleId":"346","severity":1,"message":"391","line":41,"column":44,"nodeType":"348","messageId":"349","endLine":41,"endColumn":55},{"ruleId":"350","severity":1,"message":"351","line":72,"column":36,"nodeType":"352","endLine":72,"endColumn":59},{"ruleId":"346","severity":1,"message":"392","line":6,"column":8,"nodeType":"348","messageId":"349","endLine":6,"endColumn":16},"no-native-reassign",["393"],"no-negated-in-lhs",["394"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'httpService' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'NavLink' is defined but never used.","'MoreHorizIcon' is defined but never used.","'connect' is defined but never used.","'inMenu' is assigned a value but never used.","no-redeclare","'todos' is already defined.","redeclared","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'isModalOpen' is assigned a value but never used.","'onEditModalOpen' is assigned a value but never used.","'menuService' is defined but never used.","'utilService' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'CheckBoxIcon' is defined but never used.","'Link' is defined but never used.","'SubjectIcon' is defined but never used.","'ChatBubbleOutlineRoundedIcon' is defined but never used.","'AttachFileRoundedIcon' is defined but never used.","'PlaylistAddCheckSharpIcon' is defined but never used.","'EditIcon' is defined but never used.","'Archive' is defined but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","'RoomIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]