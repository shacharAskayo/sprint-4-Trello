[{"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js":"1","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx":"5","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx":"6","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx":"7","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx":"8","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx":"9","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js":"10","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js":"11","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js":"12","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js":"13","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js":"14","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js":"15","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js":"16","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js":"17","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js":"18","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\menuReducer.js":"19","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js":"20","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx":"21","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx":"22","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Dnd.jsx":"23","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx":"24","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx":"25","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js":"26","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx":"27","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js":"28","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx":"29","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js":"30","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx":"31","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js":"32","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev.jsx":"33","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev2.jsx":"34","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\Menu.jsx":"35","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\ActivityList.jsx":"36","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx":"37","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx":"38","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx":"39","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx":"40","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx":"41","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx":"42","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx":"43","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx":"44","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx":"45","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx":"46","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx":"47","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\menuAction.js":"48","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\menuService.js":"49","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardMenu.jsx":"50","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\DynamicCardActionModal.jsx":"51","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx":"52","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelListModal.jsx":"53","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklistList.jsx":"54","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx":"55","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelList.jsx":"56","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx":"57","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx":"58","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentPreview.jsx":"59","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklist.jsx":"60","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\LinearProgressBar.jsx":"61","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Todo.jsx":"62","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\MyAvatar.jsx":"63"},{"size":910,"mtime":1610460278356,"results":"64","hashOfConfig":"65"},{"size":364,"mtime":1610460278364,"results":"66","hashOfConfig":"65"},{"size":5064,"mtime":1610460278367,"results":"67","hashOfConfig":"65"},{"size":323,"mtime":1610460278387,"results":"68","hashOfConfig":"65"},{"size":622,"mtime":1610815597187,"results":"69","hashOfConfig":"65"},{"size":971,"mtime":1610635829567,"results":"70","hashOfConfig":"65"},{"size":362,"mtime":1610580403932,"results":"71","hashOfConfig":"65"},{"size":1416,"mtime":1610818115528,"results":"72","hashOfConfig":"65"},{"size":3578,"mtime":1610723456181,"results":"73","hashOfConfig":"65"},{"size":4027,"mtime":1610816246059,"results":"74","hashOfConfig":"65"},{"size":560,"mtime":1610815597106,"results":"75","hashOfConfig":"65"},{"size":3688,"mtime":1610817214481,"results":"76","hashOfConfig":"65"},{"size":1109,"mtime":1610570748015,"results":"77","hashOfConfig":"65"},{"size":322,"mtime":1610460278384,"results":"78","hashOfConfig":"65"},{"size":669,"mtime":1610460278383,"results":"79","hashOfConfig":"65"},{"size":818,"mtime":1610580403938,"results":"80","hashOfConfig":"65"},{"size":377,"mtime":1610545229448,"results":"81","hashOfConfig":"65"},{"size":910,"mtime":1610815597128,"results":"82","hashOfConfig":"65"},{"size":279,"mtime":1610815597107,"results":"83","hashOfConfig":"65"},{"size":1832,"mtime":1610580403938,"results":"84","hashOfConfig":"65"},{"size":3171,"mtime":1610822262009,"results":"85","hashOfConfig":"65"},{"size":1470,"mtime":1610815729202,"results":"86","hashOfConfig":"65"},{"size":4985,"mtime":1610647299729,"results":"87","hashOfConfig":"65"},{"size":3640,"mtime":1610820710652,"results":"88","hashOfConfig":"65"},{"size":665,"mtime":1610815597065,"results":"89","hashOfConfig":"65"},{"size":2586,"mtime":1610586036755,"results":"90","hashOfConfig":"65"},{"size":6211,"mtime":1610823106985,"results":"91","hashOfConfig":"65"},{"size":704,"mtime":1610586036756,"results":"92","hashOfConfig":"65"},{"size":3889,"mtime":1610818215700,"results":"93","hashOfConfig":"65"},{"size":2235,"mtime":1610815597102,"results":"94","hashOfConfig":"65"},{"size":3179,"mtime":1610814112466,"results":"95","hashOfConfig":"65"},{"size":682,"mtime":1610815597104,"results":"96","hashOfConfig":"65"},{"size":2813,"mtime":1610813301868,"results":"97","hashOfConfig":"65"},{"size":5223,"mtime":1610822633124,"results":"98","hashOfConfig":"65"},{"size":7421,"mtime":1610816284540,"results":"99","hashOfConfig":"65"},{"size":1317,"mtime":1610815597069,"results":"100","hashOfConfig":"65"},{"size":283,"mtime":1610815597099,"results":"101","hashOfConfig":"65"},{"size":3591,"mtime":1610815597096,"results":"102","hashOfConfig":"65"},{"size":1225,"mtime":1610815597098,"results":"103","hashOfConfig":"65"},{"size":271,"mtime":1610815597098,"results":"104","hashOfConfig":"65"},{"size":2246,"mtime":1610815597097,"results":"105","hashOfConfig":"65"},{"size":1373,"mtime":1610815597087,"results":"106","hashOfConfig":"65"},{"size":417,"mtime":1610815597090,"results":"107","hashOfConfig":"65"},{"size":243,"mtime":1610815597088,"results":"108","hashOfConfig":"65"},{"size":515,"mtime":1610815597091,"results":"109","hashOfConfig":"65"},{"size":1568,"mtime":1610815597094,"results":"110","hashOfConfig":"65"},{"size":5848,"mtime":1610815597095,"results":"111","hashOfConfig":"65"},{"size":259,"mtime":1610815597105,"results":"112","hashOfConfig":"65"},{"size":0,"mtime":1610815597103,"results":"113","hashOfConfig":"65"},{"size":2391,"mtime":1610815597080,"results":"114","hashOfConfig":"65"},{"size":1518,"mtime":1610815597081,"results":"115","hashOfConfig":"65"},{"size":1089,"mtime":1610815597079,"results":"116","hashOfConfig":"65"},{"size":1224,"mtime":1610815597082,"results":"117","hashOfConfig":"65"},{"size":878,"mtime":1610815597076,"results":"118","hashOfConfig":"65"},{"size":2825,"mtime":1610815597077,"results":"119","hashOfConfig":"65"},{"size":647,"mtime":1610815597082,"results":"120","hashOfConfig":"65"},{"size":2488,"mtime":1610815597080,"results":"121","hashOfConfig":"65"},{"size":1532,"mtime":1610815597074,"results":"122","hashOfConfig":"65"},{"size":509,"mtime":1610815597078,"results":"123","hashOfConfig":"65"},{"size":1564,"mtime":1610815597075,"results":"124","hashOfConfig":"65"},{"size":577,"mtime":1610815597067,"results":"125","hashOfConfig":"65"},{"size":3199,"mtime":1610815597083,"results":"126","hashOfConfig":"65"},{"size":531,"mtime":1610815597068,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"15e2un3",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js",[],["274","275"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx",["276"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardAction.js'\r\nimport { BoardPreview } from './BoardPreview.jsx'\r\n\r\nclass _BoardList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n    get boardsForDisplay() {\r\n        let boards = this.props.boards\r\n        return boards\r\n    }\r\n    render() {\r\n        const { boards } = this.boardsForDisplay\r\n        return (\r\n            <section className=\"board-list\">\r\n                {boards.map(board => {\r\n                    <div> key={board._id}\r\n                        <BoardPreview board={board} /></div>\r\n                })}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx",["277"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards,addBoard } from '../store/actions/boardAction'\r\n// import { BoardList } from '../cmps/BoardList'\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        bgColors: [\r\n            { color: 'lightgray' },\r\n            { color: 'green' },\r\n            { color: 'coral' },\r\n            { color: '#ff4d4d' },\r\n            { color: 'crimson' },\r\n            { color: 'yellowgreen' },\r\n            { color: 'teal' },\r\n            { color: 'blue' },\r\n            { color: 'pink' }\r\n        ],\r\n        board:{\r\n            _id:'',\r\n            title:'',\r\n            createdAt:Date.now(),\r\n            style:{},\r\n            isPrivate:false,\r\n            createBy:{},\r\n            labels:[],\r\n            members:[],\r\n            groups:[],\r\n            activities:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    handleChange=(ev)=>{\r\n        const {value}=ev.target\r\n        const {board} = this.state\r\n        this.setState({\r\n            board:{...board,title:value}\r\n        })\r\n    }\r\n    \r\n    setBgColor=(color)=>{\r\n        const {board} = this.state\r\n        this.setState({\r\n            board:{...board,style:{...board.style,backgroundColor:color}}\r\n        })\r\n    }\r\n\r\n\r\n    addBoard = () => {\r\n        const {board} = this.state\r\n        this.props.addBoard(board)\r\n        this.setState({isOpen:false})\r\n    }\r\n    render() {\r\n        const { isOpen, bgColors } = this.state\r\n        const { boards } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {isOpen && <section className=\"new-board-modal\">\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Add board title\" onChange={this.handleChange} />\r\n                        <button onClick={this.addBoard}> Add Board</button>\r\n                    </div>\r\n                    <div className=\"color-picker\">\r\n                        {bgColors.map(bg => <div className=\"colors\" style={{ backgroundColor: bg.color }} onClick={()=>this.setBgColor(bg.color)}></div>)}\r\n                    </div>\r\n                </section>\r\n                }\r\n                <section>\r\n                    <h1>Create new board</h1>\r\n                    <div  className=\"board-preview\" onClick={()=>this.setState({isOpen:true})} >\r\n                        <span>\r\n                            New Board\r\n                    </span>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"my-boards\">\r\n                    <h1>My Boards</h1>\r\n                    {boards&& boards.map((board,idx) => {\r\n                        return (\r\n                            <div key={board.id}>\r\n                                <Link to={`/board/${board._id}`}>\r\n                                    <div key={idx}  className=\"board-preview\" key={board._id} style={board.style}>\r\n                                        {board.title}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard\r\n}\r\n\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js",["278"],"import { boardService } from '../../services/boardService.js'\r\nimport { httpService } from '../../services/httpService.js'\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query()\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err)\r\n    }\r\n  }\r\n}\r\nexport function addBoard(newBoard){\r\n  return dispatch=>{\r\n    const board = boardService.addBoard(newBoard)\r\n    dispatch({type:'ADD_BOARD',board:board})\r\n  }\r\n}\r\n\r\nexport function getBoardById(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      // socketService.on('board-update',updatedBoard=>{\r\n      //   dispatch({ type: 'SET_BOARD', updatedBoard })\r\n      // })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function addCard(boardId, groupId, cardToAdd) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addCard(boardId, groupId, cardToAdd)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addGroup(boardId, group) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addGroup(boardId, group)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoardCard(board, card) {\r\n  return async dispatch => {\r\n    const newBoard = boardService.updateBoardCard(board, card)\r\n    //const newBoard = await httpService.put('board/' + board._id,boardService.updateBoardCard(board,card))\r\n    dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n  }\r\n}\r\n\r\nexport function openLabel() {\r\n  return dispatch => {\r\n    dispatch({ type: 'OPEN-LABELS' })\r\n  }\r\n}\r\nexport function setBackground(board, background) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = { ...board, style: background }\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectImg(board, imgSrc) {\r\n  return async dispatch => {\r\n    try {\r\n      const selectedImg = await boardService.selectImg(board, imgSrc)\r\n      dispatch({ type: 'CHANGE_STYLE', selectedImg })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectImg', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectColor(board, color) {\r\n  return async dispatch => {\r\n    try {\r\n      console.log('hi***');\r\n      const selectedColor = await boardService.selectColor(board, color)\r\n      console.log('selectedColor:', selectedColor);\r\n      dispatch({ type: 'SELECT_COLOR', selectedColor })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateCardsLocation(board,group,cards){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateCardsLocation(board,group,cards)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateGroupLoaction(board,groups){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupLoaction(board,groups)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function editGroupTitle(board,group,groupTitle){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupTitle(board,group,groupTitle)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js",["279"],"import {utilService} from './utilService'\r\nimport {httpService} from './httpService'\r\nimport {cardService} from './cardService'\r\n\r\n\r\n// const { board } = require('../data/db.json')\r\nvar db = require('../db.json')\r\nconst { board } = db\r\n\r\nvar gBoards = [board]\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    addCard,\r\n    addGroup,\r\n    updateBoardCard,\r\n    updateCardsLocation,\r\n    updateGroupLoaction,\r\n    addBoard,\r\n    updateGroupTitle,\r\n    setBackground\r\n\r\n}\r\n\r\n\r\n\r\n\r\nasync function query() {\r\n    // const board =await httpService.get('/board')\r\n    return gBoards\r\n}\r\n\r\nfunction addBoard(board) {\r\n    const newBoard = { ...board, _id: utilService.makeId() }\r\n    const copy = [...gBoards]\r\n    const newBoards = [...copy, newBoard]\r\n    gBoards = newBoards\r\n    return newBoard\r\n}\r\n\r\nfunction getById(id) {\r\n    const currBoard = gBoards.find(board => board._id === id)\r\n    const copy = JSON.parse(JSON.stringify(currBoard))\r\n    return Promise.resolve(copy)\r\n    // return Promise.resolve(currBoard)\r\n}\r\n\r\nfunction updateBoardCard(board, card) { //will it be a problem with idxs due to d&d?\r\n    const cardToUpdate = cardService.getCardForUpdate(card)\r\n    const newGroups = board.groups.map(group => {\r\n        const cards = group.cards.map(card => (card.id === cardToUpdate.id) ? cardToUpdate : card)\r\n        return { ...group, cards }\r\n    })\r\n    return { ...board, groups: newGroups }\r\n}\r\n\r\nfunction addCard(boardId, groupId, card) {\r\n    var copy = JSON.parse(JSON.stringify(gBoards))\r\n    var newCard = { ...card, id: utilService.makeId() }\r\n    const boardIdx = gBoards.findIndex(board => board._id === boardId)\r\n    const groupIdx = copy[boardIdx].groups.findIndex(group => group.id === groupId)\r\n    copy[boardIdx].groups[groupIdx].cards.push(newCard)\r\n    gBoards = copy\r\n    return gBoards[boardIdx]\r\n}\r\n\r\n\r\nasync function addGroup(boardId, group) {\r\n    try {\r\n        var copy = JSON.parse(JSON.stringify(gBoards))\r\n        var newGroup = { ...group, id: utilService.makeId() }\r\n        const boardIdx = gBoards.findIndex(board => board._id === boardId)\r\n        copy[boardIdx].groups.push(newGroup)\r\n        gBoards = copy\r\n        return Promise.resolve(gBoards[boardIdx])\r\n    }\r\n    catch (err) {\r\n        console.log('err in service:', err);\r\n    }\r\n}\r\n\r\nfunction updateCardsLocation(currBoard, currGroup, cards) {\r\n    const {boardIdx,copy,groupIdx}=update(currBoard,currGroup)\r\n    copy[boardIdx].groups[groupIdx].cards = cards\r\n    gBoards = copy\r\n    return Promise.resolve(gBoards[boardIdx])\r\n}\r\n\r\nfunction updateGroupLoaction(currBoard, groups) {\r\n    const {boardIdx,copy} = update(currBoard)\r\n    copy[boardIdx].groups = groups\r\n    gBoards = copy\r\n    return Promise.resolve(gBoards[boardIdx])\r\n}\r\n\r\nfunction updateGroupTitle(currBoard, currGroup, groupTitle) {\r\n    const {boardIdx,copy,groupIdx} = update(currBoard,currGroup)\r\n    copy[boardIdx].groups[groupIdx].title = groupTitle\r\n    gBoards = copy\r\n    return gBoards[boardIdx]\r\n}\r\n\r\nfunction update(currBoard,currGroup=gBoards[0].groups[0]){\r\n    var copy = JSON.parse(JSON.stringify(gBoards))\r\n    const boardIdx = copy.findIndex(board => board._id === currBoard._id)\r\n    const groupIdx = copy[boardIdx].groups.findIndex(group => group.id === currGroup.id)\r\n    return {boardIdx,copy,groupIdx}\r\n}\r\n\r\nfunction setBackground(board, background) {\r\n    try {\r\n        const currBoard = getById(board._id)\r\n        // const style = (background.length > 10) ? imgSrc : color\r\n        var updatedBoard = { ...currBoard, style: background }\r\n        return Promise.resolve(updatedBoard)\r\n    }\r\n    catch (err) {\r\n        console.log('err in setting background', err);\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\menuReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx",["280","281","282"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx",["283"],"import { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nclass _Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\">\r\n                <div className=\"icons-container\">\r\n                    <span className=\"apps-icon\">\r\n                        <AppsIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                    <Link to=\"/\">\r\n                        <DashboardIcon />\r\n                    </Link>\r\n                    </span>\r\n                </div>\r\n\r\n                <h3>Trello</h3>\r\n                <div className=\"icons-container\">\r\n\r\n                    <span className=\"apps-icon\">\r\n                        <AddIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                        <AccountCircleIcon />\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Dnd.jsx",[],["284","285"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx",["286"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n//icons:\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nclass _BoardHeader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex board-header\" >\r\n                <h4>board header</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // getBoardById,\r\n    // addGroup\r\n}\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx",["287","288","289","290","291"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx",["292","293","294"],"import React, { Component } from 'react'\r\nimport { CardPreview } from \"./CardPreview\";\r\n// ////React DND///\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport class CardList extends Component {\r\n    state = {\r\n        cards: []\r\n    }\r\n    componentDidMount() {\r\n        const { cards } = this.props\r\n        this.setState({ cards })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            const { cards } = this.props\r\n            this.setState({ cards })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const { board, currGroup } = this.props\r\n        // const { cards } = this.props\r\n        const { cards } = this.state\r\n        const items = Array.from(cards)\r\n        const [reorderedItem] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n        this.setState({ cards: items })\r\n        this.props.updateCardsLocation(board, currGroup, items)\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { board, isLabelOpen, openLabel, currGroup } = this.props\r\n        const { cards } = this.props\r\n        return (\r\n            \r\n            <div className=\"card-list\" >\r\n                {cards.map((card, idx) => {\r\n                    \r\n                    return (\r\n                        \r\n                        // <Draggable key={card.id} draggableId={card.id} index={idx}>\r\n                        //  {(provided)=>(\r\n                            // <div ref={provided.innerRef} {...provided.draggbleProps} {...provided.dragHandleProps} >\r\n                            <CardPreview currGroup={currGroup} key={card.id}  board={board} idx={card.id} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\r\n                            // </div>\r\n                            // )}\r\n                            // </Draggable>\r\n                            )\r\n                        })}\r\n            </div>\r\n        )\r\n    }\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n \r\n \r\n \r\n \r\n \r\n \r\n    //     {\r\n    //         const { board, isLabelOpen, openLabel, currGroup } = this.props\r\n    //         console.log('the fucking', board);\r\n    //         // const { cards } = this.props\r\n    //         const { cards } = this.state\r\n    //         return (\r\n    //             <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n    //                 <Droppable droppableId={currGroup.id} type=\"CARD\" >\r\n    //                     {(provided) => (\r\n    //                         <div className=\"card-list\" {...provided.droppableProps} ref={provided.innerRef}  >\r\n    //                             {cards.map((card, idx) => {\r\n    //                                 return (\r\n    //                                     <Draggable key={card.id} draggableId={card.id} index={idx}>\r\n    //                                         {(provided) => (\r\n    //                                             <div {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n    //                                                 <CardPreview board={board} idx={card.id} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\r\n    //                                             </div>\r\n    //                                         )}\r\n    //                                     </Draggable>\r\n    //                                 )\r\n    //                             })}\r\n    //                             {provided.placeholder}\r\n    //                         </div>\r\n    //                     )}\r\n    //                 </Droppable>\r\n    //             </DragDropContext>\r\n    //         )\r\n    //     }\r\n    // }\r\n \r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js",["295"],"import {utilService} from './utilService'\r\n\r\nexport const cardService = {\r\n    getCardById,\r\n    getCards,\r\n    getCardLabels,\r\n    getCardForUpdate,\r\n    updateChecklistTodo,\r\n    removeChecklist,\r\n    getActivityToAdd,\r\n    getCommentToAdd\r\n\r\n}\r\n\r\nfunction getCardById(board, cardId) {\r\n    var currCard\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) currCard = card\r\n    }))\r\n    const labels = getCardLabels(board, currCard.labels)\r\n    const activities = _getCardActivities(board, cardId)\r\n    return {...currCard, labels, activities }\r\n}\r\n\r\nfunction getCardForUpdate(card){\r\n    delete card.activities\r\n    const labels = card.labels.map(label => label.id)\r\n    return {...card, labels}\r\n\r\n\r\n}\r\nfunction _getCardActivities(board, cardId) {\r\n    return board.activities.filter(act => act.card.id === cardId)\r\n}\r\n\r\nfunction getCardLabels(board, labels) {\r\n    return board.labels.filter(label => labels.includes(label.id))\r\n}\r\n\r\nfunction getCards(group){\r\n    const cards = group.cards\r\n    return cards\r\n}\r\n\r\nfunction updateChecklistTodo(card, checklist, todo){\r\n    const todoToUpdate = {...todo}\r\n    if (todoToUpdate.id) var todos = checklist.todos.map(todo => (todo.id === todoToUpdate.id) ? todoToUpdate : todo)\r\n    else {\r\n        todoToUpdate.id = utilService.makeId()\r\n        var todos = [...checklist.todos, todoToUpdate]\r\n    }\r\n    const currChecklist = {...checklist, todos}\r\n    const checklists = card.checklists.map(checklist => (checklist.id === currChecklist.id) ? currChecklist : checklist)\r\n    return {...card, checklists}\r\n}\r\n\r\nfunction removeChecklist(card, currChecklist){\r\n    const checklists = card.checklists.filter(checklist => checklist.id !== currChecklist.id)\r\n    return {...card, checklists}\r\n}\r\n\r\nfunction getActivityToAdd(card, user, txt ){\r\n    \r\n        return {\r\n            id: utilService.makeId(),\r\n            txt ,\r\n            createdAt: Date.now(),\r\n            createdBy: user,\r\n            card: {\r\n               id: card.id,\r\n               title: card.title\r\n            }\r\n        }\r\n\r\n}\r\n\r\nfunction getCommentToAdd(txt, user){\r\n    return {txt, createdAt: Date.now(), createdBy: user, id: utilService.makeId()}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx",["296","297","298","299","300","301","302","303"],"import React, { Component } from 'react'\r\nimport { cardService } from \"../services/cardService\";\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { connect } from 'react-redux'\r\nimport { updateBoardCard } from '../store/actions/boardAction'\r\nimport { CardPrev } from './CardPrev'\r\nimport { CardPrev2 } from './CardPrev2'\r\n\r\n\r\n\r\nclass _CardPreview extends Component {\r\n\r\n    state = {\r\n        isModalOpen: false,\r\n        labels: [],\r\n        isEdit: false,\r\n        title: ''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { card, board, isModalOpen } = this.props\r\n        const labels = cardService.getCardLabels(board, card.labels)\r\n        this.setState({\r\n            labels,\r\n            title: card.title\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        // const { isModalOpen } = this.props\r\n        // if (prevProps !== this.props) {\r\n        //     this.setState({ isModalOpen: isModalOpen })\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    onOpenLabel = () => {\r\n        this.props.openLabel()\r\n    }\r\n\r\n    on = (id) => {\r\n        console.log('id:', id);\r\n    }\r\n    EnterEditMode = () => {\r\n        document.body.classList.add('edit-open')\r\n        const { isEdit } = this.state\r\n        this.setState({\r\n            isEdit: !isEdit\r\n        })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ title: value })\r\n    }\r\n    onSave = () => {\r\n        const { card, board } = this.props\r\n        const { title } = this.state\r\n        card.title = title\r\n        console.log(card);\r\n        this.props.updateBoardCard(board, card)\r\n        this.setState({ isEdit: false })\r\n    }\r\n\r\n    render() {\r\n        const { card, board, isLabelOpen,currGroup } = this.props\r\n        const { labels, isEdit, title } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                { <CardPrev isEdit={isEdit} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} EnterEditMode={this.EnterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\r\n                {isEdit && <CardPrev2 currGroup={currGroup} isEdit={isEdit} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} EnterEditMode={this.EnterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        cards: state.cardModule.cards,\r\n        board: state.boardModule.board,\r\n        isLabelOpen: state.boardModule.isLabelOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard\r\n\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview)\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev.jsx",["304"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nexport class CardPrev extends Component {\r\n\r\n\r\n    render() {\r\n        const { labels, isEdit, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode } = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n{/* ${isEdit ? 'edit' : ''} */}\r\n                    <div className={`card-preview  `} >\r\n\r\n                        <div className=\"label-container\">\r\n                            {labels.map((label, idx) => {\r\n                                return <div onClick={() => onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\r\n                                    {isLabelOpen && label.title}\r\n                                </div>\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className=\"edit-and-title\">\r\n                            <Link to={`/board/${board._id}/${card.id}`}>\r\n                                <div>\r\n                                    <form action=\"\">\r\n\r\n                                        <input disabled={!isEdit} onChange={handleChange}\r\n                                            onClick={(ev) => {\r\n                                                ev.preventDefault()\r\n                                            }}\r\n                                            type=\"text\" value={title} />\r\n                                    </form>\r\n                                </div>\r\n                            </Link>\r\n                            <span className=\"edit-icon\" onClick={(ev) => {\r\n                            }} onClick={EnterEditMode} >\r\n                                <EditIcon />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"card-icons\">\r\n                            {card.description && <SubjectIcon />}\r\n                            {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                            {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                            {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n           \r\n                 \r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev2.jsx",["305","306","307","308"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\Menu.jsx",["309"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n//cmps:\r\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\r\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\r\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\r\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\r\nimport { SectionMore } from './menuFirstSee/menuTopOptions/SectionMore.jsx'\r\nimport { MenuButler } from './menuFirstSee/MenuButler';\r\nimport { MenuPowerups } from './menuFirstSee/MenuPowerups';\r\nimport { MenuMap } from './menuFirstSee/MenuMap';\r\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\r\nimport { ActivityList } from '../card/ActivityList.jsx'\r\n\r\n\r\n//icons:\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport ArrowUpwardSharpIcon from '@material-ui/icons/ArrowUpwardSharp';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        menuTitle: 'Menu',\r\n        currMenu: null,\r\n        inMenu: true,   \r\n        isMenuOpen: false\r\n    }\r\n    \r\n    toggleMenu = () => { \r\n      this.setState({ isMenuOpen: !this.state.isMenuOpen}) \r\n    }\r\n\r\n    goBack = () => { this.setState({ currMenu: null }) }\r\n\r\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\r\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\r\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\r\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\r\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\r\n    openButler = () => { this.setState({ menuTitle: \"butler\", currMenu: 'MenuButler' }) }\r\n    openPowerups = () => { this.setState({ menuTitle: \"Power-ups\", currMenu: 'MenuPowerups' }) }\r\n    openMap = () => { this.setState({ menuTitle: \"Map\", currMenu: 'MenuMap' }) }\r\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\r\n\r\n    render() {\r\n\r\n\r\n        const { currMenu, menuTitle, inMenu, isMenuOpen } = this.state\r\n        const { board } = this.props\r\n        if (!board.activities) return null\r\n        console.log('render');\r\n        return (\r\n            <section className={`menu flex col ${isMenuOpen ? 'open' : ''}`}>\r\n                <button className=\"menu-btn flex align-center\" onClick={this.toggleMenu}><MoreHorizIcon/>Show Menu</button>\r\n                <div className=\"menu-top\">\r\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\r\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\r\n                    <button className=\"close-menu-btn\" onClick={this.toggleMenu}><CloseIcon /></button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openAbout}>\r\n                        <span><InfoIcon /></span>\r\n                        <div className=\"about-all-desc\">\r\n                            <h4 className=\"about-this-board\">About This Board</h4>\r\n                            <span className=\"about-desc\">Add a description to your board</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openBgs}>\r\n                        <span>< WallpaperIcon /></span>\r\n                        <h4 className=\"option-title\">Change Background</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openSearch}>\r\n                        <span><SearchIcon /></span>\r\n                        <h4 className=\"option-title\">Search Cards</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openStickers}>\r\n                        <span><LabelImportantIcon /></span>\r\n                        <h4 className=\"option-title\">Stickers</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openMore}>\r\n                        <span><MoreHorizIcon /></span>\r\n                        <h4 className=\"option-title\">More</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openButler}>\r\n                        <span className=\"butler-icon\">🤖</span>\r\n                        <div className=\"butler-div\">\r\n                            <h4> Butler</h4>\r\n                            <span>Automate cards and more...</span>\r\n                        </div>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openPowerups}>\r\n                        <span className=\"powerups-icon\"><ArrowUpwardSharpIcon /></span>\r\n                        <div className=\"powerups-div\">\r\n                            <h4>Power-Ups</h4>\r\n                            <span className=\"power-ups-desc\">Calendar, Google Drive and more...</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openMap}>\r\n                        <span><RoomIcon /></span>\r\n                        <h4 className=\"option-title\">Map</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openActivity}>\r\n                        <span><PlaylistAddCheckIcon /></span>\r\n                        <h4 className=\"option-title\">Activity</h4>\r\n                    </button>\r\n                    <ActivityList activities={board.activities} inMenu={inMenu} />\r\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\r\n                </section>}\r\n                <DynamicCmp currMenu={currMenu} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction DynamicCmp({ currMenu }) {\r\n    switch (currMenu) {\r\n        case 'SectionAbout':\r\n            return <SectionAbout />\r\n        case 'SectionBackground':\r\n            return <SectionBackground />\r\n        case 'SectionSearch':\r\n            return <SectionSearch />\r\n        case 'SectionStickers':\r\n            return <SectionStickers />\r\n        case 'SectionMore':\r\n            return <SectionMore />\r\n        case 'MenuButler':\r\n            return <MenuButler />\r\n        case 'MenuPowerups':\r\n            return <MenuPowerups />\r\n        case 'MenuMap':\r\n            return <MenuMap />\r\n        case 'MenuActivity':\r\n            return <MenuActivity />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\ActivityList.jsx",["310","311"],"import { Component } from \"react\"\r\n\r\n//icons:\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\n// import FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\nexport class ActivityList extends Component {\r\n\r\n    state = {\r\n        isShown: false\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n    render() {\r\n        const { activities, inMenu } = this.props\r\n        const { isShown } = this.state\r\n        return <div className=\"attachments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                {!inMenu && <div className=\"flex align-start\">\r\n                    <span><PlaylistAddCheckIcon /></span>\r\n                    <h4 className=\"option-title\">Activity</h4>\r\n                </div>}\r\n                {!inMenu && <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>}\r\n            </header>\r\n            {isShown || inMenu && activities.map(act =>\r\n                <div key={act.id}>\r\n                    <span>{act.createdBy.fullname}: </span>\r\n                    <span> {act.txt}</span>\r\n                    <br />\r\n                    <small>At: {act.createdAt}</small>\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx",["312","313","314"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\r\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\r\n\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n//imgs:\r\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\r\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\r\n\r\nexport class SectionBackground extends Component {\r\n\r\n    state = {\r\n        currType: null,\r\n        menuTitle: 'Change Background',\r\n        photosSrc,\r\n        colorsSrc\r\n    }\r\n\r\n    goBackBg = () => { this.setState({ currType: null }) }\r\n\r\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\r\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\r\n\r\n    render() {\r\n        const { currType, photosSrc, colorsSrc } = this.state\r\n        return (\r\n            <section className=\"background-section\">\r\n                {currType === null && <section className=\"flex photos-colors\">\r\n                    <div className=\"photos\">\r\n                        <button onClick={this.choosePhotos}>\r\n                            <img src={photosSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Photos</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"colors\">\r\n                        <button onClick={this.chooseColors}>\r\n                            <img src={colorsSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Colors</span>\r\n                        </button>\r\n                    </div>\r\n                </section>}\r\n                {currType && <button className=\"back-bg-btn\" onClick={this.goBackBg}><ArrowBackIosIcon /></button>}\r\n                <hr className=\"hr-menu\" />\r\n                <DynamicCmpBg currType={currType} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction DynamicCmpBg({ currType }) {\r\n    switch (currType) {\r\n        case 'PhotosArea':\r\n            return <PhotosArea />\r\n        case 'ColorsArea':\r\n            return <ColorsArea />\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx",["315"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n//icons:\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n//functions:\r\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\r\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\r\n\r\n//imgs:\r\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\r\n\r\nclass _PhotosArea extends Component {\r\n\r\n    state = {\r\n        photoSearch: '',\r\n        filterBy: {\r\n            name: ''\r\n        },\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.state.bgImgs[0]);\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.setFilter(this.state.filterBy)\r\n        })\r\n    }\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n    selectImg = (imgSrc) => {\r\n        imgSrc = '../assets/bgImgs/' + (imgSrc.substr(14)).substr(0, 8) + '.jpg'\r\n        console.log('edited imgSrc:', imgSrc);\r\n        this.props.setBackground(this.props.board, { backgroundImage: imgSrc })\r\n    }\r\n\r\n    get imgsForDidsplay() {\r\n        let imgs = this.state.bgImgs\r\n        const regex = new RegExp(this.props.filterBy, 'i')\r\n        imgs = imgs.filter(img => regex.test(img.title))\r\n        return imgs\r\n    }\r\n    render() {\r\n        const { name } = this.state.filterBy\r\n        const imgs = this.imgsForDidsplay\r\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"photo-type\">\r\n                <div className=\"flex search-photo\">\r\n                    <SearchIcon /><input type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Photos\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"photos-area\">\r\n                    {imgs.map((img, idx) => {\r\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                            onClick={() => { this.selectImg(img.src) }}>\r\n                            <img src={img.src} />\r\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        filterBy: state.menuModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBackground,\r\n    setFilter\r\n}\r\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\menuAction.js",["316"],"import { menuService } from '../../services/menuService.js'\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_PHOTOS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\menuService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardMenu.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\DynamicCardActionModal.jsx",["317"],"import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LabelListModal } from \"./LabelListModal\";\r\n\r\n\r\nclass _DynamicCardActionModal extends Component {\r\n\r\n    render() {\r\n        const { card, currModal,save,board, closeModal } = this.props\r\n        switch (currModal) {\r\n            case null:\r\n                return null\r\n            // case 'members':\r\n            //     return <AddMemberModal card={card} save={save} />\r\n            case 'labels':\r\n                return <LabelListModal closeModal={closeModal} card={card} save={save} board={board}/>\r\n            // case 'checklist':\r\n            //     return <AddChecklistModal card={card} save={save} />\r\n            // case 'dueDate':\r\n            //     return <AddDueDateModal card={card} save={save} />\r\n            // case 'attachment':\r\n            //     return <AddAttachmentModal card={card} save={save} />\r\n            // case 'cover':\r\n            //     return  <AddCover card={card} save={save} />\r\n            // case 'move':\r\n            //     return \r\n            // case 'copy':\r\n            //     return\r\n            // case 'watch':\r\n            //     return\r\n            // case 'archive':\r\n            //     return\r\n            // case 'share':\r\n            //     return\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const DynamicCardActionModal = connect(mapStateToProps, mapDispatchToProps)(_DynamicCardActionModal)\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelListModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklistList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx",["318"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\"\r\nimport { CardCommentPreview } from \"./CardCommentPreview\"\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { cardService } from \"../../services/cardService\";\r\n\r\nexport class CardCommentList extends Component {\r\n\r\n    state = {\r\n        newCommentTxt: '',\r\n        isShown: false\r\n\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n\r\n    onInput = ({target}) => {\r\n        const {name, value} = target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    onAddComment = (ev) => {\r\n        if (ev?.key && ev.key === \"Enter\") return\r\n        ev.preventDefault()\r\n        ev.currentTarget.blur()\r\n        const {card, user } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = cardService.getCommentToAdd(txt, user)\r\n        const newCard = {...card}\r\n        newCard.comments.unshift(comment)\r\n        this.props.save(newCard)\r\n        this.setState({newCommentTxt: ''})\r\n    }\r\n    \r\n    get data(){\r\n        const { comments, activities } = this.props.card\r\n        if (!this.state.isShown) return comments\r\n        else {\r\n            const data = [...comments,...activities]\r\n            return   data.sort((a ,b) =>  b.createdAt - a.createdAt )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {isShown} = this.state\r\n        return <div className=\"card-comments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                <div className=\"flex align-start\">\r\n                    <FormatListBulletedIcon/>\r\n                    <h3>Activity</h3>\r\n                </div>\r\n                <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>\r\n            </header>\r\n            <div className={`hidden-actions-form-container`}>\r\n                <form onSubmit={(ev => ev.preventDefault())} className={`hidden-actions-form`}>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        onChange={this.onInput}\r\n                        value={this.state.newCommentTxt}\r\n                        autocomplete=\"off\"\r\n                        placeholder=\"Write a comment..\"\r\n                        name=\"newCommentTxt\"\r\n                    />\r\n                </form>\r\n                <div className=\"hidden-actions flex\">\r\n                    <button type=\"button\" \r\n                    className={this.state.newCommentTxt ? '': 'disabled'}\r\n                    onClick={this.onAddComment}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                \r\n                </div>\r\n            </div>\r\n            <CardCommentPreview data={this.data}/>\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx",["319"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport CallMadeOutlinedIcon from '@material-ui/icons/CallMadeOutlined';\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const { card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = { txt, createdAt: Date.now(), createdBy: {}, id: utilService.makeId() }\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    render() {\r\n        const { attachments } = this.props.card\r\n        if (!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <header className=\"flex\">\r\n                <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />\r\n                <h3>Attachments</h3>\r\n            </header>\r\n            {attachments.map(att =>\r\n                <a key={att.id} target=\"_blank\" href={att.url}>\r\n                    <div className=\"attachment flex align-center\">\r\n                        <div>LINK</div>\r\n                        <div className=\"flex align-start\">\r\n                            <h4>{att.title}</h4>\r\n                            <CallMadeOutlinedIcon />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )}\r\n            <button>Add an attachment</button>\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentPreview.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklist.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\LinearProgressBar.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Todo.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\MyAvatar.jsx",[],{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":19,"column":35,"nodeType":"326","messageId":"327","endLine":19,"endColumn":37},{"ruleId":"328","severity":1,"message":"329","line":92,"column":79,"nodeType":"330","endLine":92,"endColumn":94},{"ruleId":"331","severity":1,"message":"332","line":2,"column":10,"nodeType":"333","messageId":"334","endLine":2,"endColumn":21},{"ruleId":"331","severity":1,"message":"332","line":2,"column":9,"nodeType":"333","messageId":"334","endLine":2,"endColumn":20},{"ruleId":"331","severity":1,"message":"335","line":3,"column":10,"nodeType":"333","messageId":"334","endLine":3,"endColumn":25},{"ruleId":"331","severity":1,"message":"336","line":3,"column":27,"nodeType":"333","messageId":"334","endLine":3,"endColumn":36},{"ruleId":"331","severity":1,"message":"337","line":3,"column":38,"nodeType":"333","messageId":"334","endLine":3,"endColumn":47},{"ruleId":"331","severity":1,"message":"338","line":2,"column":16,"nodeType":"333","messageId":"334","endLine":2,"endColumn":23},{"ruleId":"320","replacedBy":"339"},{"ruleId":"322","replacedBy":"340"},{"ruleId":"331","severity":1,"message":"341","line":6,"column":8,"nodeType":"333","messageId":"334","endLine":6,"endColumn":21},{"ruleId":"331","severity":1,"message":"335","line":6,"column":10,"nodeType":"333","messageId":"334","endLine":6,"endColumn":25},{"ruleId":"331","severity":1,"message":"336","line":6,"column":27,"nodeType":"333","messageId":"334","endLine":6,"endColumn":36},{"ruleId":"331","severity":1,"message":"337","line":6,"column":38,"nodeType":"333","messageId":"334","endLine":6,"endColumn":47},{"ruleId":"331","severity":1,"message":"342","line":91,"column":75,"nodeType":"333","messageId":"334","endLine":91,"endColumn":86},{"ruleId":"331","severity":1,"message":"343","line":91,"column":87,"nodeType":"333","messageId":"334","endLine":91,"endColumn":102},{"ruleId":"331","severity":1,"message":"335","line":4,"column":10,"nodeType":"333","messageId":"334","endLine":4,"endColumn":25},{"ruleId":"331","severity":1,"message":"336","line":4,"column":27,"nodeType":"333","messageId":"334","endLine":4,"endColumn":36},{"ruleId":"331","severity":1,"message":"337","line":4,"column":38,"nodeType":"333","messageId":"334","endLine":4,"endColumn":47},{"ruleId":"344","severity":1,"message":"345","line":50,"column":13,"nodeType":"333","messageId":"346","endLine":50,"endColumn":18},{"ruleId":"331","severity":1,"message":"347","line":3,"column":8,"nodeType":"333","messageId":"334","endLine":3,"endColumn":20},{"ruleId":"331","severity":1,"message":"348","line":4,"column":10,"nodeType":"333","messageId":"334","endLine":4,"endColumn":14},{"ruleId":"331","severity":1,"message":"349","line":5,"column":8,"nodeType":"333","messageId":"334","endLine":5,"endColumn":19},{"ruleId":"331","severity":1,"message":"350","line":6,"column":8,"nodeType":"333","messageId":"334","endLine":6,"endColumn":36},{"ruleId":"331","severity":1,"message":"351","line":7,"column":8,"nodeType":"333","messageId":"334","endLine":7,"endColumn":29},{"ruleId":"331","severity":1,"message":"352","line":8,"column":8,"nodeType":"333","messageId":"334","endLine":8,"endColumn":33},{"ruleId":"331","severity":1,"message":"353","line":9,"column":8,"nodeType":"333","messageId":"334","endLine":9,"endColumn":16},{"ruleId":"331","severity":1,"message":"342","line":28,"column":30,"nodeType":"333","messageId":"334","endLine":28,"endColumn":41},{"ruleId":"328","severity":1,"message":"329","line":42,"column":32,"nodeType":"330","endLine":42,"endColumn":55},{"ruleId":"331","severity":1,"message":"354","line":14,"column":10,"nodeType":"333","messageId":"334","endLine":14,"endColumn":17},{"ruleId":"331","severity":1,"message":"355","line":41,"column":33,"nodeType":"333","messageId":"334","endLine":41,"endColumn":42},{"ruleId":"331","severity":1,"message":"356","line":41,"column":44,"nodeType":"333","messageId":"334","endLine":41,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":72,"column":36,"nodeType":"330","endLine":72,"endColumn":59},{"ruleId":"331","severity":1,"message":"357","line":2,"column":10,"nodeType":"333","messageId":"334","endLine":2,"endColumn":17},{"ruleId":"358","severity":1,"message":"359","line":28,"column":22,"nodeType":"360","messageId":"361","endLine":28,"endColumn":24},{"ruleId":"358","severity":1,"message":"359","line":28,"column":32,"nodeType":"360","messageId":"361","endLine":28,"endColumn":34},{"ruleId":"362","severity":1,"message":"363","line":37,"column":29,"nodeType":"364","endLine":37,"endColumn":75},{"ruleId":"362","severity":1,"message":"363","line":43,"column":29,"nodeType":"364","endLine":43,"endColumn":75},{"ruleId":"365","severity":1,"message":"366","line":62,"column":20,"nodeType":"364","endLine":62,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":108,"column":29,"nodeType":"364","endLine":108,"endColumn":50},{"ruleId":"331","severity":1,"message":"367","line":1,"column":10,"nodeType":"333","messageId":"334","endLine":1,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":10,"column":9,"nodeType":"370","messageId":"371","endLine":35,"endColumn":10},{"ruleId":"331","severity":1,"message":"372","line":2,"column":10,"nodeType":"333","messageId":"334","endLine":2,"endColumn":21},{"ruleId":"373","severity":1,"message":"374","line":27,"column":17,"nodeType":"364","endLine":27,"endColumn":64},"no-native-reassign",["375"],"no-negated-in-lhs",["376"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'httpService' is defined but never used.","Identifier","unusedVar","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'NavLink' is defined but never used.",["375"],["376"],"'MoreHorizIcon' is defined but never used.","'isModalOpen' is assigned a value but never used.","'onEditModalOpen' is assigned a value but never used.","no-redeclare","'todos' is already defined.","redeclared","'CheckBoxIcon' is defined but never used.","'Link' is defined but never used.","'SubjectIcon' is defined but never used.","'ChatBubbleOutlineRoundedIcon' is defined but never used.","'AttachFileRoundedIcon' is defined but never used.","'PlaylistAddCheckSharpIcon' is defined but never used.","'EditIcon' is defined but never used.","'Archive' is defined but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","'connect' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'menuService' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'utilService' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]