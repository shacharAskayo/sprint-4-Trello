[{"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js":"1","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx":"5","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx":"6","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx":"7","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js":"8","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx":"9","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx":"10","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx":"11","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js":"12","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Menu.jsx":"13","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js":"14","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js":"15","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js":"16","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js":"17","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js":"18","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js":"19","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js":"20","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx":"21","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx":"22","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js":"23","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx":"24","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js":"25","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js":"26","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js":"27","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx":"28","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx":"29","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js":"30","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx":"31","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\ActivityList.jsx":"32","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx":"33","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx":"34","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Label.jsx":"35","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx":"36","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx":"37","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Dnd.jsx":"38","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardEdit.jsx":"39","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev.jsx":"40","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev2.jsx":"41"},{"size":910,"mtime":1610460278356,"results":"42","hashOfConfig":"43"},{"size":5064,"mtime":1610460278367,"results":"44","hashOfConfig":"43"},{"size":364,"mtime":1610460278364,"results":"45","hashOfConfig":"43"},{"size":323,"mtime":1610460278387,"results":"46","hashOfConfig":"43"},{"size":660,"mtime":1610749180887,"results":"47","hashOfConfig":"43"},{"size":971,"mtime":1610635829567,"results":"48","hashOfConfig":"43"},{"size":1470,"mtime":1610716624653,"results":"49","hashOfConfig":"43"},{"size":475,"mtime":1610540538273,"results":"50","hashOfConfig":"43"},{"size":362,"mtime":1610580403932,"results":"51","hashOfConfig":"43"},{"size":1892,"mtime":1610724713725,"results":"52","hashOfConfig":"43"},{"size":3578,"mtime":1610723456181,"results":"53","hashOfConfig":"43"},{"size":3716,"mtime":1610728911789,"results":"54","hashOfConfig":"43"},{"size":17870,"mtime":1610634182539,"results":"55","hashOfConfig":"43"},{"size":1109,"mtime":1610570748015,"results":"56","hashOfConfig":"43"},{"size":669,"mtime":1610460278383,"results":"57","hashOfConfig":"43"},{"size":322,"mtime":1610460278384,"results":"58","hashOfConfig":"43"},{"size":377,"mtime":1610545229448,"results":"59","hashOfConfig":"43"},{"size":3373,"mtime":1610807026615,"results":"60","hashOfConfig":"43"},{"size":717,"mtime":1610723625048,"results":"61","hashOfConfig":"43"},{"size":818,"mtime":1610580403938,"results":"62","hashOfConfig":"43"},{"size":151,"mtime":1610462998676,"results":"63","hashOfConfig":"43"},{"size":3173,"mtime":1610810198749,"results":"64","hashOfConfig":"43"},{"size":1832,"mtime":1610580403938,"results":"65","hashOfConfig":"43"},{"size":2697,"mtime":1610722407094,"results":"66","hashOfConfig":"43"},{"size":681,"mtime":1610568128589,"results":"67","hashOfConfig":"43"},{"size":760,"mtime":1610586036753,"results":"68","hashOfConfig":"43"},{"size":2586,"mtime":1610586036755,"results":"69","hashOfConfig":"43"},{"size":5977,"mtime":1610810157938,"results":"70","hashOfConfig":"43"},{"size":1063,"mtime":1610586036747,"results":"71","hashOfConfig":"43"},{"size":704,"mtime":1610586036756,"results":"72","hashOfConfig":"43"},{"size":3928,"mtime":1610814096375,"results":"73","hashOfConfig":"43"},{"size":1147,"mtime":1610586036743,"results":"74","hashOfConfig":"43"},{"size":1504,"mtime":1610586036746,"results":"75","hashOfConfig":"43"},{"size":1023,"mtime":1610586036745,"results":"76","hashOfConfig":"43"},{"size":485,"mtime":1610586036748,"results":"77","hashOfConfig":"43"},{"size":1119,"mtime":1610586036747,"results":"78","hashOfConfig":"43"},{"size":3179,"mtime":1610814112466,"results":"79","hashOfConfig":"43"},{"size":4985,"mtime":1610647299729,"results":"80","hashOfConfig":"43"},{"size":1528,"mtime":1610760735491,"results":"81","hashOfConfig":"43"},{"size":2813,"mtime":1610813301868,"results":"82","hashOfConfig":"43"},{"size":5223,"mtime":1610815191203,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"15e2un3",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js",[],["175","176"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx",["177"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardAction.js'\r\nimport { BoardPreview } from './BoardPreview.jsx'\r\n\r\nclass _BoardList extends Component {\r\n\r\n    componentDidMount() {\r\n        console.log('@@@');\r\n        this.props.loadBoards()\r\n    }\r\n    get boardsForDisplay() {\r\n        let boards = this.props.boards\r\n        console.log(this.props);\r\n        console.log('boards', boards);\r\n        return boards\r\n    }\r\n    render() {\r\n        const { boards } = this.boardsForDisplay\r\n        console.log(boards);\r\n        return (\r\n            <section className=\"board-list\">\r\n                {boards.map(board => {\r\n                    <div> key={board._id}\r\n                        <BoardPreview board={board} /></div>\r\n                })}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx",["178"],"import { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nclass _Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"main-header\">\r\n                <div className=\"icons-container\">\r\n                    <span className=\"apps-icon\">\r\n                        <AppsIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                    <Link to=\"/\">\r\n                        <DashboardIcon />\r\n                    </Link>\r\n                    </span>\r\n                </div>\r\n\r\n                <h3>Trello</h3>\r\n                <div className=\"icons-container\">\r\n\r\n                    <span className=\"apps-icon\">\r\n                        <AddIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                        <AccountCircleIcon />\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx",["179","180"],"import { Component } from 'react'\r\nimport { GroupList } from \"../cmps/GroupList\"\r\nimport { BoardHeader } from \"../cmps/BoardHeader\"\r\nimport { connect } from 'react-redux'\r\nimport { Menu } from '../cmps/Menu.jsx'\r\nimport { getBoardById,addGroup,updateGroupLoaction } from '../store/actions/boardAction'\r\nimport { Card } from '../cmps/card/Card'\r\nimport {Dnd} from '../cmps/Dnd'\r\n\r\nclass _Board extends Component {\r\n \r\n  state = {\r\n    isMenuClicked: false,\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { boardId } = this.props.match.params\r\n    this.props.getBoardById(boardId)\r\n  }   \r\n\r\n  toggleMenu = (ev) => { \r\n    ev.preventDefault()\r\n    let isMenuClicked = this.state.isMenuClicked\r\n    isMenuClicked = !isMenuClicked\r\n    this.setState({ isMenuClicked })\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({ isMenuClicked: false })\r\n  }\r\n  render() {\r\n    const { isMenuClicked } = this.state\r\n    const { bgColor, bgImg,board,updateGroupLoaction,addGroup } = this.props\r\n    return (\r\n      <div className=\"main-board\" style={{  backgroundImage: bgImg ,}}>\r\n        <BoardHeader />\r\n        <button onClick={this.toggleMenu}>Menu</button>\r\n        {board&&<GroupList  updateGroupLoaction={updateGroupLoaction} board={board} addGroup={addGroup} /> }\r\n        <button className=\"menu-btn\" onClick={this.toggleMenu}>Menu</button>\r\n        <Card id={this.match?.params.cardId} />\r\n        {isMenuClicked && <Menu closeMenu={this.closeMenu} isMenuClicked={isMenuClicked} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    reviews: state.reviewModule.reviews,\r\n    board: state.boardModule.board,\r\n    bgImg: state.boardModule.bgImg,\r\n    bgColor: state.boardModule.bgColor\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  getBoardById,\r\n  addGroup,\r\n  updateGroupLoaction\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board)\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx",["181"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards,addBoard } from '../store/actions/boardAction'\r\n// import { BoardList } from '../cmps/BoardList'\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        bgColors: [\r\n            { color: 'lightgray' },\r\n            { color: 'green' },\r\n            { color: 'coral' },\r\n            { color: '#ff4d4d' },\r\n            { color: 'crimson' },\r\n            { color: 'yellowgreen' },\r\n            { color: 'teal' },\r\n            { color: 'blue' },\r\n            { color: 'pink' }\r\n        ],\r\n        board:{\r\n            _id:'',\r\n            title:'',\r\n            createdAt:Date.now(),\r\n            style:{},\r\n            isPrivate:false,\r\n            createBy:{},\r\n            labels:[],\r\n            members:[],\r\n            groups:[],\r\n            activities:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    handleChange=(ev)=>{\r\n        const {value}=ev.target\r\n        const {board} = this.state\r\n        this.setState({\r\n            board:{...board,title:value}\r\n        })\r\n    }\r\n    \r\n    setBgColor=(color)=>{\r\n        const {board} = this.state\r\n        this.setState({\r\n            board:{...board,style:{...board.style,backgroundColor:color}}\r\n        })\r\n    }\r\n\r\n\r\n    addBoard = () => {\r\n        const {board} = this.state\r\n        this.props.addBoard(board)\r\n        this.setState({isOpen:false})\r\n    }\r\n    render() {\r\n        const { isOpen, bgColors } = this.state\r\n        const { boards } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {isOpen && <section className=\"new-board-modal\">\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Add board title\" onChange={this.handleChange} />\r\n                        <button onClick={this.addBoard}> Add Board</button>\r\n                    </div>\r\n                    <div className=\"color-picker\">\r\n                        {bgColors.map(bg => <div className=\"colors\" style={{ backgroundColor: bg.color }} onClick={()=>this.setBgColor(bg.color)}></div>)}\r\n                    </div>\r\n                </section>\r\n                }\r\n                <section>\r\n                    <h1>Create new board</h1>\r\n                    <div  className=\"board-preview\" onClick={()=>this.setState({isOpen:true})} >\r\n                        <span>\r\n                            New Board\r\n                    </span>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"my-boards\">\r\n                    <h1>My Boards</h1>\r\n                    {boards&& boards.map((board,idx) => {\r\n                        return (\r\n                            <div key={board.id}>\r\n                                <Link to={`/board/${board._id}`}>\r\n                                    <div key={idx}  className=\"board-preview\" key={board._id} style={board.style}>\r\n                                        {board.title}\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard\r\n}\r\n\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js",["182"],"import { boardService } from '../../services/boardService.js'\r\nimport { httpService } from '../../services/httpService.js'\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query()\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err)\r\n    }\r\n  }\r\n}\r\nexport function addBoard(newBoard){\r\n  return dispatch=>{\r\n    const board = boardService.addBoard(newBoard)\r\n    dispatch({type:'ADD_BOARD',board:board})\r\n  }\r\n}\r\n\r\nexport function getBoardById(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      // socketService.on('board-update',updatedBoard=>{\r\n      //   dispatch({ type: 'SET_BOARD', updatedBoard })\r\n      // })\r\n    }\r\n    catch (err) {\r\n      console.log(' err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function addCard(boardId, groupId, cardToAdd) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addCard(boardId, groupId, cardToAdd)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log(' err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addGroup(boardId, group) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addGroup(boardId, group)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log(' err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoardCard(board, card) {\r\n  return async dispatch => {\r\n    const newBoard = boardService.updateBoardCard(board, card)\r\n    //const newBoard = await httpService.put('board/' + board._id,boardService.updateBoardCard(board,card))\r\n    dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n  }\r\n}\r\n\r\nexport function openLabel() {\r\n  return dispatch => {\r\n    dispatch({ type: 'OPEN-LABELS' })\r\n  }\r\n}\r\n\r\nexport function selectImg(board, imgSrc) {\r\n  return async dispatch => {\r\n    try {\r\n      const selectedImg = await boardService.selectImg(board, imgSrc)\r\n      dispatch({ type: 'CHANGE_STYLE', selectedImg })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectImg', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectColor(board, color) {\r\n  return async dispatch => {\r\n    try {\r\n      console.log('hi***');\r\n      const selectedColor = await boardService.selectColor(board, color)\r\n      console.log('selectedColor:', selectedColor);\r\n      dispatch({ type: 'SELECT_COLOR', selectedColor })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateCardsLocation(board,group,cards){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateCardsLocation(board,group,cards)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateGroupLoaction(board,groups){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupLoaction(board,groups)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function editGroupTitle(board,group,groupTitle){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupTitle(board,group,groupTitle)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Menu.jsx",["183"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n// import { library } from '@fortawesome/fontawesome-svg-core'\r\n// import { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// library.add(fas)\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\n\r\n\r\n//imgs:\r\nimport src1 from '../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../assets/bgImgs/image-18.jpg'\r\n\r\n\r\n//functions:\r\nimport { loadUser } from '../store/actions/userActions.js'\r\nimport { selectImg, selectColor } from '../store/actions/boardAction.js'\r\n\r\nclass _Menu extends Component {\r\n\r\n    state = {\r\n        menuTitle: 'Menu',\r\n        isMenuClicked: true,\r\n        isAboutClicked: false,\r\n        isBgcColorClicked: false,\r\n        isSearchClicked: false,\r\n        isStickerClicked: false,\r\n        isMoreClicked: false,\r\n        isDescClicked: false,\r\n        isDescExist: false,\r\n        description: '',\r\n        isPhotosClicked: false,\r\n        isColorsClicked: false,\r\n        isBackTypeClicked: false,\r\n        photoSearch: '',\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ],\r\n        bgColors: [\r\n            { _id: \"clr101\", color: 'lightgray' },\r\n            { _id: \"clr101\", color: 'butlywood' },\r\n            { _id: \"clr101\", color: 'coral' },\r\n            { _id: \"clr101\", color: '#ff4d4d' },\r\n            { _id: \"clr101\", color: 'crimson' },\r\n            { _id: \"clr101\", color: 'yellowgreen' },\r\n            { _id: \"clr101\", color: 'teal' },\r\n            { _id: \"clr101\", color: '#3385ff' }\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        this.props.loadUser()\r\n    }\r\n    goBack = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({\r\n            isMenuClicked: true,\r\n            isAboutClicked: false,\r\n            isBgcColorClicked: false,\r\n            isSearchClicked: false,\r\n            isStickerClicked: false,\r\n            isMoreClicked: false\r\n        })\r\n    }\r\n    openAbout = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isAboutClicked: true, isMenuClicked: false, menuTitle: \"About This Board\" })\r\n    }\r\n    openBgcColors = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isBgcColorClicked: true, isMenuClicked: false, menuTitle: \"Change Background\" })\r\n    }\r\n    openSearch = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isSearchClicked: true, isMenuClicked: false, menuTitle: \"Search Cards\" })\r\n    }\r\n    openStickers = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isStickerClicked: true, isMenuClicked: false, menuTitle: \"Stickers\" })\r\n    }\r\n    openMore = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isMoreClicked: true, isMenuClicked: false, menuTitle: \"More\" })\r\n    }\r\n    openDesc = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isDescClicked: true })\r\n    }\r\n    openEditedDesc = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isDescClicked: true })\r\n    }\r\n    onDescChange = (ev) => {\r\n        let value = ev.target.value\r\n        let description = { ...this.state.description }\r\n        description = value\r\n        this.setState({ description })\r\n    }\r\n    saveDesc = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isDescClicked: false, isDescExist: true })\r\n    }\r\n    closeDesc = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isDescClicked: false })\r\n    }\r\n    choosePhotos = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isPhotosClicked: true, isBackTypeClicked: true, menuTitle: \"Photos\" })\r\n    }\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n    selectImg = (imgSrc) => {\r\n        console.log('imgSrc:', imgSrc);\r\n        this.props.selectImg(this.props.board,imgSrc)\r\n    }\r\n    chooseColors = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isColorsClicked: true, isBackTypeClicked: true, menuTitle: \"Colors\" })\r\n    }\r\n    selectColor = (color) => {\r\n        console.log('color:', color);\r\n        this.props.selectColor(this.props.board,color)\r\n    }\r\n    render() {\r\n\r\n        const {\r\n            menuTitle,\r\n            isMenuClicked,\r\n            isAboutClicked,\r\n            isBgcColorClicked,\r\n            isSearchClicked,\r\n            isStickerClicked,\r\n            isMoreClicked,\r\n            isDescClicked,\r\n            isDescExist,\r\n            description,\r\n            isPhotosClicked,\r\n            isColorsClicked,\r\n            isBackTypeClicked,\r\n            photoSearch,\r\n            bgImgs,\r\n            bgColors\r\n        } = this.state\r\n        const { user } = this.props\r\n        const desc = 'It is your board is time to shine! Let people know what this board is used for and what they can expect to see'\r\n\r\n        return (\r\n            <section className=\"menu\">\r\n                <img src=\"src\\assets\\bgImgs\\image-01.jpg\" alt=\"\" />\r\n                <div className=\"menu-top\">\r\n                    {!isMenuClicked &&\r\n                        <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\r\n                    <h3>{menuTitle}</h3>\r\n                    <button onClick={this.props.closeMenu}>X</button>\r\n                </div>\r\n                {isMenuClicked &&\r\n                    !isAboutClicked &&\r\n                    !isBgcColorClicked &&\r\n                    !isSearchClicked &&\r\n                    !isStickerClicked &&\r\n                    !isMoreClicked && <section>\r\n                        <section className=\"menu-options\" style={{ display: \"grid\" }}>\r\n                            <hr />\r\n                            <button className=\"menu-option\" onClick={this.openAbout}>\r\n                                <h4 className=\"option-title\"><span><InfoIcon /></span> About This Board</h4>\r\n                                <span className=\"about-desc\">Add a description to your board</span>\r\n                            </button>\r\n                            <hr />\r\n                            <button className=\"menu-option\" onClick={this.openBgcColors}>\r\n                                <h4 className=\"option-title\"><span>< WallpaperIcon /></span> Change Background</h4>\r\n                            </button>\r\n                            <hr />\r\n                            <button className=\"menu-option\" onClick={this.openSearch}>\r\n                                <h4 className=\"option-title\"><span><SearchIcon /></span> Search Cards</h4>\r\n                            </button>\r\n                            <hr />\r\n                            <button className=\"menu-option\" onClick={this.openStickers}>\r\n                                <h4 className=\"option-title\"><span><LabelImportantIcon /></span> Stickers</h4>\r\n                            </button>\r\n                            <hr />\r\n                            <button className=\"menu-option\" onClick={this.openMore}>\r\n                                <h4 className=\"option-title\"><span><MoreHorizIcon /></span>More</h4>\r\n                            </button>\r\n                        </section>\r\n                        <section className=\"butler-section\" style={{ display: \"grid\" }}>\r\n                            <button className=\"butler-btn\" >\r\n                                <h4 className=\"butler-title\">🤖 Butler</h4>\r\n                                <span className=\"butler-desc\">Automate cards and more...</span>\r\n                            </button>\r\n                        </section>\r\n                        <section className=\"others-seciton\" style={{ display: \"grid\" }}>\r\n                            <button className=\"power-ups\" >\r\n                                <h4 className=\"power-uops-title\">Power-Ups</h4>\r\n                                <span className=\"power-ups-desc\">Calendar, Google Drive and more...</span>\r\n                            </button>\r\n                            <button className=\"map\" >\r\n                                <h4 className=\"map-title\"><span><RoomIcon /></span>Map</h4>\r\n                            </button>\r\n                        </section>\r\n                        <section className=\"activity\" style={{ display: \"grid\" }}>\r\n                            <button className=\"activity\" >\r\n                                <h4 className=\"activity-title\"><span><PlaylistAddCheckIcon /></span>Activity</h4>\r\n                            </button>\r\n                            <Link to=\"/activities\">View all activity...</Link>\r\n                        </section>\r\n                    </section>}\r\n                {!isMenuClicked &&\r\n                    isAboutClicked &&\r\n                    !isBgcColorClicked &&\r\n                    !isSearchClicked &&\r\n                    !isStickerClicked &&\r\n                    !isMoreClicked &&\r\n                    <section className=\"about-section\">\r\n                        <div className=\"flex about-section-user\">\r\n                            <span className=\"user-icon\"><PermIdentityIcon /></span>\r\n                            <h3>Made by</h3>\r\n                        </div>\r\n                        <div className=\"flex user-details-menu\">\r\n                            <AccountCircleIcon />\r\n                            <Link>{user.fullname}</Link>\r\n                            <span>{user.username}</span>\r\n                        </div>\r\n                        <div className=\"flex board-description\">\r\n                            <SubjectIcon />\r\n                            <h4 className=\"description-board\">Description</h4>\r\n                            {isDescExist && <button className=\"edit-board-desc-btn\" onClick={this.openEditedDesc}>Edit</button>}\r\n                        </div>\r\n                        {!isDescClicked && <button className=\"board-desc-btn\" onClick={this.openDesc}>\r\n                            <p className=\"desc-pre\">\r\n                                {isDescExist ? description : desc}\r\n                            </p>\r\n                        </button>}\r\n\r\n                        {isDescClicked && <div className=\"edit-board-desc\">\r\n                            <textarea name=\"board-desc\" id=\"\" cols=\"30\" rows=\"5\" placeholder={desc} onChange={this.onDescChange} value={description}></textarea>\r\n                            <div className=\"flex desc-tools\">\r\n                                <button className=\"save-desc\" onClick={this.saveDesc}>Save</button>\r\n                                <button className=\"close-desc\" onClick={this.closeDesc}><CloseIcon /></button>\r\n                            </div>\r\n                        </div>}\r\n                    </section>\r\n                }\r\n                {!isMenuClicked &&\r\n                    !isAboutClicked &&\r\n                    isBgcColorClicked &&\r\n                    !isSearchClicked &&\r\n                    !isStickerClicked &&\r\n                    !isMoreClicked &&\r\n                    !isBackTypeClicked && <section className=\"background-section\">\r\n                        <section className=\"flex photos-colors\">\r\n                            <div className=\"photos\">\r\n                                <button onClick={this.choosePhotos}>\r\n                                    <PhotoLibraryIcon />\r\n                                </button>\r\n                                <span className=\"photos-title\">Photos</span>\r\n                            </div>\r\n                            <div className=\"colors\">\r\n                                <button onClick={this.chooseColors}>\r\n                                    <ColorLensIcon />\r\n                                </button>\r\n                                <span className=\"colors-title\">Colors</span>\r\n                            </div>\r\n                        </section>\r\n                    </section>}\r\n                {!isMenuClicked &&\r\n                    !isAboutClicked &&\r\n                    isBgcColorClicked &&\r\n                    !isSearchClicked &&\r\n                    !isStickerClicked &&\r\n                    !isMoreClicked &&\r\n                    isPhotosClicked &&\r\n                    isBackTypeClicked && <section className=\"photo-type\">\r\n                        <div className=\"flex search-photo\">\r\n                            <SearchIcon /><input type=\"text\"\r\n                                name=\"name\"\r\n                                value={photoSearch}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Photos\"\r\n                                autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"photos-area\">\r\n                            {bgImgs.map((img, idx) => {\r\n                                return <div className=\"bgImg\" onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                                    onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                                    onClick={() => { this.selectImg(img.src) }}>\r\n                                    <img src={img.src} />\r\n                                    {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </section>}\r\n                {!isMenuClicked &&\r\n                    !isAboutClicked &&\r\n                    isBgcColorClicked &&\r\n                    !isSearchClicked &&\r\n                    !isStickerClicked &&\r\n                    !isMoreClicked &&\r\n                    !isPhotosClicked &&\r\n                    isColorsClicked &&\r\n                    isBackTypeClicked && <section className=\"color-type\">\r\n                        <div className=\"colors-area\">\r\n                            {bgColors.map(currColor => {\r\n                                return <div className=\"color-option\" style={{ backgroundColor: currColor.color }}\r\n                                    onClick={() => { this.selectColor(currColor.color) }}\r\n                                ></div>\r\n                            })}\r\n                        </div>\r\n                    </section>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        bgColor: state.boardModule.bgColor,\r\n        bgImg: state.boardModule.bgImg,\r\n        user: state.userModule.user,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUser,\r\n    selectImg,\r\n    selectColor\r\n}\r\nexport const Menu = connect(mapStateToProps, mapDispatchToProps)(_Menu)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js",["184","185"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx",["186","187","188"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx",["189"],"import { connect } from \"react-redux\";\r\nimport { cardService } from \"../../services/cardService.js\";\r\nimport { updateBoardCard } from \"../../store/actions/boardAction\";\r\nimport { withRouter } from \"react-router\";\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport { Component } from \"react\";\r\nimport { CardContent } from \"./CardContent\";\r\n\r\n\r\nclass _Card extends Component {\r\n\r\n    state = {\r\n        card: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.cardId !== this.props.match.params.cardId) this.loadCard()\r\n        if (prevProps.board._id !== this.props.board?._id) this.loadCard()\r\n    }\r\n\r\n    loadCard = () => {\r\n        const { board } = this.props\r\n        const { cardId } = this.props.match.params\r\n        if (cardId && board.groups) {\r\n            const card = cardService.getCardById(board, cardId)\r\n            this.setState({ card })\r\n        }\r\n    }\r\n\r\n    saveCardChanges = async (card) => {\r\n        const { board } = this.props\r\n        const newBoard = await this.props.updateBoardCard(board, card)\r\n        this.setState({card})\r\n    }\r\n\r\n    onChangetitle = ({target}) => {\r\n        const {value} = target\r\n        this.setState(prevState => ({card:{...prevState.card, title: value}}))\r\n    }\r\n\r\n    onSaveTitle(ev){\r\n        ev.preventDefault()\r\n        this.saveCardChanges(this.state.card)\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.state\r\n        if (!card) return null\r\n        return (\r\n            <section className={\"card-modal-screen flex center\"}>\r\n                <div className=\"card-modal grid\">\r\n                    <div className=\"header flex\">\r\n                        <WebIcon/>\r\n                        <form onSubmit={this.onSaveTitle}></form>\r\n                        <input \r\n                        type=\"text\"\r\n                        value={card.title}\r\n                        onChange={this.onChangetitle}\r\n                        />\r\n                    </div>\r\n                    <CardContent card={card} save={this.saveCardChanges} />\r\n                    <div className=\"card-options\">\r\n                        options <br/>options <br/>options <br/>options\r\n                    <div className=\"add-to-card\"></div>\r\n                        <div className=\"card-actions\"></div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard\r\n}\r\n\r\nexport const Card = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Card))\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx",["190","191","192","193","194"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx",["195","196","197","198"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\ActivityList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx",["199"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const {card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = {txt, createdAt: Date.now(), createdBy: {},id: utilService.makeId()}\r\n        const newCard = {...card}\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    render() {\r\n        const {attachments} = this.props.card\r\n        if(!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <div className=\"flex\">\r\n            <AttachFileRoundedIcon style={{transform: \"rotate(35deg)\"}}/>\r\n            <h3>Attachments</h3>\r\n            </div>\r\n            {attachments.map(att => <a key={att.id} target=\"_blank\" href={att.url}><h4>{att.title}</h4></a>)}\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Label.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx",["200","201","202","203","204","205","206","207"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Dnd.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardEdit.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev.jsx",["208"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev2.jsx",["209","210","211","212"],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":23,"column":35,"nodeType":"219","messageId":"220","endLine":23,"endColumn":37},{"ruleId":"221","severity":1,"message":"222","line":2,"column":16,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"225","line":8,"column":9,"nodeType":"223","messageId":"224","endLine":8,"endColumn":12},{"ruleId":"221","severity":1,"message":"226","line":34,"column":13,"nodeType":"223","messageId":"224","endLine":34,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":92,"column":79,"nodeType":"229","endLine":92,"endColumn":94},{"ruleId":"221","severity":1,"message":"230","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":21},{"ruleId":"231","severity":1,"message":"232","line":340,"column":37,"nodeType":"233","endLine":340,"endColumn":58},{"ruleId":"221","severity":1,"message":"230","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":21},{"ruleId":"221","severity":1,"message":"234","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":31},{"ruleId":"221","severity":1,"message":"235","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":3,"column":27,"nodeType":"223","messageId":"224","endLine":3,"endColumn":36},{"ruleId":"221","severity":1,"message":"237","line":3,"column":38,"nodeType":"223","messageId":"224","endLine":3,"endColumn":47},{"ruleId":"221","severity":1,"message":"238","line":36,"column":15,"nodeType":"223","messageId":"224","endLine":36,"endColumn":23},{"ruleId":"221","severity":1,"message":"235","line":6,"column":10,"nodeType":"223","messageId":"224","endLine":6,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":6,"column":27,"nodeType":"223","messageId":"224","endLine":6,"endColumn":36},{"ruleId":"221","severity":1,"message":"237","line":6,"column":38,"nodeType":"223","messageId":"224","endLine":6,"endColumn":47},{"ruleId":"221","severity":1,"message":"239","line":88,"column":75,"nodeType":"223","messageId":"224","endLine":88,"endColumn":86},{"ruleId":"221","severity":1,"message":"240","line":88,"column":87,"nodeType":"223","messageId":"224","endLine":88,"endColumn":102},{"ruleId":"221","severity":1,"message":"235","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":4,"column":27,"nodeType":"223","messageId":"224","endLine":4,"endColumn":36},{"ruleId":"221","severity":1,"message":"237","line":4,"column":38,"nodeType":"223","messageId":"224","endLine":4,"endColumn":47},{"ruleId":"221","severity":1,"message":"241","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":25,"column":37,"nodeType":"233","endLine":25,"endColumn":84},{"ruleId":"221","severity":1,"message":"244","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":20},{"ruleId":"221","severity":1,"message":"245","line":4,"column":10,"nodeType":"223","messageId":"224","endLine":4,"endColumn":14},{"ruleId":"221","severity":1,"message":"246","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":19},{"ruleId":"221","severity":1,"message":"247","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":36},{"ruleId":"221","severity":1,"message":"248","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":29},{"ruleId":"221","severity":1,"message":"249","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":33},{"ruleId":"221","severity":1,"message":"250","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":16},{"ruleId":"221","severity":1,"message":"239","line":28,"column":30,"nodeType":"223","messageId":"224","endLine":28,"endColumn":41},{"ruleId":"227","severity":1,"message":"228","line":42,"column":32,"nodeType":"229","endLine":42,"endColumn":55},{"ruleId":"221","severity":1,"message":"251","line":14,"column":10,"nodeType":"223","messageId":"224","endLine":14,"endColumn":17},{"ruleId":"221","severity":1,"message":"252","line":41,"column":33,"nodeType":"223","messageId":"224","endLine":41,"endColumn":42},{"ruleId":"221","severity":1,"message":"253","line":41,"column":44,"nodeType":"223","messageId":"224","endLine":41,"endColumn":55},{"ruleId":"227","severity":1,"message":"228","line":72,"column":36,"nodeType":"229","endLine":72,"endColumn":59},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Dnd' is defined but never used.","'bgColor' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'httpService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RestaurantMenuRounded' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'newBoard' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'onEditModalOpen' is assigned a value but never used.","'CardEdit' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'CheckBoxIcon' is defined but never used.","'Link' is defined but never used.","'SubjectIcon' is defined but never used.","'ChatBubbleOutlineRoundedIcon' is defined but never used.","'AttachFileRoundedIcon' is defined but never used.","'PlaylistAddCheckSharpIcon' is defined but never used.","'EditIcon' is defined but never used.","'Archive' is defined but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]