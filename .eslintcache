<<<<<<< HEAD
[{"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\index.js":"1","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\serviceWorkerRegistration.js":"2","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\reportWebVitals.js":"3","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\store.js":"4","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\App.jsx":"5","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardList.jsx":"6","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\socketService.js":"7","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Header.jsx":"8","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Board.jsx":"9","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Home.jsx":"10","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Dashboard.jsx":"11","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\index.js":"12","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\boardAction.js":"13","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardPreview.jsx":"14","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\cardService.js":"15","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\boardService.js":"16","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\utilService.js":"17","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\userReducer.js":"18","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\reviewReducer.js":"19","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\userActions.js":"20","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\systemReducer.js":"21","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\cardReducer.js":"22","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\menuReducer.js":"23","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\boardReducer.js":"24","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardHeader.jsx":"25","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Archive.jsx":"26","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\UserModalFromHeader.jsx":"27","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx":"28","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\Menu.jsx":"29","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupList.jsx":"30","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Card.jsx":"31","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\MyAvatar.jsx":"32","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\UserCards.jsx":"33","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\UserActivities.jsx":"34","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\httpService.js":"35","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx":"36","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\userService.js":"37","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx":"38","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx":"39","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx":"40","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx":"41","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionLabels.jsx":"42","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardMenu.jsx":"43","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddDueDateModal.jsx":"44","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\DynamicCardActionModal.jsx":"45","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentPreview.jsx":"46","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\menuAction.js":"47","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx":"48","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupPreview.jsx":"49","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx":"50","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx":"51","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardContent.jsx":"52","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\menuService.js":"53","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddChecklistModal.jsx":"54","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx":"55","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx":"56","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\MemberListModal.jsx":"57","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddAttachmentModal.jsx":"58","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelListModal.jsx":"59","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\MoveCardModal.jsx":"60","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CopyCardModal.jsx":"61","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddCoverModal.jsx":"62","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\cardActions.js":"63","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardList.jsx":"64","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupMenu.jsx":"65","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\AddCardInput.jsx":"66","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentList.jsx":"67","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardDescription.jsx":"68","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardAttachmentList.jsx":"69","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklistList.jsx":"70","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\MemberList.jsx":"71","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelList.jsx":"72","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPreview.jsx":"73","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklist.jsx":"74","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardEdit.jsx":"75","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardDetails.jsx":"76","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Todo.jsx":"77","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\LinearProgressBar.jsx":"78"},{"size":935,"mtime":1610481008514,"results":"79","hashOfConfig":"80"},{"size":5201,"mtime":1610481008516,"results":"81","hashOfConfig":"80"},{"size":377,"mtime":1610481008516,"results":"82","hashOfConfig":"80"},{"size":323,"mtime":1610481008527,"results":"83","hashOfConfig":"80"},{"size":1316,"mtime":1611263685144,"results":"84","hashOfConfig":"80"},{"size":932,"mtime":1611323987604,"results":"85","hashOfConfig":"80"},{"size":1825,"mtime":1611263685173,"results":"86","hashOfConfig":"80"},{"size":3042,"mtime":1611079700748,"results":"87","hashOfConfig":"80"},{"size":1841,"mtime":1611099392116,"results":"88","hashOfConfig":"80"},{"size":313,"mtime":1610992300733,"results":"89","hashOfConfig":"80"},{"size":6781,"mtime":1611323934188,"results":"90","hashOfConfig":"80"},{"size":560,"mtime":1610622588603,"results":"91","hashOfConfig":"80"},{"size":5724,"mtime":1611263685174,"results":"92","hashOfConfig":"80"},{"size":401,"mtime":1611099392113,"results":"93","hashOfConfig":"80"},{"size":3105,"mtime":1611263685171,"results":"94","hashOfConfig":"80"},{"size":8246,"mtime":1611263685170,"results":"95","hashOfConfig":"80"},{"size":916,"mtime":1611100114779,"results":"96","hashOfConfig":"80"},{"size":878,"mtime":1611244386697,"results":"97","hashOfConfig":"80"},{"size":669,"mtime":1610481008526,"results":"98","hashOfConfig":"80"},{"size":1832,"mtime":1610554626638,"results":"99","hashOfConfig":"80"},{"size":322,"mtime":1610481008526,"results":"100","hashOfConfig":"80"},{"size":377,"mtime":1610586031764,"results":"101","hashOfConfig":"80"},{"size":279,"mtime":1610623330055,"results":"102","hashOfConfig":"80"},{"size":824,"mtime":1611263685175,"results":"103","hashOfConfig":"80"},{"size":727,"mtime":1611099392113,"results":"104","hashOfConfig":"80"},{"size":6029,"mtime":1611099392113,"results":"105","hashOfConfig":"80"},{"size":2230,"mtime":1611263685157,"results":"106","hashOfConfig":"80"},{"size":1268,"mtime":1610899819911,"results":"107","hashOfConfig":"80"},{"size":5800,"mtime":1611242988786,"results":"108","hashOfConfig":"80"},{"size":4074,"mtime":1611263685156,"results":"109","hashOfConfig":"80"},{"size":4271,"mtime":1611263685160,"results":"110","hashOfConfig":"80"},{"size":547,"mtime":1610894207070,"results":"111","hashOfConfig":"80"},{"size":570,"mtime":1611077632860,"results":"112","hashOfConfig":"80"},{"size":807,"mtime":1611077797082,"results":"113","hashOfConfig":"80"},{"size":1079,"mtime":1611263685172,"results":"114","hashOfConfig":"80"},{"size":605,"mtime":1610881773738,"results":"115","hashOfConfig":"80"},{"size":3390,"mtime":1611102466253,"results":"116","hashOfConfig":"80"},{"size":2172,"mtime":1610837721867,"results":"117","hashOfConfig":"80"},{"size":2215,"mtime":1610934410675,"results":"118","hashOfConfig":"80"},{"size":3983,"mtime":1610851756132,"results":"119","hashOfConfig":"80"},{"size":1490,"mtime":1610934877701,"results":"120","hashOfConfig":"80"},{"size":6975,"mtime":1611069599267,"results":"121","hashOfConfig":"80"},{"size":2519,"mtime":1610894207074,"results":"122","hashOfConfig":"80"},{"size":1515,"mtime":1611011995323,"results":"123","hashOfConfig":"80"},{"size":2402,"mtime":1611263685165,"results":"124","hashOfConfig":"80"},{"size":516,"mtime":1611011995325,"results":"125","hashOfConfig":"80"},{"size":687,"mtime":1610850855482,"results":"126","hashOfConfig":"80"},{"size":2102,"mtime":1611074919373,"results":"127","hashOfConfig":"80"},{"size":6999,"mtime":1611099392115,"results":"128","hashOfConfig":"80"},{"size":1669,"mtime":1610934440932,"results":"129","hashOfConfig":"80"},{"size":5776,"mtime":1610981365258,"results":"130","hashOfConfig":"80"},{"size":1302,"mtime":1611263685164,"results":"131","hashOfConfig":"80"},{"size":301,"mtime":1610831252926,"results":"132","hashOfConfig":"80"},{"size":1961,"mtime":1611011995322,"results":"133","hashOfConfig":"80"},{"size":524,"mtime":1610935078775,"results":"134","hashOfConfig":"80"},{"size":1977,"mtime":1610935230712,"results":"135","hashOfConfig":"80"},{"size":2580,"mtime":1611263685168,"results":"136","hashOfConfig":"80"},{"size":1955,"mtime":1611263685158,"results":"137","hashOfConfig":"80"},{"size":2400,"mtime":1611263685167,"results":"138","hashOfConfig":"80"},{"size":2284,"mtime":1611263685169,"results":"139","hashOfConfig":"80"},{"size":2928,"mtime":1611263685165,"results":"140","hashOfConfig":"80"},{"size":2734,"mtime":1611263685159,"results":"141","hashOfConfig":"80"},{"size":704,"mtime":1610586031763,"results":"142","hashOfConfig":"80"},{"size":2187,"mtime":1611099392114,"results":"143","hashOfConfig":"80"},{"size":1238,"mtime":1611099392115,"results":"144","hashOfConfig":"80"},{"size":1054,"mtime":1611099392112,"results":"145","hashOfConfig":"80"},{"size":2826,"mtime":1610894207073,"results":"146","hashOfConfig":"80"},{"size":2235,"mtime":1610894207074,"results":"147","hashOfConfig":"80"},{"size":1842,"mtime":1611263685162,"results":"148","hashOfConfig":"80"},{"size":1664,"mtime":1611263685163,"results":"149","hashOfConfig":"80"},{"size":1087,"mtime":1611263685168,"results":"150","hashOfConfig":"80"},{"size":1066,"mtime":1611263685166,"results":"151","hashOfConfig":"80"},{"size":4227,"mtime":1611263685155,"results":"152","hashOfConfig":"80"},{"size":2119,"mtime":1611263685163,"results":"153","hashOfConfig":"80"},{"size":7731,"mtime":1611263685195,"results":"154","hashOfConfig":"80"},{"size":3800,"mtime":1611263685196,"results":"155","hashOfConfig":"80"},{"size":3212,"mtime":1611011995328,"results":"156","hashOfConfig":"80"},{"size":577,"mtime":1610823614962,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1ogt17l",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"160"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"160"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"160"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"160"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"160"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"160"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"160"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"160"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"160"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"160"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"160"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"160"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"160"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"160"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"160"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"160"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"160"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\index.js",[],["348","349"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\serviceWorkerRegistration.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\reportWebVitals.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\store.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\App.jsx",["350"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Component } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n//cmps:\r\nimport { Header } from './cmps/Header'\r\nimport { Home } from './pages/Home'\r\nimport { Board } from './pages/Board'\r\nimport { BoardList } from './cmps/BoardList.jsx'\r\nimport { socketService } from './services/socketService'\r\nimport { Dashboard } from './pages/Dashboard'\r\n\r\nfunction _App(props) {\r\n\r\n  socketService.setup()\r\n  const style = props.board?.style\r\n\r\n  return (\r\n    <div className=\"app\" style={style}>\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/board/:boardId/:cardId?\" component={Board} />\r\n            <Route path=\"/board\" component={BoardList} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            {/* <Route path=\"/signup\" component={Signup} /> */}\r\n            {/* <Route path=\"/login\" component={Login} /> */}\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.board\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\socketService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Header.jsx",["351"],"import { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n//icons:\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\n//cmps:\r\nimport { MenuMapShow } from './menu/menuFirstSee/MenuMapShow';\r\nimport { UserModalFromHeader } from './UserModalFromHeader';\r\n\r\nclass _Header extends Component {\r\n    state = {\r\n        isMapOpen: false,\r\n        isUserModalOpen: false\r\n    }\r\n    toggleMap = () => { this.setState({ isMapOpen: !this.state.isMapOpen }) }\r\n\r\n    closeModal = () => { this.setState({ isUserModalOpen: false }) }\r\n\r\n    render() {\r\n        const { isMapOpen, isUserModalOpen } = this.state\r\n        const { board } = this.props\r\n        const { createdBy } = board\r\n        console.log('user', createdBy, 'board', board);\r\n        return (\r\n            <header className=\"main-header\">\r\n                <div className=\"icons-container\">\r\n\r\n\r\n\r\n                    <span className=\"apps-icon\">\r\n                        <AppsIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                        <Link to=\"/\">\r\n                            <DashboardIcon />\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n\r\n\r\n                <div className=\"icons-container\">\r\n                    <span className=\"apps-icon\" onClick={this.toggleMap}>\r\n                        <Link to=\"/map\"></Link>\r\n                        <RoomIcon />\r\n                        {isMapOpen && <MenuMapShow />}\r\n                    </span>\r\n\r\n                    <span className=\"apps-icon\">\r\n                        <AddIcon />\r\n                    </span>\r\n\r\n                    <span className=\"apps-icon info\" >\r\n                        <Link to=\"/dashboard\"><InfoIcon /></Link>\r\n                    </span>\r\n\r\n\r\n                    <span className=\"apps-icon\" onClick={() => this.setState({ isUserModalOpen: true })}>\r\n                        <AccountCircleIcon />\r\n                    </span>\r\n\r\n                    {isUserModalOpen && <UserModalFromHeader closeModal={this.closeModal} board={board} user={createdBy} />}\r\n                </div>\r\n                {/* <div className=\"login-signup\">\r\n                    <Link to=\"/login\"> <button className=\"login\"><span>Login</span></button></Link>\r\n                    <Link to=\"/signup\"><button className=\"signup\"><span>Signup</span></button></Link>\r\n                </div> */}\r\n            </header>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser,\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Board.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Home.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Dashboard.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\index.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\boardAction.js",["352"],"import { boardService } from '../../services/boardService.js'\r\nimport { cardService } from '../../services/cardService.js'\r\nimport { socketService } from '../../services/socketService.js'\r\n\r\nexport function loadBoards() {\r\n  console.log('actions got req')\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query()\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function getBoardById(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      socketService.emit('join board', board._id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      socketService.on('board update', updatedBoard => {\r\n        console.log('got socket event');\r\n        dispatch({ type: 'SET_BOARD', updatedBoard })\r\n      })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addBoard(newBoard) {\r\n  return async dispatch => {\r\n    const board = await boardService.addBoard(newBoard)\r\n    dispatch({ type: 'ADD_BOARD', board })\r\n  }\r\n}\r\n\r\nexport function addGroup(board, group) {\r\n  return async dispatch => {\r\n    try {\r\n      const newBoard = await boardService.addGroup(board, group)\r\n      dispatch({ type: 'SET_BOARD', board: newBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addCard(board, group, cardToAdd) {\r\n  return async dispatch => {\r\n    try {\r\n      const newBoard = await boardService.addCard(board, group, cardToAdd)\r\n      dispatch({ type: 'SET_BOARD', board: newBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateBoardCard(board, card) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard =  await boardService.updateBoardCard(board, card)\r\n      console.log(updatedBoard);\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard }) //drag end drop deley\r\n      boardService.updateBoard({...updatedBoard})\r\n    }\r\n    catch (err) {\r\n      dispatch({ type: 'SET_BOARD', board }) // if server returns error \r\n      console.log('boardActions: could not save', err);\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport function openLabel() {\r\n  return dispatch => {\r\n    dispatch({ type: 'OPEN-LABELS' })\r\n  }\r\n}\r\n\r\nexport function setBackground(board, background) {\r\n  return async dispatch => {\r\n    try {\r\n      const newBoard = await boardService.setStyle(board, background)\r\n      dispatch({ type: 'SET_BOARD', board: newBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateCardLocation(board, source, destination) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateCardLocation(board, source, destination)\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n      boardService.updateBoard(updatedBoard)\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateGroupLoaction(board, groupId, source, destination) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = boardService.updateGroupLoaction(board, groupId, source, destination)\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard }) //drag end drop deley\r\n      boardService.updateBoard(updatedBoard)\r\n    }\r\n    catch (err) {\r\n      dispatch({ type: 'SET_BOARD', board }) // if server returns error \r\n      console.log('boardActions: could not save', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function editGroupTitle(board, group, groupTitle) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupTitle(board, group, groupTitle)\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function copyList(board,group){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.copyList(board,group)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n  return (dispatch) => {\r\n    const action = {\r\n      type: 'SET_GROUPS_FILTER',\r\n      filterBy\r\n    }\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\nexport function editCurrLabel(currBoard, label, selectedColorLabel, act) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.editCurrLabel(currBoard, label, selectedColorLabel, act)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function moveCard(currBoard, card, to) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.moveCard(currBoard, card, to)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in moving card', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function onArchiveList(currBoard, currGroup) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.archiveList(currBoard,currGroup)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function onArchiveCard(currBoard, currGroup,card) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.archiveCard(currBoard,currGroup,card)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err);\r\n    }\r\n  }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardPreview.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\cardService.js",["353"],"import { utilService } from './utilService'\r\n\r\nexport const cardService = {\r\n    getCardById,\r\n    getCards,\r\n    getCardLabels,\r\n    getCardForUpdate,\r\n    updateChecklistTodo,\r\n    removeChecklist,\r\n    getActivityToAdd,\r\n    getCommentToAdd,\r\n    handleChecklistDrag,\r\n    handleTodoDrag\r\n\r\n}\r\n\r\nfunction getCardById(board, cardId) {\r\n    var currCard\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) currCard = JSON.parse(JSON.stringify(card))\r\n    }))\r\n    if (!currCard) return null\r\n    const labels = getCardLabels(board, currCard.labels)\r\n    const activities = _getCardActivities(board, cardId)\r\n    return { ...currCard, labels, activities }\r\n}\r\n\r\nfunction getCardForUpdate(card) {\r\n    const labels = card.labels.map(label => label.id)\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    delete newCard.activities\r\n    // const newCard = JSON.parse(JSON.stringify(card))  //got error on json actions\r\n    return { ...newCard, labels }\r\n\r\n\r\n}\r\nfunction _getCardActivities(board, cardId) {\r\n    return board.activities.filter(act => act.card.id === cardId)\r\n}\r\n\r\nfunction getCardLabels(board, labels) {\r\n    return board.labels.filter(label => labels?.includes(label.id))\r\n}\r\n\r\nfunction getCards(group) {\r\n    const cards = group.cards\r\n    return cards\r\n}\r\n\r\nfunction updateChecklistTodo(card, checklist, todo) {\r\n    const todoToUpdate = JSON.parse(JSON.stringify(todo))\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    if (todoToUpdate.id) var todos = checklist.todos.map(todo => (todo.id === todoToUpdate.id) ? todoToUpdate : todo)\r\n    else {\r\n        todoToUpdate.id = utilService.makeId()\r\n        todos = [...checklist.todos, todoToUpdate]\r\n    }\r\n    const currChecklist = { ...checklist, todos }\r\n    const checklists = card.checklists.map(checklist => (checklist.id === currChecklist.id) ? currChecklist : checklist)\r\n    return { ...newCard, checklists }\r\n}\r\n\r\nfunction removeChecklist(card, currChecklist) {\r\n    const checklists = card.checklists.filter(checklist => checklist.id !== currChecklist.id)\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    return { ...newCard, checklists }\r\n}\r\n\r\nfunction getActivityToAdd(card, user, txt) {\r\n\r\n    return {\r\n        id: utilService.makeId(),\r\n        txt,\r\n        createdAt: Date.now(),\r\n        createdBy: user,\r\n        card: {\r\n            id: card.id,\r\n            title: card.title\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction getCommentToAdd(txt, user) {\r\n    return { txt, createdAt: Date.now(), createdBy: user, id: utilService.makeId() }\r\n}\r\n\r\n\r\nfunction handleTodoDrag(board, card, res) {\r\n    var newCard\r\n    if (res.type = 'checklists') newCard = cardService.handleChecklistDrag(card, res)\r\n    return newCard\r\n\r\n}\r\n\r\nfunction handleChecklistDrag( card, res) {\r\n    console.log(card);\r\n    const checklists = [...card.checklists]\r\n    const checklist = checklists.splice(res.source.index, 1)[0]\r\n    checklists.splice(res.destination.index, 0, checklist)\r\n    const newCard = { ...card, checklists }\r\n    console.log(newCard)\r\n    return newCard\r\n\r\n}\r\n\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\boardService.js",["354","355"],"import { utilService } from './utilService'\r\nimport { httpService } from './httpService'\r\nimport { cardService } from './cardService'\r\n\r\n\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    addCard,\r\n    addGroup,\r\n    updateBoardCard,\r\n    updateCardLocation,\r\n    updateGroupLoaction,\r\n    addBoard,\r\n    updateGroupTitle,\r\n    updateBoardDesc,\r\n    getActivities,\r\n    setStyle,\r\n    copyList,\r\n    editCurrLabel,\r\n    updateBoard,\r\n    moveCard,\r\n    archiveList,\r\n    archiveCard\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nasync function query() {\r\n    console.log('sevice got req');\r\n    try {\r\n        const boards = await httpService.get('/board')\r\n        return boards\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function getById(id) {\r\n    try {\r\n        const board = await httpService.get('/board/' + id)\r\n        return board\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\n\r\nasync function addBoard(board) {\r\n    const newBoard = { ...board, _id: utilService.makeId() }\r\n    try {\r\n        const boardAfter = await httpService.post('/board', newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function updateBoardCard(currBoard, card) { //will it be a problem with idxs due to d&d?\r\n    const board = JSON.parse(JSON.stringify(currBoard))\r\n    const cardToUpdate = cardService.getCardForUpdate(card)\r\n    const newGroups = board.groups.map(group => {\r\n        const cards = group.cards.map(card => (card.id === cardToUpdate.id) ? cardToUpdate : card)\r\n        return { ...group, cards }\r\n    })\r\n    const newBoard = { ...board, groups: newGroups }\r\n    return newBoard\r\n}\r\n\r\nasync function addCard(board, group, currCard, isAddingToTop) {\r\n    const card = { ...currCard, createdAt: Date.now(), id: utilService.makeId() }\r\n    const newGroup = (isAddingToTop) ? { ...group, cards: [card, ...group.cards] } : { ...group, cards: [...group.cards, card] }\r\n    const newGroups = board.groups.map(group => (group.id === newGroup.id ? newGroup : group))\r\n    const newBoard = { ...board, groups: newGroups }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function addGroup(board, group) {\r\n    const newGroup = { ...group, createdAt: Date.now(), id: utilService.makeId() }\r\n    const newGroups = [...board.groups, newGroup]\r\n    const newBoard = { ...board, groups: newGroups }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nfunction updateCardLocation(board, source, destination) {\r\n    console.log('dnd:', source, destination)\r\n    const currBoard = JSON.parse(JSON.stringify(board))\r\n    const fromGroupIdx = currBoard.groups.findIndex(group => group.id === source.droppableId)\r\n    const toGroupIdx = currBoard.groups.findIndex(group => group.id === destination.droppableId)\r\n    const currCard = currBoard.groups[fromGroupIdx].cards[source.index]\r\n    currBoard.groups[fromGroupIdx].cards.splice(source.index, 1)\r\n    currBoard.groups[toGroupIdx].cards.splice(destination.index, 0, currCard)\r\n    console.log(currBoard)\r\n    return currBoard\r\n}\r\n\r\nasync function updateGroupLoaction(board, groupId, source, destination) {\r\n    const currBoard = JSON.parse(JSON.stringify(board))\r\n    const currGroup = currBoard.groups.find(group => group.id === groupId)\r\n    currBoard.groups.splice(source.index, 1)\r\n    currBoard.groups.splice(destination.index, 0, currGroup)\r\n    return currBoard\r\n}\r\n\r\nasync function updateGroupTitle(board, currGroup, title) {\r\n\r\n    const newGroups = board.groups.map(group => (group.id === currGroup.id) ? { ...group, title } : group)\r\n    const newBoard = { ...board, groups: newGroups }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function setStyle(board, background) {\r\n    const newBoard = { ...board, style: background }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function updateBoardDesc(board, description) {\r\n    const newBoard = { ...board, description }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nfunction getActivities(board, filter) {\r\n    const cardsComments = []\r\n    console.log('the fucking board board of the cukgin servcie', board);\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.comments) cardsComments.push(...card.comments)\r\n    }))\r\n    if (filter === 'all') return [...cardsComments, ...board.activities]\r\n    else return [...cardsComments]\r\n}\r\n\r\nasync function copyList(board, currGroup) {\r\n    const boardCopy = JSON.parse(JSON.stringify(board))\r\n    const groupCopy = JSON.parse(JSON.stringify(currGroup))\r\n    groupCopy.id = utilService.makeId()\r\n    groupCopy.cards.forEach(card => card.id = utilService.makeId())\r\n    const groupIdx = board.groups.findIndex(group => group.id === currGroup.id)\r\n    boardCopy.groups.splice((groupIdx + 1), 0, groupCopy)\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + boardCopy._id, boardCopy)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\n\r\n\r\nasync function editCurrLabel(board, currLabel, deleteOption) {\r\n\r\n    if (currLabel.id) {\r\n        if (deleteOption !== 'delete') {\r\n            var labels = board.labels.map(label => (label.id === currLabel.id) ? currLabel : label)\r\n        } else {\r\n            var labels = board.labels.filter(label => (label.id !== currLabel.id))\r\n        }\r\n    }\r\n    else {\r\n        currLabel.id = utilService.makeId()\r\n        var labels = [...board.labels, currLabel]\r\n    }\r\n    const newBoard = { ...board, labels }\r\n\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nasync function archiveList(currBoard, currGroup) {\r\n    const newBoard = { ...currBoard, groups: currBoard.groups.filter(group => group.id !== currGroup.id), archives: { ...currBoard.archives, groups: [...currBoard.archives.groups, currGroup] } }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\n\r\n\r\nasync function updateBoard(board) {\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + board._id, board)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n\r\n}\r\nasync function moveCard(currBoard, currCard, to) {\r\n    console.log('currBoard, currCard, to', currBoard, currCard, to)\r\n    const groups = currBoard.groups.map((group, idx) => {\r\n        var cards\r\n        if (idx !== +to.groupIdx) {\r\n            cards = group.cards.filter(card => card.id !== currCard.id)\r\n        }\r\n        else {\r\n            cards = [...group.cards]\r\n            cards.splice(+to.cardIdx, 0, currCard)\r\n        }\r\n        return { ...group, cards }\r\n    })\r\n    const board = { ...currBoard, groups }\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + board._id, board)\r\n        return boardAfter\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nasync function archiveCard(currBoard, currGroup, currCard) {\r\n    const newBoard = { ...currBoard }\r\n    const groupIdx = currBoard.groups.findIndex(group => group.id === currGroup.id)\r\n    const newCards = currBoard.groups[groupIdx].cards.filter(card => card.id !== currCard.id)\r\n    newBoard.groups[groupIdx].cards = newCards\r\n    newBoard.archives.cards.unshift(currCard)\r\n    try {\r\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\r\n        return boardAfter\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\utilService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\userReducer.js",["356"],"import { utilService } from \"../../services/utilService\"\r\n\r\nlet localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: [],\r\n  user: ''\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    case 'GET_USER':\r\n      return { ...state, user: action.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\reviewReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\userActions.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\systemReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\cardReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\menuReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\boardReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardHeader.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Archive.jsx",["357","358"],"import React, { Component } from 'react'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { MyAvatar } from './MyAvatar'\r\n\r\nexport class Archive extends Component {\r\n\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <h3> ARCHIVE</h3>\r\n                <div className='group-container'>\r\n\r\n                    {board.archives.groups.map(group => {\r\n                        return (\r\n                            <div className='group-preview' >\r\n\r\n                                <div>\r\n                                    <span className=\"group-menu-btn\" >...</span>\r\n                                    <p>Group Archives</p>\r\n                                </div>\r\n                                <div className={'card-list'} style={{ overflow: 'none' }} >\r\n                                    {group.cards.map((card) => {\r\n                                        return (\r\n                                            <div className='card-preview' style={card.style}   >\r\n                                                <div className=\"label-container\">\r\n                                                    {card.labels.map((label, idx) => {\r\n                                                        return <div key={label.id} className={`label is-close`} style={{ backgroundColor: label.color }}>\r\n                                                        </div>\r\n                                                    })\r\n                                                    }\r\n                                                </div>\r\n                                                <div className={`edit-and-title`} >\r\n                                                    <div>\r\n                                                        <p>{card.title}</p>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"card-icons \">\r\n                                                    <div className=\"card-icons-section1\">\r\n                                                        {card.description && <SubjectIcon />}\r\n                                                        {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                                                        {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                                                        {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                                                    </div>\r\n                                                    {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member => <MyAvatar user={member} />)} </div>}\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n\r\n                    <div className='group-preview' >\r\n\r\n                        <div>\r\n                            <span className=\"group-menu-btn\" >...</span>\r\n                            <p>Cards Archives</p>\r\n                        </div>\r\n\r\n                        <div className={'card-list'} style={{ overflow: 'none' }} >\r\n                            {board.archives.cards.map((card) => {\r\n                                return (\r\n                                    <div className='card-preview' style={card.style}   >\r\n                                        <div className=\"label-container\">\r\n                                            {card.labels.map((label, idx) => {\r\n                                                return <div key={label.id} className={`label is-close`} style={{ backgroundColor: label.color }}>\r\n                                                </div>\r\n                                            })\r\n                                            }\r\n                                        </div>\r\n                                        <div className={`edit-and-title`} >\r\n                                            <div>\r\n                                                <p>{card.title}</p>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"card-icons \">\r\n                                            <div className=\"card-icons-section1\">\r\n                                                {card.description && <SubjectIcon />}\r\n                                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                                            </div>\r\n                                            {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member => <MyAvatar user={member} />)} </div>}\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\UserModalFromHeader.jsx",["359"],"import { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { MyAvatar } from '../cmps/MyAvatar.jsx'\r\nimport { UserActivities } from '../cmps/UserActivities.jsx'\r\nimport { UserCards } from '../cmps/UserCards.jsx'\r\n\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\n\r\nexport class UserModalFromHeader extends Component {\r\n\r\n    state = {\r\n        currAct: null\r\n    }\r\n    goBack = () => { this.setState({ currAct: null }) }\r\n    render() {\r\n\r\n        const { currAct } = this.state\r\n        const { user, board } = this.props\r\n        if (!user || !board) return null \r\n        return (\r\n            <section className=\"user-modal-from-header\">\r\n                <div className=\"top-modal\">\r\n                    <span className=\"title\">Account</span>\r\n                    <button className=\"close-modal-btn\" onClick={this.props.closeModal}><CloseRoundedIcon /></button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                <div className=\"user-details-menu\">\r\n                    <span className=\"user-details-user-icon\"> <MyAvatar user={user} /></span>\r\n                    <p>{user.fullname}</p>\r\n                    <span className=\"user-details-user-name\">{user.username}</span>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                <section className=\"user-acts\">\r\n                    {currAct === null && <div className=\"acts-btns\">\r\n                        <button className=\"act\" onClick={() => this.setState({ currAct: 'Activities' })}>Activity</button>\r\n                        <button className=\"act\" onClick={() => this.setState({ currAct: 'Cards' })}>Cards</button>\r\n                    </div>}\r\n                    <DynamicCmp currAct={currAct} board={board} user={user} goBack={this.goBack} />\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction DynamicCmp({ currAct, board, user, goBack }) {\r\n    switch (currAct) {\r\n        case 'Activities':\r\n            return <UserActivities board={board} user={user} goBack={goBack} />\r\n        case 'Cards':\r\n            return <UserCards board={board} user={user} goBack={goBack} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx",["360"],"\r\nimport { Component } from 'react'\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\n//icons:\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\n\r\nclass _MenuMapShow extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        gGoogleMap: ''\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"map-section\">\r\n                <Map\r\n                    google={this.props.google}\r\n                    initialCenter={{ lat: 32.0749831, lng: 34.9120554 }}\r\n                    center={this.state.center}\r\n                    zoom={14}>\r\n\r\n                    <Marker\r\n                        name={'Current location'} />\r\n\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}>\r\n                        <div>\r\n                            <h1>{this.state.selectedPlace.name}</h1>\r\n                        </div>\r\n                    </InfoWindow>\r\n\r\n                </Map>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const MenuMapShow = GoogleApiWrapper({\r\n    apiKey: ('AIzaSyBzfpQbTtSYT__Qh9PIPLUnA9xBMKj1iFY')\r\n})(_MenuMapShow)","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\Menu.jsx",["361","362"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\r\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\r\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\r\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\r\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\r\nimport { MenuActivitiesList } from './menuFirstSee/MenuActivitiesList.jsx'\r\nimport { SectionLabels } from './menuFirstSee/menuTopOptions/SectionLabels.jsx'\r\n\r\n\r\n//icons:\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        menuTitle: 'Menu',\r\n        currMenu: null,\r\n        inMenu: true,\r\n        isMenuOpen: false\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\r\n    }\r\n\r\n    goBack = () => { this.setState({ currMenu: null }) }\r\n\r\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\r\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\r\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\r\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\r\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\r\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\r\n    openLabels = () => { this.setState({ menuTitle: \"Labels\", currMenu: 'SectionLabels' }) }\r\n\r\n    render() {\r\n\r\n\r\n        const { currMenu, menuTitle, isMenuOpen } = this.state\r\n        const { board } = this.props\r\n        if (!board.activities) return null\r\n        return (\r\n            <section className={`menu flex col ${isMenuOpen ? 'open' : ''}`}>\r\n                <button className=\"menu-btn flex align-center\" onClick={this.toggleMenu}><MoreHorizIcon />Show Menu</button>\r\n                <div className=\"menu-top\">\r\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\r\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\r\n                    <button className=\"close-menu-btn\" onClick={() => {\r\n                        this.setState({ isMenuOpen: false })\r\n                    }}><CloseIcon /></button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\r\n\r\n                    <button className=\"menu-option top-option\" onClick={this.openAbout}>\r\n                        <span><InfoIcon /></span>\r\n                        <div className=\"about-all-desc\">\r\n                            <h4 className=\"about-this-board\">About This Board</h4>\r\n                            <span className=\"about-desc\">Add a description to your board</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openBgs}>\r\n                        <span>< WallpaperIcon /></span>\r\n                        <h4 className=\"option-title\">Change Background</h4>\r\n                    </button>\r\n\r\n                    {/* <button className=\"menu-option\" onClick={this.openSearch}>\r\n                        <span><SearchIcon /></span>\r\n                        <h4 className=\"option-title\">Search Cards</h4>\r\n                    </button> */}\r\n\r\n                    {/* <button className=\"menu-option\" onClick={this.openStickers}>\r\n                        <span><LabelImportantIcon /></span>\r\n                        <h4 className=\"option-title\">Stickers</h4>\r\n                    </button> */}\r\n\r\n                    <button className=\"menu-option\" onClick={this.openLabels}>\r\n                        <span><LabelOutlinedIcon /></span>\r\n                        <h4 className=\"option-title\">Labels</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openActivity}>\r\n                        <span><PlaylistAddCheckIcon /></span>\r\n                        <h4 className=\"option-title\">Activity</h4>\r\n                    </button>\r\n                    <MenuActivitiesList board={board} />\r\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\r\n                </section>}\r\n                <DynamicCmp currMenu={currMenu} board={board} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction DynamicCmp({ currMenu, board }) {\r\n    switch (currMenu) {\r\n        case 'SectionAbout':\r\n            return <SectionAbout board={board} />\r\n        case 'SectionBackground':\r\n            return <SectionBackground />\r\n        case 'SectionSearch':\r\n            return <SectionSearch board={board} />\r\n        case 'SectionStickers':\r\n            return <SectionStickers />\r\n        case 'SectionLabels':\r\n            return <SectionLabels board={board} />\r\n        case 'MenuActivity':\r\n            return <MenuActivity board={board} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupList.jsx",["363"],"import React, { Component } from 'react'\r\nimport { GroupPreview } from \"./GroupPreview\";\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\n\r\n\r\nexport class GroupList extends Component {\r\n\r\n    state = {\r\n        // isModalOpen:false,\r\n        group: {\r\n            title: '',\r\n            style: {},\r\n            cards: []\r\n        },\r\n        isAdding: false,\r\n        isEdit:{\r\n            isOpen:false,\r\n            id:''\r\n        }\r\n    } \r\n\r\n\r\n    handleChange = (ev) => {\r\n        const { group } = this.state\r\n        const { value } = ev.target\r\n        this.setState({\r\n            group: { ...group, title: value }\r\n        })\r\n    }\r\n\r\n    onAddGroup = () => {\r\n        const { group } = this.state\r\n        const { board } = this.props\r\n        this.props.addGroup(board, group)\r\n        this.setState({ group: { title: '', style: {}, cards: [] } })\r\n\r\n    }\r\n\r\n    handleEnter = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault()\r\n            this.onAddGroup()\r\n        }\r\n    }\r\n\r\n    discardChanges = (ev) => {\r\n        this.setState({ group: { title: '', style: {}, cards: [] } })\r\n        ev.currentTarget.blur()\r\n    }\r\n\r\n    handleDrag = (result) => {\r\n        const { board } = this.props\r\n        const { source, destination } = result\r\n\r\n        if (result.type === 'GROUP') {\r\n            const groupId = result.draggableId\r\n            this.props.updateGroupLoaction(board, groupId, source, destination)\r\n        } else {\r\n            const cardId = result.draggableId\r\n            this.props.updateCardLocation(board, source, destination)\r\n\r\n        }\r\n\r\n    }\r\n    enterEditMode = (ev,id) => {\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n        this.setState({\r\n            isEdit:{isOpen:true,id:id} \r\n        })\r\n    }\r\n    \r\n    exitEditMode = (ev) => {\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n        this.setState({\r\n            isEdit:{isOpen:false,id:''}\r\n         })\r\n    }\r\n\r\n    render() {\r\n        const { groups } = this.props.board\r\n        const { isEdit } = this.state\r\n        return (\r\n            // <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n            <DragDropContext onDragEnd={this.handleDrag}>\r\n                <Droppable droppableId=\"board\" type=\"GROUP\" direction=\"horizontal\">\r\n                    {(provided ) => (\r\n\r\n                            <div ref={provided.innerRef} {...provided.droppableProps} className=\"group-container\" onClick={this.exitEditMode}  >\r\n                                {groups && groups.map((group, idx) => {\r\n                                    return (\r\n                                        <GroupPreview  exitEditMode={this.exitEditMode} enterEditMode={this.enterEditMode} isEdit={isEdit} key={group.id} idx={idx} listId={group.id} group={group} />\r\n                                    )\r\n                                })}\r\n                                {provided.placeholder }\r\n\r\n                                <div className=\"hidden-actions-form-container add-group\" >\r\n                                    <form action=\"\" className=\"hidden-actions-form\">\r\n                                        <input onKeyDown={this.handleEnter} className=\"add-list-input\" type=\"text\" placeholder=\"+ Add another list\" value={this.state.group.title} onChange={this.handleChange} />\r\n                                    </form>\r\n                                    <div className=\"hidden-actions flex list\">\r\n                                        <button onClick={this.onAddGroup}>Add List</button>\r\n                                        <button onClick={this.discardChanges} className=\"icon\">\r\n                                            <CloseSharpIcon />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Card.jsx",["364"],"import { connect } from \"react-redux\";\r\nimport { cardService } from \"../../services/cardService.js\";\r\nimport { updateBoardCard } from \"../../store/actions/boardAction\";\r\nimport { withRouter } from \"react-router\";\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport { Component } from \"react\";\r\nimport { CardContent } from \"./CardContent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { CardMenu } from \"./CardMenu.jsx\";\r\nimport { DynamicCardActionModal } from \"./DynamicCardActionModal.jsx\";\r\nimport {AddDueDateModal} from \"./AddDueDateModal.jsx\";\r\n// import { CardAction } from \"./CardAction\";\r\n\r\nclass _Card extends Component {\r\n\r\n    state = {\r\n        card: null,\r\n        currModal: {},\r\n        title: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.cardId !== this.props.match.params.cardId) this.loadCard()\r\n        if (prevProps.board._id !== this.props.board?._id) this.loadCard()\r\n    }\r\n\r\n    loadCard = () => {\r\n        const { board } = this.props\r\n        const { cardId } = this.props.match.params\r\n        if (cardId && board.groups) {\r\n            const card = cardService.getCardById(board, cardId)\r\n            this.setState({ card, title: card.title })\r\n        } else this.setState({ card: null })\r\n    }\r\n\r\n    saveCardChanges = async (card, txt) => {\r\n        var { board, loggedUser } = this.props\r\n        if (txt) {\r\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\r\n            board = {...board, activities: [activity, ...board.activities]}\r\n        } \r\n        await this.props.updateBoardCard(board, card)\r\n        this.loadCard()\r\n    }\r\n\r\n    onChangetitle = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({title: value })\r\n    }\r\n\r\n    onSaveTitle = (ev) => {\r\n        if (ev.key && ev.key !== 'Enter') return\r\n        const {card, title} = this.state\r\n        this.saveCardChanges({...card, title} ,'Edited card title')\r\n        ev.currentTarget?.blur()\r\n    }\r\n\r\n    closeModal = () =>{\r\n        const {currModal} = this.state\r\n        if (currModal?.name) this.setState({currModal: null})\r\n    }\r\n\r\n    setCurrModal = (currModal) => {\r\n        this.setState({currModal})\r\n    }\r\n\r\n    render() {\r\n        const { board, loggedUser } = this.props\r\n        const { card, currModal, title } = this.state\r\n        if (!card) return null\r\n        return (\r\n            <Link to={`/board/${board._id}`}>\r\n                <section onClick={this.closeModal} className={\"card-modal-screen flex justify-center\"}>\r\n                    <div onClick={(ev) => { ev.preventDefault() }} className=\"card-modal grid\">\r\n                        <div className=\"header flex\">\r\n                            <WebIcon />\r\n                            <input\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={this.onChangetitle}\r\n                                onBlur={this.onSaveTitle}\r\n                                onKeyDown={this.onSaveTitle}\r\n                            />\r\n                            <Link to={`/board/${board._id}`}><CloseSharpIcon /></Link>\r\n                        </div>\r\n                        <CardContent setCurrModal={this.setCurrModal} closeModal={this.closeModal} user={loggedUser} board={board} card={card} save={this.saveCardChanges} />\r\n                        <CardMenu setCurrModal={this.setCurrModal} closeModal={this.closeModal}/>\r\n                        <div  onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}}>\r\n                        <DynamicCardActionModal closeModal={this.closeModal} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.boardModule.loggedUser, \r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard\r\n}\r\n\r\nexport const Card = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Card))\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\MyAvatar.jsx",["365"],"import { makeStyles } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }))\r\n\r\nexport function MyAvatar({user}){\r\n     const classes = useStyles()\r\n\r\n    if( user.imgUrl) return  <Avatar alt={user.fullname} className={classes.small} src={user.imgUrl} />\r\n    return <Avatar className={classes[user.color], classes.small}>{user.fullname.substring(0, 1)}</Avatar>\r\n\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\UserCards.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\UserActivities.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\httpService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\userService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx",["366"],"import { Component } from 'react'\r\n\r\nimport stick1 from '../../../../assets/stickers/sticker-01.png'\r\nimport stick2 from '../../../../assets/stickers/sticker-02.png'\r\nimport stick3 from '../../../../assets/stickers/sticker-03.png'\r\nimport stick4 from '../../../../assets/stickers/sticker-04.png'\r\nimport stick5 from '../../../../assets/stickers/sticker-05.png'\r\nimport stick6 from '../../../../assets/stickers/sticker-06.png'\r\nimport stick7 from '../../../../assets/stickers/sticker-07.png'\r\nimport stick8 from '../../../../assets/stickers/sticker-08.png'\r\nimport stick9 from '../../../../assets/stickers/sticker-09.png'\r\nimport stick10 from '../../../../assets/stickers/sticker-10.png'\r\nimport stick11 from '../../../../assets/stickers/sticker-11.png'\r\nimport stick12 from '../../../../assets/stickers/sticker-12.png'\r\n\r\n\r\nexport class SectionStickers extends Component {\r\n\r\n    state = {\r\n        stickers: [\r\n            { src: stick1, _id: 'stick101' },\r\n            { src: stick2, _id: 'stick102' },\r\n            { src: stick3, _id: 'stick103' },\r\n            { src: stick4, _id: 'stick104' },\r\n            { src: stick5, _id: 'stick105' },\r\n            { src: stick6, _id: 'stick106' },\r\n            { src: stick7, _id: 'stick107' },\r\n            { src: stick8, _id: 'stick108' },\r\n            { src: stick9, _id: 'stick109' },\r\n            { src: stick10, _id: 'stick1011' },\r\n            { src: stick11, _id: 'stick1011' },\r\n            { src: stick12, _id: 'stick1012' }\r\n\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        const { stickers } = this.state\r\n\r\n        console.log('stickers:', stickers);\r\n        if (!stickers || !stickers.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"stickers-section\" style={{ display: \"grid\" }}>\r\n                <h1>Stickers!</h1>\r\n                <div className=\"stickers-area\">\r\n                    {stickers.map((sticker, idx) => {\r\n\r\n                        return <div className=\"sticker-img\" key={idx}>\r\n                            <img src={sticker.src} />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx",["367","368","369","370"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\r\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\r\n\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n//imgs:\r\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\r\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\r\n\r\nexport class SectionBackground extends Component {\r\n\r\n    state = {\r\n        currType: null,\r\n        menuTitle: 'Change Background',\r\n        photosSrc,\r\n        colorsSrc\r\n    }\r\n\r\n    goBackBg = () => { this.setState({ currType: null }) }\r\n\r\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\r\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\r\n\r\n    render() {\r\n        const { currType, photosSrc, colorsSrc } = this.state\r\n        return (\r\n            <section className=\"background-section\">\r\n                {currType === null && <section className=\"flex photos-colors\">\r\n                    <div className=\"photos\">\r\n                        <button onClick={this.choosePhotos}>\r\n                            <img src={photosSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Photos</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"colors\">\r\n                        <button onClick={this.chooseColors}>\r\n                            <img src={colorsSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Colors</span>\r\n                        </button>\r\n                    </div>\r\n                </section>}\r\n                {currType === null && <hr className=\"hr-menu\" />}\r\n                <DynamicCmpBg currType={currType} goBack={this.goBackBg} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction DynamicCmpBg({ currType, goBack }) {\r\n    switch (currType) {\r\n        case 'PhotosArea':\r\n            return <PhotosArea goBack={goBack} />\r\n        case 'ColorsArea':\r\n            return <ColorsArea goBack={goBack} />\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionLabels.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardMenu.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddDueDateModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\DynamicCardActionModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentPreview.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\menuAction.js",["371"],"import { boardService } from '../../services/boardService.js'\r\nimport { menuService } from '../../services/menuService.js'\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_PHOTOS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\nexport function saveBoardDesc(board, description) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = await boardService.updateBoardDesc(board, description)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        }\r\n        catch (err) {\r\n            console.log('boardActions: err:', err);\r\n        }\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupPreview.jsx",["372","373"],"import React, { Component } from 'react'\r\nimport { CardList } from \"./CardList\";\r\nimport { connect } from 'react-redux'\r\nimport { loadCards } from '../store/actions/cardActions'\r\nimport { addCard, openLabel, editGroupTitle ,copyList,onArchiveList } from '../store/actions/boardAction'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { GroupMenu } from './GroupMenu';\r\nimport { AddCardInput } from './AddCardInput';\r\n\r\n\r\nexport class _GroupPreview extends Component {\r\n\r\n    state = {\r\n        groupTitle: '',\r\n        card: {\r\n            createdBy: {},\r\n            title: '',\r\n            description: '',\r\n            dueDate: '',\r\n            style: {},\r\n            comments: [],\r\n            checklists: [],\r\n            attachments: [],\r\n            members: [],\r\n            labels: []\r\n        },\r\n        isAdding: false,\r\n        isChangeTitle: false,\r\n        isMenuOpen: false,\r\n        isAddingToTop:false,\r\n        topTitle:''\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { group } = this.props\r\n        this.props.loadCards(group)\r\n        this.setState({ groupTitle: group.title })\r\n    }\r\n\r\n    openTitleBtn=()=>{\r\n        this.setState({isChangeTitle:true})\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { card} = this.state\r\n        const { value } = ev.target\r\n        this.setState({\r\n            card: { ...card, title: value }\r\n        })\r\n    }\r\n    onAddCard = async (ev) => {\r\n        const { card,isAddingToTop } = this.state\r\n        const { board, group } = this.props\r\n        this.props.addCard(board, group, card,isAddingToTop)\r\n        this.setState({\r\n            card: { \r\n                createdBy: {},\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                createdAt: '',\r\n                dueDate: '',\r\n                style: {},\r\n                comments: [],\r\n                checklists: [],\r\n                attachments: [],\r\n                members: [],\r\n                labels: []\r\n            },\r\n            isAdding: false,\r\n            isAddingToTop:false\r\n        })\r\n    }\r\n\r\n\r\n    handleEditGroupTitle = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ groupTitle: value })\r\n    }\r\n\r\n    discardChanges = (ev) => {\r\n        this.setState({\r\n            card: { ...this.state.card, title: '' }\r\n        })\r\n        ev.currentTarget.blur()\r\n    }\r\n\r\n    editGroupTitle = (ev) => {\r\n        if (ev.key && ev.key !== 'Enter') return \r\n        ev.preventDefault()\r\n        const { board, group } = this.props\r\n        const { groupTitle } = this.state\r\n        this.props.editGroupTitle(board, group, groupTitle)\r\n        this.setState({ isChangeTitle: false })\r\n        ev.currentTarget.blur()        \r\n    }\r\n    handleEnter = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault()\r\n            ev.currentTarget?.blur()\r\n            this.onAddCard()\r\n        }\r\n    }\r\n    toggleMenu = () => {\r\n        const { isMenuOpen } = this.state\r\n        this.setState({ isMenuOpen: !isMenuOpen })\r\n        \r\n    }\r\n    openInput=(ev)=>{\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        this.setState({isAddingToTop:true,isMenuOpen:false})\r\n    }\r\n    \r\n    copyList=()=>{\r\n        const { group,board } = this.props\r\n        this.props.copyList(board,group)\r\n        this.setState({isMenuOpen:false})\r\n    }\r\n    \r\n    closeMenu=()=>{\r\n        const { isMenuOpen } = this.state\r\n        if(isMenuOpen) this.setState({isMenuOpen:false})\r\n    }\r\n\r\n    onArchive=()=>{\r\n        const {board,group} = this.props\r\n        this.props.onArchiveList(board,group)\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { listId, idx, group, board, isLabelOpen, openLabel, updateCardsLocation,isEdit,enterEditMode,exitEditMode } = this.props\r\n        const { cards } = group\r\n        const { groupTitle, isChangeTitle, isMenuOpen,isAddingToTop } = this.state\r\n        const { title } = this.state.card\r\n\r\n        return (\r\n            <Draggable draggableId={listId} index={idx} >\r\n                {(provided,snapshot) => (\r\n\r\n\r\n                    <div className={(snapshot.isDragging)?'group-preview dragging':'group-preview'} onClick={this.closeMenu} ref={provided.innerRef} {...provided.draggableProps} >\r\n\r\n                        <div {...provided.dragHandleProps} listId={listId}>\r\n                            <span className=\"group-menu-btn\" onClick={this.toggleMenu} >...</span>\r\n\r\n                            {isMenuOpen && <GroupMenu onArchive={this.onArchive}  openInput={this.openInput} copyList={this.copyList} />}\r\n\r\n\r\n                            <div className={`hidden-actions-form-container`}>\r\n                                <form className={`hidden-actions-form`}>\r\n                                    <input className=\"group-title-input\" onClick={this.openTitleBtn} onKeyUp={this.editGroupTitle} onChange={this.handleEditGroupTitle} type=\"text\" value={groupTitle} autoComplete=\"off\" />\r\n                                </form>\r\n                                {isChangeTitle && <div className=\"hidden-actions flex\" style={{ marginLeft: '0' }}>\r\n                                    <button type=\"button\" onClick={this.editGroupTitle}  > save </button>\r\n                                    <button onClick={this.discardChanges} className=\"icon\"><CloseSharpIcon /></button>\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        {isAddingToTop && <AddCardInput isAddingToTop={isAddingToTop} title={title} onShowAddBtn={this.onShowAddBtn} handleEnter={this.handleEnter} onAddCard={this.onAddCard} discardChanges={this.discardChanges} handleChange={this.handleChange} />}\r\n                        <CardList isDragging={snapshot.isDragging}  exitEditMode={exitEditMode} enterEditMode={enterEditMode} isEdit={isEdit} listId={listId} cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group} />\r\n                        {!isAddingToTop&&<AddCardInput isAddingToTop={isAddingToTop} title={title} onShowAddBtn={this.onShowAddBtn} handleEnter={this.handleEnter} onAddCard={this.onAddCard} discardChanges={this.discardChanges} handleChange={this.handleChange} />}\r\n\r\n                    \r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        cards: state.cardModule.cards,\r\n        board: state.boardModule.board,\r\n        isLabelOpen: state.boardModule.isLabelOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCards,\r\n    addCard,\r\n    openLabel,\r\n    copyList,\r\n    editGroupTitle,\r\n    onArchiveList\r\n}\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview)\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx",["374"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import {menuService} from '../'\r\n//icons:\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n//functions:\r\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\r\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\r\n\r\n//imgs:\r\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\r\n\r\nclass _PhotosArea extends Component {\r\n\r\n    state = {\r\n        photoSearch: '',\r\n        filter: '',\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.state.bgImgs[0]);\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.setFilter(this.state.filterBy)\r\n        })\r\n    }\r\n\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n\r\n    selectImg = (imgSrc) => { this.props.setBackground(this.props.board, { backgroundImage: `url(${imgSrc})` }) }\r\n\r\n    get imgs() {\r\n        const { bgImgs, filter } = this.state\r\n        const regex = new RegExp(filter, 'i')\r\n        return bgImgs.filter(img => regex.test(img.title))\r\n    }\r\n\r\n    render() {\r\n        const imgs = this.imgs\r\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"photo-type\">\r\n                <div className=\"flex search-photo\">\r\n                    <SearchIcon /><input type=\"text\"\r\n                        name=\"filter\"\r\n                        onChange={({ target }) => this.setState({ filter: target.value })}\r\n                        placeholder=\"Photos\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"photos-area\">\r\n                    {this.imgs.map((img, idx) => {\r\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                            onClick={() => { this.selectImg(img.src) }}>\r\n                            <img src={img.src} />\r\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                <span className=\"go-back\" onClick={this.props.goBack}>Go back to backgrounds</span>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        filterBy: state.menuModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBackground,\r\n    setFilter\r\n}\r\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardContent.jsx",["375"],"import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardAttachmentList } from \"./CardAttachmentList\";\r\nimport { CardChecklistList } from \"./CardChecklistList\";\r\nimport { CardCommentList } from \"./CardCommentList\";\r\nimport { CardDescription } from \"./CardDescription\";\r\nimport { LabelList } from \"./LabelList\";\r\nimport { MemberList } from \"./MemberList\";\r\n\r\nclass _CardContent extends Component {\r\n\r\n    render() { \r\n        const {card, save, user, board} = this.props\r\n        return <div onClick={this.props.closeModal} className=\"card-content\">\r\n            <div className=\"flex wrap\">\r\n            <MemberList setCurrModal={this.props.setCurrModal} card={card}/>\r\n            <LabelList setCurrModal={this.props.setCurrModal} card={card}/>\r\n            </div>\r\n            <CardDescription card={card} user={user} save={save}/>\r\n            <CardChecklistList card={card} user={user} save={save}/>\r\n            <CardAttachmentList setCurrModal={this.props.setCurrModal} card={card}/>\r\n            <CardCommentList card={card} user={user} save={save}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardContent = connect(mapStateToProps, mapDispatchToProps)(_CardContent)\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\menuService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddChecklistModal.jsx",["376"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { utilService } from \"../../services/utilService\";\r\n\r\n\r\nexport class AddChecklistModal extends Component{\r\n    state = {\r\n        title: 'Checklist'\r\n    }\r\n\r\n    onAddChecklist = (ev) => {\r\n        if (ev.key && ev.key !== \"Enter\") return \r\n        const { card, save, closeModal } = this.props\r\n        const newChecklist = {\r\n            id: utilService.makeId(),\r\n            title: this.state.title,\r\n            createdAt: Date.now(),\r\n            createdBy: {\r\n                _id: \"u101\",\r\n                fullname: \"Tal Tarablus\",\r\n                imgUrl: \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n            },\r\n            todos: []\r\n        }\r\n        const newCard = {...card, checklists:[...card.checklists, newChecklist]}\r\n        save(newCard, `added checklist ${newChecklist.title} to card`)\r\n        closeModal()\r\n    }\r\n\r\n    handleFocus = (ev) => {\r\n        ev.target.select()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { card, closeModal, style } = this.props\r\n        return (\r\n            <div className=\"checklist-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Add Checklist\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>Title</small>\r\n                <input \r\n                autoComplete=\"off\" \r\n                onFocus={this.handleFocus} \r\n                autoFocus \r\n                type=\"text\" name=\"title\" \r\n                onChange={({ target }) => this.setState({ title: target.value })} value={this.state.title}\r\n                onKeyDown={this.onAddChecklist}\r\n                />\r\n                <button onClick={this.onAddChecklist}>Add</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\MemberListModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddAttachmentModal.jsx",["377","378"],"import React, { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { utilService } from \"../../services/utilService\";\r\n\r\n\r\nexport class AddAttachmentModal extends Component {\r\n    state = {\r\n        url: '',\r\n        title: ''\r\n    }\r\n\r\n    onAddAttachment = (ev) => {\r\n        console.log(ev);\r\n        if (!ev.key || ev.key && ev.key === \"Enter\") {\r\n\r\n            const { title, url } = this.state\r\n            const newAttachment = {\r\n                id: utilService.makeId(),\r\n                title: title,\r\n                url: url\r\n            }\r\n            const card = { ...this.props.card, attachments: [...this.props.card.attachments, newAttachment] }\r\n            this.props.save(card, `added attachment to ${newAttachment.title} to card`)\r\n            this.props.closeModal()\r\n        }\r\n    }\r\n\r\n    handleInput = (ev) => {\r\n        const { name, value } = ev.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { closeModal, style } = this.props\r\n        return (\r\n            <div fer className=\"attachments-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Attach From...\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>Attach a link</small>\r\n                <input autoFocus onChange={this.handleInput} onKeyUp={this.onAddAttachment} autoComplete=\"off\" placeholder=\"Paste any link here...\" type=\"text\" name=\"url\" />\r\n                {this.state.url && <small>Link name (optional)</small>}\r\n                {this.state.url && <input ref=\"linkNameRef\" autoComplete=\"off\" onKeyUp={this.onAddAttachment} onChange={this.handleInput} type=\"text\" name=\"title\" />}\r\n                <button onClick={this.onAddAttachment}>Attach</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelListModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\MoveCardModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CopyCardModal.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\AddCoverModal.jsx",["379"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport img1 from '../../assets/bgImgs/image-01.jpg'\r\nimport img2 from '../../assets/bgImgs/image-02.jpg'\r\nimport img3 from '../../assets/bgImgs/image-03.jpg'\r\nimport img4 from '../../assets/bgImgs/image-04.jpg'\r\nimport img5 from '../../assets/bgImgs/image-05.jpg'\r\nimport img6 from '../../assets/bgImgs/image-06.jpg'\r\nimport img7 from '../../assets/bgImgs/image-07.jpg'\r\nimport img8 from '../../assets/bgImgs/image-08.jpg'\r\nimport img9 from '../../assets/bgImgs/image-09.jpg'\r\nimport img10 from '../../assets/bgImgs/image-10.jpg'\r\nimport img11 from '../../assets/bgImgs/image-11.jpg'\r\nimport img12 from '../../assets/bgImgs/image-12.jpg'\r\nimport img13 from '../../assets/bgImgs/image-15.jpg'\r\nimport img14 from '../../assets/bgImgs/image-16.jpg'\r\nimport img15 from '../../assets/bgImgs/image-17.jpg'\r\nimport img16 from '../../assets/bgImgs/image-18.jpg'\r\n\r\nexport class AddCoverModal extends Component {\r\n\r\n    state = {\r\n        filter: ''\r\n    }\r\n\r\n    setColor = (color) => {\r\n        const card = JSON.parse(JSON.stringify(this.props.card))\r\n        const NewCard = { ...card, style: { backgroundColor: color } }\r\n        this.props.save(NewCard, `Set background color`)\r\n        this.props.closeModal()\r\n\r\n    }\r\n\r\n    setImg = (url) => {\r\n        const card = { ...this.props.card, style: { backgroundImage: `url(${url})` } }\r\n        this.props.save(card, `Set background image`)\r\n        this.props.closeModal()\r\n\r\n    }\r\n\r\n    render() {\r\n        const colors = ['lightgray', '#adad85', 'coral', '#ff4d4d', 'crimson', 'yellowgreen', 'teal', '#3385ff',]\r\n        const imgs = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11, img12, img13, img14, img15, img16]\r\n        const { closeModal, style } = this.props\r\n        return (\r\n            <div className=\"cover-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Cover\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>COLORS</small>\r\n                <div className=\"flex wrap space-bt\">\r\n                    {colors.map(color => <div onClick={() => this.setColor(color)} key={Math.random()} className=\"color-box\" style={{ backgroundColor: color }}></div>)}\r\n                </div>\r\n                <small>UNSPLASH</small>\r\n                <div className=\"flex wrap space-bt\">\r\n                    {imgs.map(src => <img onClick={() => this.setImg(src)} key={Math.random()} className=\"color-box\" src={src} />)}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\cardActions.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardList.jsx",["380","381","382","383"],"import React, { Component } from 'react'\r\nimport { CardPreview } from \"./CardPreview\";\r\n// ////React DND///\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\n\r\n\r\nexport class CardList extends Component {\r\n    state = {\r\n        cards: []\r\n    }\r\n    componentDidMount() {\r\n        const { cards } = this.props\r\n        this.setState({ cards })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            const { cards } = this.props\r\n            this.setState({ cards })\r\n        }\r\n    }\r\n\r\n\r\n    handleOnDragEnd = (result) => {\r\n        if (!result.destination) return;\r\n        const { board, currGroup } = this.props\r\n        // const { cards } = this.props\r\n        const { cards } = this.state\r\n        const items = Array.from(cards)\r\n        const [reorderedItem] = items.splice(result.source.index, 1)\r\n        items.splice(result.destination.index, 0, reorderedItem)\r\n        this.setState({ cards: items })\r\n        this.props.updateCardsLocation(board, currGroup, items)\r\n    }\r\n\r\n    render() {\r\n        const { board,cards, listId, isLabelOpen, openLabel, currGroup,isEdit,enterEditMode,exitEditMode } = this.props\r\n        return (\r\n            <Droppable droppableId={listId} type=\"CARD\">\r\n                {(droppableProvided) => (\r\n\r\n                    <div className={'card-list'} ref={droppableProvided.innerRef} style={{overflow:'none'}} >\r\n                        {cards.map((card, idx) => {\r\n                            if (card) {\r\n\r\n                                return (\r\n\r\n                                    <CardPreview exitEditMode={exitEditMode} enterEditMode={enterEditMode} isEdit={isEdit} currGroup={currGroup} key={card.id} listId={listId} board={board} idx={idx} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {droppableProvided.placeholder}\r\n          \r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        )\r\n    }\r\n\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupMenu.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\AddCardInput.jsx",["384"],"import CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport React, { Component } from 'react'\r\n\r\nexport class AddCardInput extends Component {\r\n\r\n    render() {\r\n\r\n        const {title,onShowAddBtn,handleEnter,onAddCard,discardChanges,handleChange,isAddingToTop} =this.props\r\n        \r\n        return (\r\n\r\n            <div className=\"hidden-actions-form-container\">\r\n                <form action=\"\" className=\"hidden-actions-form\" >\r\n                    <input  onClick={onShowAddBtn} onKeyDown={handleEnter}  value ={title}  type=\"text\" placeholder=\"+ Add another card \" onChange={handleChange} />\r\n                </form> \r\n                {/* className=\"add-card-input-bottom\" */}\r\n\r\n                <div className=\"hidden-actions flex\" style={{margin:'0'}}>\r\n                    <button  onClick={onAddCard}> Add Card</button>\r\n                    <button onClick={discardChanges} className=\"icon\">\r\n                        <CloseSharpIcon />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentList.jsx",["385"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\"\r\nimport { CardCommentPreview } from \"./CardCommentPreview\"\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { cardService } from \"../../services/cardService\";\r\n\r\nexport class CardCommentList extends Component {\r\n\r\n    state = {\r\n        newCommentTxt: '',\r\n        isShown: false\r\n\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n\r\n    onInput = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddComment = (ev) => {\r\n        if (ev?.key && ev.key === \"Enter\") return\r\n        ev.preventDefault()\r\n        ev.currentTarget.blur()\r\n        const { card, user } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = cardService.getCommentToAdd(txt, user)\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n        this.props.save(newCard)\r\n        this.setState({ newCommentTxt: '' })\r\n    }\r\n\r\n    get data() {\r\n        const { comments, activities } = this.props.card\r\n        if (!this.state.isShown) return comments\r\n        else {\r\n            const data = [...comments, ...activities]\r\n            return data.sort((a, b) => b.createdAt - a.createdAt)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isShown } = this.state\r\n        return <div className=\"card-comments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                <div className=\"flex align-start\">\r\n                    <FormatListBulletedIcon />\r\n                    <h3>Activity</h3>\r\n                </div>\r\n                <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>\r\n            </header>\r\n            <div className={`hidden-actions-form-container`}>\r\n                <form onSubmit={(ev => ev.preventDefault())} className={`hidden-actions-form`}>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        onChange={this.onInput}\r\n                        value={this.state.newCommentTxt}\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Write a comment..\"\r\n                        name=\"newCommentTxt\"\r\n                    />\r\n                </form>\r\n                <div className=\"hidden-actions flex\">\r\n                    <button type=\"button\"\r\n                        className={this.state.newCommentTxt ? '' : 'disabled'}\r\n                        onClick={this.onAddComment}\r\n                    >\r\n                        Save\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n            <CardCommentPreview data={this.data} />\r\n        </div>\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardDescription.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardAttachmentList.jsx",["386","387"],"import React, { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport CallMadeOutlinedIcon from '@material-ui/icons/CallMadeOutlined';\r\nimport { CallReceived } from \"@material-ui/icons\";\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const { card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = { txt, createdAt: Date.now(), createdBy: {}, id: utilService.makeId() }\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    openModal = (ev) => {\r\n        const top = ev.target.offsetTop + 40 + ev.target.offsetParent.offsetTop\r\n        this.props.setCurrModal({name: 'attachment', style: {left: 'calc(50% - 350px)', top}})\r\n    }\r\n\r\n\r\n    render() {\r\n        const { attachments } = this.props.card\r\n        if (!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <header className=\"flex\">\r\n                <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />\r\n                <h3>Attachments</h3>\r\n            </header>\r\n            {attachments.map(att =>\r\n                <a key={att.id} target=\"_blank\" href={att.url}>\r\n                    <div className=\"attachment flex align-center\">\r\n                        <div>LINK</div>\r\n                        <div className=\"flex align-start\">\r\n                            <h4>{att.title || att.url}</h4>\r\n                            <CallMadeOutlinedIcon />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )}\r\n            <button onClick={this.openModal}>Add an attachment</button>\r\n        </div>\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklistList.jsx",["388","389"],"import { DragDropContext, Droppable } from \"react-beautiful-dnd\"\r\nimport { connect } from \"react-redux\"\r\nimport { cardService } from \"../../services/cardService\"\r\nimport { handleTodoDrag } from \"../../store/actions/boardAction\"\r\nimport { CardChecklist } from \"./CardChecklist\"\r\n\r\nexport function CardChecklistList(props) {\r\n    const { card, board } = props\r\n\r\n    async function updateChecklist(checklist, todo) {\r\n        let newCard = await cardService.updateChecklistTodo(card, checklist, todo)\r\n        props.save(newCard, `Edited ${checklist.title} checklist`)\r\n    }\r\n\r\n    async function onRemoveChecklist(checklist) {\r\n        let newCard = await cardService.removeChecklist(card, checklist)\r\n        props.save(newCard, `removed ${checklist.title} checklist`)\r\n    }\r\n\r\n    function handleDrag(res) {\r\n            const newCard =  cardService.handleTodoDrag(board, card, res) \r\n            props.save(newCard,null)\r\n        \r\n    }\r\n\r\n    const { checklists } = card\r\n    return (\r\n\r\n        <DragDropContext onDragEnd={handleDrag}>\r\n            <Droppable droppableId=\"checklistList\" type=\"cheklist\" direction=\"vertical\">\r\n                {provided => (\r\n\r\n                    <div ref={provided.innerRef} {...provided.droppableProps} className=\"\">\r\n                        {checklists.map((checklist, idx) => <CardChecklist key={checklist.id} removeChecklist={() => onRemoveChecklist(checklist)} saveTodo={updateChecklist} checklist={checklist} idx={idx} checklistId={checklist.id} />)}\r\n                        {provided.placeholder}\r\n\r\n\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\MemberList.jsx",["390","391"],"import React, { Component } from \"react\";\r\nimport { MyAvatar } from \"../MyAvatar\";\r\nimport { MemberListModal } from \"./MemberListModal\";\r\n\r\n\r\nexport function MemberList(props) {\r\n    const containerRef = React.createRef()\r\n\r\n    function openModal(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const div = containerRef.current\r\n        const top = div.offsetTop + 50 + div.offsetParent.offsetTop\r\n        const left = ev.target.offsetLeft + ev.target.offsetParent.offsetLeft\r\n        props.setCurrModal({ name: 'members', style: { top , left} })\r\n    }\r\n    const { card } = props\r\n\r\n    return (\r\n        <div className=\"card-members\">\r\n            <h5>MEMBERS</h5>\r\n            <div ref={containerRef} className=\"card-members flex\">\r\n                {card.members.map(user => <div onClick={openModal}><MyAvatar key={Math.random()} user={user} /></div>)}\r\n                <div onClick={openModal} className=\"add-user-button\">\r\n                    <MyAvatar user={{ fullname: '+' }} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\LabelList.jsx",["392"],"import React, { Component } from \"react\";\r\n\r\nexport function LabelList(props) {\r\n\r\n    const containerRef = React.createRef()\r\n\r\n    function openModal(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const div = containerRef.current\r\n        const top = div.offsetTop + 50 + div.offsetParent.offsetTop\r\n        const left = ev.target.offsetLeft + ev.target.offsetParent.offsetLeft\r\n        props.setCurrModal({ name: 'labels', style: { top, left } })\r\n    }\r\n\r\n    const { card } = props\r\n    return (\r\n        <div className=\"card-labels\">\r\n            <h5>LABELS</h5> \r\n            <div className=\"label-container flex\" ref={containerRef}>\r\n                {card.labels.map(label =>\r\n                    <div onClick={openModal} key={label.id} className={`label flex center`} style={{ backgroundColor: label.color }}>\r\n                        {label.title}\r\n                    </div>\r\n                )}\r\n                <div onClick={openModal} className=\"add-label flex center\">+</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPreview.jsx",["393","394","395"],"import React, { Component } from 'react'\r\nimport { cardService } from \"../services/cardService\";\r\nimport { connect } from 'react-redux'\r\nimport { updateBoardCard,copyList,onArchiveCard } from '../store/actions/boardAction'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { CardDetails } from './CardDetails';\r\nimport { CardEdit } from './CardEdit';\r\n\r\n\r\n\r\n\r\n\r\nclass _CardPreview extends Component {\r\n\r\n    state = {\r\n        isModalOpen: false,\r\n        // labels: [],\r\n        isEdit: false,\r\n        title: '',\r\n        card: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { card, board, isModalOpen } = this.props\r\n        const updatedCard = cardService.getCardById(board, card.id)\r\n        // const labels = cardService.getCardLabels(board, card.labels)\r\n        this.setState({\r\n            card: updatedCard,\r\n            title: card.title\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        const { card, board } = this.props\r\n        const updatedCard = cardService.getCardById(board, card.id)\r\n        if (prevProps !== this.props) {\r\n            this.setState({ card: updatedCard })\r\n\r\n        }\r\n    }\r\n\r\n    onOpenLabel = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.openLabel()\r\n    }\r\n\r\n    enterEditMode = () => {\r\n        const { isEdit } = this.state\r\n        this.setState({\r\n            isEdit: !isEdit\r\n        })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ title: value })\r\n    }\r\n\r\n    onSave = () => {\r\n        console.log('save');\r\n        const { card, board } = this.props\r\n        const { title } = this.state\r\n        card.title = title\r\n        console.log(card);\r\n        this.props.updateBoardCard(board, card)\r\n        this.setState({ isEdit: false })\r\n    }\r\n\r\n    copyList=()=>{\r\n        const { currGroup,board } = this.props\r\n        this.props.copyList(board,currGroup)\r\n    }\r\n\r\n    onArchiveCard=()=>{\r\n        const {board,currGroup} = this.props\r\n        const {card} = this.state\r\n        this.props.onArchiveCard(board,currGroup,card)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { board, idx, isLabelOpen, currGroup, enterEditMode, isEdit, exitEditMode,updateBoardCard,loggedUser } = this.props\r\n            \r\n        const { title, card, } = this.state\r\n        if (!this.state.card) return <h1> loading</h1>\r\n        const { labels } = this.state.card\r\n        return (\r\n            <React.Fragment>\r\n                <Draggable\r\n                    draggableId={card.id}\r\n                    index={idx}\r\n                >\r\n                    {(draggbleProvided,snapshot) => (\r\n                        <div ref={draggbleProvided.innerRef}\r\n                            {...draggbleProvided.draggableProps}\r\n                            {...draggbleProvided.dragHandleProps}>\r\n\r\n                            { <CardDetails isDragging={snapshot.isDragging} isEdit={isEdit.isOpen} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} enterEditMode={enterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\r\n                            {isEdit.isOpen && (isEdit.id === card.id) ? <CardEdit onArchiveCard={this.onArchiveCard} copyList={this.copyList}  loggedUser={loggedUser} updateBoardCard={updateBoardCard} exitEditMode={exitEditMode} onSave={this.onSave} currGroup={currGroup} isEdit={isEdit.isOpen} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} enterEditMode={enterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} /> : ''}\r\n                        </div>\r\n                    )}\r\n                </Draggable>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        cards: state.cardModule.cards,\r\n        board: state.boardModule.board,\r\n        loggedUser:state.boardModule.loggedUser,\r\n        isLabelOpen: state.boardModule.isLabelOpen\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard,\r\n    copyList,\r\n    onArchiveCard\r\n\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview)\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardChecklist.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardEdit.jsx",["396","397","398","399","400","401"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport { Archive } from '@material-ui/icons';\r\nimport { DynamicCardActionModal } from \"./card/DynamicCardActionModal\";\r\nimport {cardService} from '../services/cardService'\r\n\r\n\r\n\r\n\r\nexport class CardEdit extends Component {\r\n    state={\r\n        editPos:100,\r\n        isModalOpen:false,\r\n        currModal:{\r\n            name:'',\r\n            style:{\r\n                position:'absolute',\r\n                // top:'20px',\r\n                left:'257px',\r\n                'z-index':'20'\r\n            }\r\n    }\r\n}\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        const {currGroup,board} =this.props\r\n        const idx = board.groups.findIndex(group=>group.id===currGroup.id)\r\n            const pos = idx+1\r\n            const finalPos=266*pos        \r\n        this.setState({\r\n            // currModal:{...this.state.currModal, style:{...this.state.currModal.style,left:`${finalPos}px`}}\r\n        })\r\n        this.findCardPos()\r\n    }\r\n\r\n\r\n\r\n    findCardPos=()=>{\r\n        const {editPos}=this.state\r\n        const {currGroup,card}=this.props\r\n        const idx = currGroup.cards.findIndex( groupCard=>groupCard.id===card.id)\r\n        var pos= editPos*idx\r\n        // if(card.labels.length>0 || card.comments.length>0||card.description.length>0) pos+=120\r\n        if(idx===0){\r\n            this.setState({editPos:40})\r\n        }\r\n        else if(idx=== 1)this.setState({editPos:120})\r\n        else if(pos>=160)this.setState({editPos:160}) \r\n        else{\r\n            this.setState({editPos:pos})\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    edit=(ev)=>{\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n    }\r\n    \r\n    openModal=(currName)=>{\r\n        this.setState({isModalOpen:true,\r\n        currModal:{...this.state.currModal,name:currName}\r\n        })\r\n    }\r\n    closeModal=()=>{\r\n        this.setState({isModalOpen:false})\r\n    }\r\n\r\n    \r\n    saveCardChanges = async (card, txt) => {\r\n        var { board, loggedUser } = this.props\r\n        if (txt) {\r\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\r\n            board = {...board, activities: [activity, ...board.activities]}\r\n        }\r\n        await this.props.updateBoardCard(board, card)\r\n        this.loadCard()\r\n    }\r\n    \r\n    loadCard = () => {\r\n        const { board } = this.props\r\n        const { cardId } = this.props.card.id\r\n        if (cardId && board.groups) {\r\n            const card = cardService.getCardById(board, cardId)\r\n            this.setState({ card })\r\n        } else this.setState({ card: null })\r\n    }\r\n\r\n    render() {\r\n        const {editPos,currModal,isModalOpen}=this.state\r\n        const {copyList, labels, isEdit,onSave, currGroup, onOpenLabel, updateBoardCard, card, isLabelOpen, board, handleChange, title, enterEditMode,exitEditMode } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={this.edit} className={`${isEdit ? 'edit' : ''}`}  style={{top:`${editPos}px`}}>\r\n\r\n                    <div className=\"edit-container\">\r\n\r\n                        <div className={`card-preview ${isEdit ? 'edit' : ''} `}  >\r\n                            <div className=\"label-container\">\r\n                                {labels.map((label, idx) => {\r\n                                    return <div onClick={() => this.onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\r\n                                        {isLabelOpen && label.title}\r\n                                    </div>\r\n                                })\r\n                                }\r\n                            </div>\r\n                            <div className=\"edit-and-title\">\r\n                                <Link to={`/board/${board._id}/${card.id}`}>\r\n                                    <div>\r\n                                        <form action=\"\" onSubmit=\"return false\">\r\n\r\n                                            <input disabled={!isEdit} onChange={handleChange}\r\n                                                onClick={(ev) => {\r\n                                                    ev.preventDefault()\r\n                                                }}\r\n                                                type=\"text\" value={title} />\r\n                                        </form>\r\n                                    </div>\r\n                                </Link>\r\n                                <span className=\"edit-icon\" onClick={(ev) => {\r\n                                }} onClick={(ev)=>enterEditMode(ev,card.id)} >\r\n                                    <EditIcon />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"card-icons\">\r\n                                {card.description && <SubjectIcon />}\r\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                        { <div className={'edit-menu'}>\r\n                            <div className=\"edit-menu-btn\">  <PaymentIcon className=\"edit-menu-icons rotate\" /> <span>  Open Card </span></div>\r\n                            <div className=\"edit-menu-btn\" onClick={()=>this.openModal('labels')} >  <LabelOutlinedIcon className=\"edit-menu-icons\"  />  Edit labels </div>\r\n                            <div className=\"edit-menu-btn\" > <PersonOutlineIcon className=\"edit-menu-icons\"/> change members</div>\r\n                            <div className=\"edit-menu-btn\"> <ArrowRightAltIcon className=\"edit-menu-icons\"/> move  </div>\r\n                            <div className=\"edit-menu-btn\"  onClick={copyList} > <PaymentIcon className=\"edit-menu-icons rotate\"/> copy </div>\r\n                            <div className=\"edit-menu-btn\"> <AccessTimeIcon className=\"edit-menu-icons\"/> change due date </div>\r\n                            <div className=\"edit-menu-btn\"> <ArchiveOutlinedIcon className=\"edit-menu-icons\"/> archive </div>\r\n                        </div>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div className='card-save-btn'>\r\n                        <button   onClick={exitEditMode} style={{cursor:'pointer'}} >Save</button>\r\n                    </div>\r\n\r\n               {isModalOpen&& <div className=\"card-edit-modals\" >   \r\n                    <DynamicCardActionModal closeModal={this.closeModal} updateBoardCard={updateBoardCard} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\r\n                </div>\r\n                }\r\n\r\n\r\n\r\n                </div >\r\n            </React.Fragment >\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardDetails.jsx",["402","403","404","405"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {MyAvatar} from './MyAvatar'\r\n\r\nexport class CardDetails extends Component {\r\n  \r\n    state = {\r\n        isSmall: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { card } = this.props\r\n        if (card.comments.length === 0 && card.description.length === 0 && card.labels.length === 0 && card.attachments.length === 0 && card.members.length === 0) {\r\n            this.setState({ isSmall: true })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { card } = this.props\r\n        if (prevProps !== this.props) {\r\n            if (card.comments.length > 0 || card.description.length > 0 || card.labels.length > 0 || card.attachments.length>0||card.members.length>0) {\r\n                this.setState({ isSmall: false })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { labels, isEdit, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode, enterEditMode } = this.props\r\n        const { isSmall } = this.state\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Link to={`/board/${board._id}/${card.id}`}>\r\n                    <div className={`card-preview `} style={isSmall ? { padding: '4px 2px 0px 8px ' } : card.style}   >\r\n                        <div className=\"label-container\">\r\n                            {labels.map((label, idx) => {\r\n                                return <div onClick={(ev) => onOpenLabel(ev, card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\r\n                                    {isLabelOpen && label.title}\r\n                                </div>\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className={isSmall ? 'small-card' : `edit-and-title`} >\r\n                            <div>\r\n                                <form >\r\n\r\n                                    <p>{title}</p>\r\n                                </form>\r\n                            </div>\r\n                            <span className=\"edit-icon\" onClick={(ev) => enterEditMode(ev, card.id)} >\r\n                                <EditIcon />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"card-icons \">\r\n\r\n                            <div className=\"card-icons-section1\">\r\n\r\n                            {card.description && <SubjectIcon />}\r\n                            {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                            {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                            {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\r\n\r\n                            </div>\r\n                                \r\n                            {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member=> <MyAvatar user={member}/>)} </div>}\r\n                            \r\n                            {/* {(card.members.length>=2)?`card-avatars-container`: 'card-avatars-container-single'} */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Link>\r\n\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Todo.jsx",["406"],"import React, { Component } from \"react\"\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\n\r\n\r\nexport class Todo extends Component {\r\n    state = {\r\n        todo: {\r\n            title: '',\r\n            isDone: false\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { todo } = this.props\r\n        if (todo) this.setState({ todo })\r\n        this.refInput = React.createRef()\r\n    }\r\n\r\n    handelInput = (ev) => {\r\n        const { name, value} = ev.target\r\n        this.setState(prevState => ({ todo: { ...prevState.todo, [name]: value } }))\r\n    }\r\n\r\n    toggleIsDone = (ev) => {\r\n        ev.target.blur()\r\n        const { checked } = ev.target\r\n        const {todo} = this.state\r\n        todo.isDone = checked\r\n        console.log(todo);\r\n        this.setState({ todo })\r\n        this.props.saveTodo(todo)\r\n    }\r\n\r\n    discardChanges = () => {\r\n        const { todo } = this.props\r\n        if (todo) this.setState({ todo })\r\n        else {\r\n            this.props.toggleAdd()\r\n            this.setState({ todo: { title: '', isDone: false } })\r\n        }\r\n    }\r\n\r\n    saveTodo = (ev) => {\r\n        if (ev.key !== \"Enter\") return\r\n        ev.preventDefault()\r\n\r\n        const { todo } = this.state\r\n        if (todo.id) ev.currentTarget.blur()\r\n        if (!todo.title) return\r\n        this.props.saveTodo(todo)\r\n        if (todo.id) {\r\n            this.refInput.current.blur()\r\n        } else {\r\n            this.setState({todo: { title: '', isDone: false } })\r\n            this.refInput.current.focus()\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const isAdd = !this.props.todo\r\n        const { isInputFocused } = this.state\r\n\r\n\r\n\r\n        return (\r\n            <section className=\"card-todo-preview flex align-start\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    onClick={this.toggleIsDone}\r\n                    name=\"isDone\"\r\n                    checked={this.props.todo?.isDone}\r\n                    style={{ visibility: isAdd ? 'hidden' : 'visible' }}\r\n                    />\r\n            <div className={`hidden-actions-form-container  ${isAdd ? 'add' : ''}`}>\r\n                <form onKeyDown={this.saveTodo} className={`hidden-actions-form ${isAdd ? 'add' : ''}`}>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={this.handelInput}\r\n                        ref={this.refInput}\r\n                        name=\"title\" placeholder=\"Add an item\"\r\n                        value={this.state.todo.title}\r\n                        autoComplete=\"off\"\r\n                        />\r\n                </form>\r\n                <div className=\"hidden-actions flex\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={this.saveTodo}\r\n                        >\r\n                        {isAdd ? 'Add' : 'Save'}\r\n                    </button>\r\n                    <button\r\n                        onClick={this.discardChanges}\r\n                        className=\"icon\"\r\n                        >\r\n                        <CloseSharpIcon />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        )\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\LinearProgressBar.jsx",[],{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":19},{"ruleId":"411","severity":1,"message":"415","line":2,"column":16,"nodeType":"413","messageId":"414","endLine":2,"endColumn":23},{"ruleId":"411","severity":1,"message":"416","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":21},{"ruleId":"417","severity":1,"message":"418","line":91,"column":9,"nodeType":"419","messageId":"420","endLine":91,"endColumn":32},{"ruleId":"421","severity":1,"message":"422","line":186,"column":17,"nodeType":"413","messageId":"423","endLine":186,"endColumn":23},{"ruleId":"421","severity":1,"message":"422","line":191,"column":13,"nodeType":"413","messageId":"423","endLine":191,"endColumn":19},{"ruleId":"411","severity":1,"message":"424","line":1,"column":10,"nodeType":"413","messageId":"414","endLine":1,"endColumn":21},{"ruleId":"411","severity":1,"message":"425","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":16},{"ruleId":"411","severity":1,"message":"426","line":7,"column":8,"nodeType":"413","messageId":"414","endLine":7,"endColumn":25},{"ruleId":"411","severity":1,"message":"427","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":14},{"ruleId":"411","severity":1,"message":"428","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":16},{"ruleId":"411","severity":1,"message":"429","line":18,"column":8,"nodeType":"413","messageId":"414","endLine":18,"endColumn":26},{"ruleId":"411","severity":1,"message":"430","line":20,"column":8,"nodeType":"413","messageId":"414","endLine":20,"endColumn":18},{"ruleId":"411","severity":1,"message":"431","line":61,"column":19,"nodeType":"413","messageId":"414","endLine":61,"endColumn":25},{"ruleId":"411","severity":1,"message":"432","line":12,"column":9,"nodeType":"413","messageId":"414","endLine":12,"endColumn":24},{"ruleId":"433","severity":1,"message":"434","line":17,"column":50,"nodeType":"435","messageId":"436","endLine":17,"endColumn":51},{"ruleId":"437","severity":1,"message":"438","line":50,"column":29,"nodeType":"439","endLine":50,"endColumn":54},{"ruleId":"411","severity":1,"message":"440","line":9,"column":8,"nodeType":"413","messageId":"414","endLine":9,"endColumn":24},{"ruleId":"437","severity":1,"message":"438","line":37,"column":29,"nodeType":"439","endLine":37,"endColumn":75},{"ruleId":"437","severity":1,"message":"438","line":43,"column":29,"nodeType":"439","endLine":43,"endColumn":75},{"ruleId":"441","severity":1,"message":"442","line":61,"column":20,"nodeType":"439","endLine":61,"endColumn":24},{"ruleId":"411","severity":1,"message":"443","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":21},{"ruleId":"411","severity":1,"message":"444","line":6,"column":10,"nodeType":"413","messageId":"414","endLine":6,"endColumn":25},{"ruleId":"411","severity":1,"message":"445","line":6,"column":27,"nodeType":"413","messageId":"414","endLine":6,"endColumn":36},{"ruleId":"437","severity":1,"message":"438","line":105,"column":29,"nodeType":"439","endLine":105,"endColumn":50},{"ruleId":"411","severity":1,"message":"446","line":13,"column":34,"nodeType":"413","messageId":"414","endLine":13,"endColumn":39},{"ruleId":"411","severity":1,"message":"447","line":36,"column":17,"nodeType":"413","messageId":"414","endLine":36,"endColumn":21},{"ruleId":"448","severity":1,"message":"449","line":14,"column":21,"nodeType":"450","messageId":"451","endLine":14,"endColumn":23},{"ruleId":"448","severity":1,"message":"449","line":14,"column":31,"nodeType":"450","messageId":"451","endLine":14,"endColumn":33},{"ruleId":"437","severity":1,"message":"438","line":58,"column":38,"nodeType":"439","endLine":58,"endColumn":130},{"ruleId":"411","severity":1,"message":"452","line":4,"column":8,"nodeType":"413","messageId":"414","endLine":4,"endColumn":22},{"ruleId":"411","severity":1,"message":"444","line":6,"column":10,"nodeType":"413","messageId":"414","endLine":6,"endColumn":25},{"ruleId":"411","severity":1,"message":"453","line":6,"column":38,"nodeType":"413","messageId":"414","endLine":6,"endColumn":47},{"ruleId":"454","severity":1,"message":"455","line":45,"column":48,"nodeType":"456","messageId":"457","endLine":45,"endColumn":50},{"ruleId":"411","severity":1,"message":"458","line":8,"column":85,"nodeType":"413","messageId":"414","endLine":8,"endColumn":98},{"ruleId":"411","severity":1,"message":"424","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":21},{"ruleId":"411","severity":1,"message":"459","line":5,"column":10,"nodeType":"413","messageId":"414","endLine":5,"endColumn":22},{"ruleId":"460","severity":1,"message":"461","line":34,"column":17,"nodeType":"439","endLine":34,"endColumn":64},{"ruleId":"411","severity":1,"message":"462","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"463","line":4,"column":10,"nodeType":"413","messageId":"414","endLine":4,"endColumn":24},{"ruleId":"411","severity":1,"message":"412","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"464","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":25},{"ruleId":"411","severity":1,"message":"412","line":1,"column":17,"nodeType":"413","messageId":"414","endLine":1,"endColumn":26},{"ruleId":"411","severity":1,"message":"444","line":5,"column":10,"nodeType":"413","messageId":"414","endLine":5,"endColumn":25},{"ruleId":"411","severity":1,"message":"445","line":5,"column":27,"nodeType":"413","messageId":"414","endLine":5,"endColumn":36},{"ruleId":"411","severity":1,"message":"465","line":25,"column":30,"nodeType":"413","messageId":"414","endLine":25,"endColumn":41},{"ruleId":"411","severity":1,"message":"466","line":14,"column":10,"nodeType":"413","messageId":"414","endLine":14,"endColumn":17},{"ruleId":"411","severity":1,"message":"467","line":42,"column":19,"nodeType":"413","messageId":"414","endLine":42,"endColumn":27},{"ruleId":"411","severity":1,"message":"468","line":106,"column":41,"nodeType":"413","messageId":"414","endLine":106,"endColumn":47},{"ruleId":"411","severity":1,"message":"469","line":106,"column":49,"nodeType":"413","messageId":"414","endLine":106,"endColumn":58},{"ruleId":"411","severity":1,"message":"470","line":106,"column":60,"nodeType":"413","messageId":"414","endLine":106,"endColumn":71},{"ruleId":"471","severity":1,"message":"472","line":136,"column":36,"nodeType":"473","endLine":136,"endColumn":77},{"ruleId":"411","severity":1,"message":"426","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":25},{"ruleId":"411","severity":1,"message":"474","line":37,"column":25,"nodeType":"413","messageId":"414","endLine":37,"endColumn":31},{"ruleId":"411","severity":1,"message":"475","line":37,"column":72,"nodeType":"413","messageId":"414","endLine":37,"endColumn":84},{"ruleId":"411","severity":1,"message":"476","line":37,"column":93,"nodeType":"413","messageId":"414","endLine":37,"endColumn":106},{"ruleId":"411","severity":1,"message":"477","line":63,"column":17,"nodeType":"413","messageId":"414","endLine":63,"endColumn":31},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'cardService' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-redeclare","'labels' is already defined.","redeclared","'utilService' is defined but never used.","'EditIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Link' is defined but never used.","'RoomIcon' is defined but never used.","'LabelImportantIcon' is defined but never used.","'SearchIcon' is defined but never used.","'cardId' is assigned a value but never used.","'AddDueDateModal' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ArrowBackIosIcon' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'menuService' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'board' is assigned a value but never used.","'card' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'CloseSharpIcon' is defined but never used.","'Draggable' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isAddingToTop' is assigned a value but never used.","'CallReceived' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'connect' is defined but never used.","'handleTodoDrag' is defined but never used.","'MemberListModal' is defined but never used.","'isModalOpen' is assigned a value but never used.","'Archive' is defined but never used.","'finalPos' is assigned a value but never used.","'onSave' is assigned a value but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isEdit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'EnterEditMode' is assigned a value but never used.","'isInputFocused' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/index.js":"1","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/serviceWorkerRegistration.js":"2","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/reportWebVitals.js":"3","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/store.js":"4","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/socketService.js":"5","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/App.jsx":"6","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/userActions.js":"7","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardList.jsx":"8","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/userService.js":"9","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Board.jsx":"10","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Home.jsx":"11","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Signup.jsx":"12","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Login.jsx":"13","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Header.jsx":"14","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Dashboard.jsx":"15","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/boardAction.js":"16","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/index.js":"17","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/httpService.js":"18","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/cardService.js":"19","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/boardService.js":"20","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/HomePickModal.jsx":"21","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardPreview.jsx":"22","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/BoardsPick.jsx":"23","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/utilService.js":"24","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardHeader.jsx":"25","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Archive.jsx":"26","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/reviewReducer.js":"27","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/userReducer.js":"28","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/systemReducer.js":"29","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/menuReducer.js":"30","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/cardReducer.js":"31","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/boardReducer.js":"32","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserMenuModal.jsx":"33","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/MyAvatar.jsx":"34","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/Menu.jsx":"35","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Card.jsx":"36","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupList.jsx":"37","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMapShow.jsx":"38","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddDueDateModal.jsx":"39","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/DynamicCardActionModal.jsx":"40","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardMenu.jsx":"41","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivitiesList.jsx":"42","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionLabels.jsx":"43","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionStickers.jsx":"44","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionSearch.jsx":"45","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionBackground.jsx":"46","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionAbout.jsx":"47","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupPreview.jsx":"48","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardContent.jsx":"49","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentPreview.jsx":"50","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/menuAction.js":"51","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivity.jsx":"52","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/PhotosArea.jsx":"53","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/ColorsArea.jsx":"54","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/ShareCardModal.jsx":"55","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CopyCardModal.jsx":"56","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MoveCardModal.jsx":"57","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddCoverModal.jsx":"58","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddAttachmentModal.jsx":"59","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberListModal.jsx":"60","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelListModal.jsx":"61","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddChecklistModal.jsx":"62","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/menuService.js":"63","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/cardActions.js":"64","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/AddCardInput.jsx":"65","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/DynamicGroupModal.jsx":"66","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardList.jsx":"67","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupMenu.jsx":"68","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberList.jsx":"69","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelList.jsx":"70","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardDescription.jsx":"71","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/TimeDisplay.jsx":"72","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentList.jsx":"73","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklistList.jsx":"74","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardAttachmentList.jsx":"75","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklist.jsx":"76","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPreview.jsx":"77","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupModals/SortGroupModal.jsx":"78","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupModals/MoveGroupModal.jsx":"79","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/LinearProgressBar.jsx":"80","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Todo.jsx":"81","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardEdit.jsx":"82","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardDetails.jsx":"83","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/UserSearchBy.jsx":"84","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/LabelSearchBy.jsx":"85"},{"size":991,"mtime":1611221020692,"results":"86","hashOfConfig":"87"},{"size":5064,"mtime":1610480913306,"results":"88","hashOfConfig":"87"},{"size":364,"mtime":1610480913306,"results":"89","hashOfConfig":"87"},{"size":312,"mtime":1610480913309,"results":"90","hashOfConfig":"87"},{"size":1759,"mtime":1611059379623,"results":"91","hashOfConfig":"87"},{"size":1515,"mtime":1611242699265,"results":"92","hashOfConfig":"87"},{"size":857,"mtime":1611260573068,"results":"93","hashOfConfig":"87"},{"size":3559,"mtime":1611313946905,"results":"94","hashOfConfig":"87"},{"size":1383,"mtime":1611315629178,"results":"95","hashOfConfig":"87"},{"size":2116,"mtime":1611256287748,"results":"96","hashOfConfig":"87"},{"size":297,"mtime":1611006710909,"results":"97","hashOfConfig":"87"},{"size":6263,"mtime":1611181565719,"results":"98","hashOfConfig":"87"},{"size":3874,"mtime":1611182330681,"results":"99","hashOfConfig":"87"},{"size":2518,"mtime":1611315137496,"results":"100","hashOfConfig":"87"},{"size":6953,"mtime":1611319504480,"results":"101","hashOfConfig":"87"},{"size":7416,"mtime":1611315519599,"results":"102","hashOfConfig":"87"},{"size":544,"mtime":1611177853855,"results":"103","hashOfConfig":"87"},{"size":1037,"mtime":1611058838420,"results":"104","hashOfConfig":"87"},{"size":2999,"mtime":1611315607023,"results":"105","hashOfConfig":"87"},{"size":8164,"mtime":1611313946923,"results":"106","hashOfConfig":"87"},{"size":2714,"mtime":1611313946907,"results":"107","hashOfConfig":"87"},{"size":502,"mtime":1611313946906,"results":"108","hashOfConfig":"87"},{"size":4764,"mtime":1611316198215,"results":"109","hashOfConfig":"87"},{"size":881,"mtime":1611313946908,"results":"110","hashOfConfig":"87"},{"size":1781,"mtime":1611272540359,"results":"111","hashOfConfig":"87"},{"size":5928,"mtime":1611314766278,"results":"112","hashOfConfig":"87"},{"size":647,"mtime":1610480913309,"results":"113","hashOfConfig":"87"},{"size":719,"mtime":1611315579439,"results":"114","hashOfConfig":"87"},{"size":309,"mtime":1610480913309,"results":"115","hashOfConfig":"87"},{"size":268,"mtime":1610806693749,"results":"116","hashOfConfig":"87"},{"size":360,"mtime":1610581763949,"results":"117","hashOfConfig":"87"},{"size":605,"mtime":1611230586742,"results":"118","hashOfConfig":"87"},{"size":1822,"mtime":1611225294182,"results":"119","hashOfConfig":"87"},{"size":556,"mtime":1611275997919,"results":"120","hashOfConfig":"87"},{"size":5244,"mtime":1611314380140,"results":"121","hashOfConfig":"87"},{"size":4156,"mtime":1611230517492,"results":"122","hashOfConfig":"87"},{"size":4242,"mtime":1611317257543,"results":"123","hashOfConfig":"87"},{"size":1225,"mtime":1610892226053,"results":"124","hashOfConfig":"87"},{"size":1470,"mtime":1610926696429,"results":"125","hashOfConfig":"87"},{"size":2460,"mtime":1611144718253,"results":"126","hashOfConfig":"87"},{"size":2490,"mtime":1611144158108,"results":"127","hashOfConfig":"87"},{"size":583,"mtime":1610892226053,"results":"128","hashOfConfig":"87"},{"size":6814,"mtime":1611087436487,"results":"129","hashOfConfig":"87"},{"size":2116,"mtime":1610892226055,"results":"130","hashOfConfig":"87"},{"size":1443,"mtime":1611005165112,"results":"131","hashOfConfig":"87"},{"size":2152,"mtime":1611005165111,"results":"132","hashOfConfig":"87"},{"size":3745,"mtime":1611233787912,"results":"133","hashOfConfig":"87"},{"size":7412,"mtime":1611313946907,"results":"134","hashOfConfig":"87"},{"size":1267,"mtime":1611056501691,"results":"135","hashOfConfig":"87"},{"size":579,"mtime":1611276194885,"results":"136","hashOfConfig":"87"},{"size":664,"mtime":1610892226057,"results":"137","hashOfConfig":"87"},{"size":2056,"mtime":1611087436486,"results":"138","hashOfConfig":"87"},{"size":5649,"mtime":1611005165111,"results":"139","hashOfConfig":"87"},{"size":1619,"mtime":1611005165110,"results":"140","hashOfConfig":"87"},{"size":834,"mtime":1611146454381,"results":"141","hashOfConfig":"87"},{"size":2843,"mtime":1611084084002,"results":"142","hashOfConfig":"87"},{"size":2186,"mtime":1611162773030,"results":"143","hashOfConfig":"87"},{"size":3884,"mtime":1611319994543,"results":"144","hashOfConfig":"87"},{"size":1903,"mtime":1611069008885,"results":"145","hashOfConfig":"87"},{"size":2718,"mtime":1611136754175,"results":"146","hashOfConfig":"87"},{"size":2341,"mtime":1611065789856,"results":"147","hashOfConfig":"87"},{"size":1904,"mtime":1610921263752,"results":"148","hashOfConfig":"87"},{"size":293,"mtime":1610892226057,"results":"149","hashOfConfig":"87"},{"size":680,"mtime":1610584712043,"results":"150","hashOfConfig":"87"},{"size":1026,"mtime":1611087436483,"results":"151","hashOfConfig":"87"},{"size":1126,"mtime":1611313946906,"results":"152","hashOfConfig":"87"},{"size":2543,"mtime":1611317412227,"results":"153","hashOfConfig":"87"},{"size":1565,"mtime":1611313946906,"results":"154","hashOfConfig":"87"},{"size":1056,"mtime":1611069083410,"results":"155","hashOfConfig":"87"},{"size":1035,"mtime":1611066931784,"results":"156","hashOfConfig":"87"},{"size":2170,"mtime":1611145058550,"results":"157","hashOfConfig":"87"},{"size":1262,"mtime":1611312385152,"results":"158","hashOfConfig":"87"},{"size":2745,"mtime":1610892226068,"results":"159","hashOfConfig":"87"},{"size":1621,"mtime":1611056024213,"results":"160","hashOfConfig":"87"},{"size":1804,"mtime":1611227273523,"results":"161","hashOfConfig":"87"},{"size":2064,"mtime":1611056437484,"results":"162","hashOfConfig":"87"},{"size":4295,"mtime":1611317429017,"results":"163","hashOfConfig":"87"},{"size":1191,"mtime":1611313946907,"results":"164","hashOfConfig":"87"},{"size":2536,"mtime":1611313946907,"results":"165","hashOfConfig":"87"},{"size":558,"mtime":1610673370614,"results":"166","hashOfConfig":"87"},{"size":2994,"mtime":1611135980466,"results":"167","hashOfConfig":"87"},{"size":7292,"mtime":1611317523325,"results":"168","hashOfConfig":"87"},{"size":4949,"mtime":1611320781640,"results":"169","hashOfConfig":"87"},{"size":505,"mtime":1611005165112,"results":"170","hashOfConfig":"87"},{"size":1924,"mtime":1611005165112,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f4780n",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/index.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/serviceWorkerRegistration.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/reportWebVitals.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/store.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/socketService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/App.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/userActions.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardList.jsx",["344","345","346"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/userService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Board.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Home.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Signup.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Login.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Header.jsx",["347","348","349"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Dashboard.jsx",["350","351"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/boardAction.js",["352","353"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/index.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/httpService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/cardService.js",["354"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/boardService.js",["355","356","357","358"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/HomePickModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardPreview.jsx",["359"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/BoardsPick.jsx",["360","361","362"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { loadBoards, addBoard } from '../store/actions/boardAction'\n// import { BoardList } from '../cmps/BoardList'\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport homeImgSrc from '../assets/bgImgs/home-bg.jpg'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nclass _BoardsPick extends Component {\n\n    state = {\n        isOpen: false,\n        bgColors: [\n            { color: 'lightgray', isSelected: false },\n            { color: '#adad85', isSelected: false },\n            { color: 'coral', isSelected: false },\n            { color: 'lightpink', isSelected: false },\n            { color: 'crimson', isSelected: false },\n            { color: 'yellowgreen', isSelected: false },\n            { color: 'teal', isSelected: false },\n            { color: 'blue', isSelected: false },\n            { color: '#3385ff', isSelected: false }\n        ],\n        board: {\n            _id: '',\n            title: '',\n            createdAt: Date.now(),\n            style: {},\n            isPrivate: false,\n            createdBy: {},\n            labels: [],\n            members: [],\n            groups: [],\n            activities: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadBoards()\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        const { board } = this.state\n        this.setState({\n            board: { ...board, title: value }\n        })\n    }\n\n    setBgColor = (color) => {\n        const { board } = this.state\n        this.setState({\n            board: { ...board, style: { ...board.style, backgroundColor: color } }\n        })\n    }\n\n    closeModal = () => {\n        let isOpen = this.state.isOpen\n        if (isOpen) this.setState({ isOpen: false })\n    }\n\n    addBoard = () => {\n        const { board } = this.state\n        this.props.addBoard(board)\n        this.setState({ isOpen: false })\n    }\n\n    //     toggleTrash = (boardIdx) => {\n    // let \n    //     }\n\n    render() {\n        const { isOpen, bgColors } = this.state\n        const { boards } = this.props\n        return (\n\n            <section className=\"boards-pick-main-container\" >\n                <section className=\"boards-container\">\n                    <p className=\"pick-title\">Public Boards</p>\n                    <section className=\"board-opts\">\n\n                        <section className=\"board-op create-board\" onClick={() => this.setState({ isOpen: true })}>\n                            <h1>Create new board</h1>\n                            <AddBoxIcon className=\"create-board-btn\" />\n\n                        </section>\n                        {isOpen && <section className=\"new-board-modal\">\n                            <div>\n                                <input type=\"text\" placeholder=\"Add board title\" onChange={this.handleChange} />\n                            </div>\n                            <div className=\"color-picker\">\n                                {bgColors.map((bg, idx) => {\n                                    return <div className=\"color\" key={idx} style={{ backgroundColor: bg.color }} onClick={() => this.setBgColor(bg.color)}>\n                                        {bg.isSelected && <span>✔</span>}\n                                    </div>\n                                })}\n                            </div>\n                            <button className=\"add-board-btn\" onClick={this.addBoard}> Add Board</button>\n\n                        </section>\n                        }\n\n                        <section className=\"my-boards\">\n                            {boards && boards.map((board, idx) => {\n                                return (\n                                    <div key={board.id} >\n                                        <Link to={`/board/${board._id}`}>\n                                            <div key={idx} className=\"board-op\" key={board._id} style={board.style}>\n                                                {board.title}\n                                            </div>\n                                        </Link>\n                                        {/* <span className=\"delete-board-btn\"><DeleteOutlineIcon /></span> */}\n                                    </div>\n                                )\n                            })}\n                        </section>\n                    </section>\n                </section>\n            </section>\n        )\n\n    }\n\n\n}\nconst mapStateToProps = state => {\n    return {\n        boards: state.boardModule.boards\n    }\n}\nconst mapDispatchToProps = {\n    loadBoards,\n    addBoard\n}\n\n\nexport const BoardsPick = connect(mapStateToProps, mapDispatchToProps)(_BoardsPick)",["363","364"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/utilService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardHeader.jsx",["365"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Archive.jsx",["366","367"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/reviewReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/userReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/systemReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/menuReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/cardReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/boardReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserMenuModal.jsx",["368"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/MyAvatar.jsx",["369"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/Menu.jsx",["370"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Card.jsx",["371"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupList.jsx",["372"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMapShow.jsx",["373"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddDueDateModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/DynamicCardActionModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardMenu.jsx",["374"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivitiesList.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionLabels.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionStickers.jsx",["375"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionSearch.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionBackground.jsx",["376","377","378","379"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionAbout.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupPreview.jsx",["380","381","382"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardContent.jsx",["383"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentPreview.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/menuAction.js",["384"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivity.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/PhotosArea.jsx",["385"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/ColorsArea.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/ShareCardModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CopyCardModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MoveCardModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddCoverModal.jsx",["386"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddAttachmentModal.jsx",["387","388"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberListModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelListModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddChecklistModal.jsx",["389"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/menuService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/cardActions.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/AddCardInput.jsx",["390"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/DynamicGroupModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardList.jsx",["391","392","393","394"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupMenu.jsx",["395","396","397"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberList.jsx",["398","399"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelList.jsx",["400"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardDescription.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/TimeDisplay.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentList.jsx",["401"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklistList.jsx",["402","403"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardAttachmentList.jsx",["404","405"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklist.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPreview.jsx",["406","407","408"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupModals/SortGroupModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupModals/MoveGroupModal.jsx",["409","410"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/LinearProgressBar.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Todo.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardEdit.jsx",["411","412","413","414","415","416"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardDetails.jsx",["417","418","419","420"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/UserSearchBy.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/LabelSearchBy.jsx",[],{"ruleId":"421","severity":1,"message":"422","line":4,"column":10,"nodeType":"423","messageId":"424","endLine":4,"endColumn":22},{"ruleId":"421","severity":1,"message":"425","line":7,"column":10,"nodeType":"423","messageId":"424","endLine":7,"endColumn":20},{"ruleId":"426","severity":1,"message":"427","line":90,"column":86,"nodeType":"428","endLine":90,"endColumn":111},{"ruleId":"421","severity":1,"message":"429","line":2,"column":16,"nodeType":"423","messageId":"424","endLine":2,"endColumn":23},{"ruleId":"421","severity":1,"message":"430","line":15,"column":10,"nodeType":"423","messageId":"424","endLine":15,"endColumn":21},{"ruleId":"421","severity":1,"message":"431","line":32,"column":17,"nodeType":"423","messageId":"424","endLine":32,"endColumn":26},{"ruleId":"432","severity":1,"message":"433","line":18,"column":9,"nodeType":"434","messageId":"435","endLine":18,"endColumn":18},{"ruleId":"436","severity":1,"message":"437","line":174,"column":59,"nodeType":"438","endLine":174,"endColumn":126},{"ruleId":"421","severity":1,"message":"439","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":21},{"ruleId":"421","severity":1,"message":"440","line":269,"column":13,"nodeType":"423","messageId":"424","endLine":269,"endColumn":18},{"ruleId":"441","severity":1,"message":"442","line":91,"column":9,"nodeType":"443","messageId":"444","endLine":91,"endColumn":32},{"ruleId":"421","severity":1,"message":"445","line":119,"column":11,"nodeType":"423","messageId":"424","endLine":119,"endColumn":19},{"ruleId":"446","severity":1,"message":"447","line":164,"column":17,"nodeType":"423","messageId":"448","endLine":164,"endColumn":23},{"ruleId":"446","severity":1,"message":"447","line":169,"column":13,"nodeType":"423","messageId":"448","endLine":169,"endColumn":19},{"ruleId":"421","severity":1,"message":"449","line":242,"column":12,"nodeType":"423","messageId":"424","endLine":242,"endColumn":21},{"ruleId":"421","severity":1,"message":"450","line":1,"column":10,"nodeType":"423","messageId":"424","endLine":1,"endColumn":14},{"ruleId":"421","severity":1,"message":"451","line":6,"column":8,"nodeType":"423","messageId":"424","endLine":6,"endColumn":25},{"ruleId":"421","severity":1,"message":"452","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":109,"column":81,"nodeType":"428","endLine":109,"endColumn":96},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"421","severity":1,"message":"457","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":29},{"ruleId":"421","severity":1,"message":"458","line":6,"column":8,"nodeType":"423","messageId":"424","endLine":6,"endColumn":16},{"ruleId":"421","severity":1,"message":"459","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":25},{"ruleId":"421","severity":1,"message":"460","line":1,"column":10,"nodeType":"423","messageId":"424","endLine":1,"endColumn":19},{"ruleId":"461","severity":1,"message":"462","line":17,"column":50,"nodeType":"463","messageId":"464","endLine":17,"endColumn":51},{"ruleId":"421","severity":1,"message":"465","line":18,"column":8,"nodeType":"423","messageId":"424","endLine":18,"endColumn":21},{"ruleId":"421","severity":1,"message":"466","line":12,"column":9,"nodeType":"423","messageId":"424","endLine":12,"endColumn":24},{"ruleId":"421","severity":1,"message":"467","line":66,"column":19,"nodeType":"423","messageId":"424","endLine":66,"endColumn":25},{"ruleId":"421","severity":1,"message":"468","line":6,"column":8,"nodeType":"423","messageId":"424","endLine":6,"endColumn":16},{"ruleId":"421","severity":1,"message":"469","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":32},{"ruleId":"436","severity":1,"message":"437","line":50,"column":29,"nodeType":"438","endLine":50,"endColumn":54},{"ruleId":"421","severity":1,"message":"470","line":9,"column":8,"nodeType":"423","messageId":"424","endLine":9,"endColumn":24},{"ruleId":"436","severity":1,"message":"437","line":37,"column":29,"nodeType":"438","endLine":37,"endColumn":75},{"ruleId":"436","severity":1,"message":"437","line":43,"column":29,"nodeType":"438","endLine":43,"endColumn":75},{"ruleId":"471","severity":1,"message":"472","line":61,"column":20,"nodeType":"438","endLine":61,"endColumn":24},{"ruleId":"421","severity":1,"message":"473","line":6,"column":10,"nodeType":"423","messageId":"424","endLine":6,"endColumn":25},{"ruleId":"421","severity":1,"message":"474","line":6,"column":27,"nodeType":"423","messageId":"424","endLine":6,"endColumn":36},{"ruleId":"421","severity":1,"message":"475","line":10,"column":10,"nodeType":"423","messageId":"424","endLine":10,"endColumn":32},{"ruleId":"421","severity":1,"message":"440","line":13,"column":34,"nodeType":"423","messageId":"424","endLine":13,"endColumn":39},{"ruleId":"421","severity":1,"message":"476","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":21},{"ruleId":"436","severity":1,"message":"437","line":105,"column":29,"nodeType":"438","endLine":105,"endColumn":50},{"ruleId":"436","severity":1,"message":"437","line":88,"column":38,"nodeType":"438","endLine":88,"endColumn":130},{"ruleId":"477","severity":1,"message":"478","line":14,"column":21,"nodeType":"479","messageId":"480","endLine":14,"endColumn":23},{"ruleId":"477","severity":1,"message":"478","line":14,"column":31,"nodeType":"479","messageId":"480","endLine":14,"endColumn":33},{"ruleId":"421","severity":1,"message":"481","line":36,"column":17,"nodeType":"423","messageId":"424","endLine":36,"endColumn":21},{"ruleId":"421","severity":1,"message":"482","line":8,"column":85,"nodeType":"423","messageId":"424","endLine":8,"endColumn":98},{"ruleId":"421","severity":1,"message":"483","line":4,"column":8,"nodeType":"423","messageId":"424","endLine":4,"endColumn":22},{"ruleId":"421","severity":1,"message":"473","line":6,"column":10,"nodeType":"423","messageId":"424","endLine":6,"endColumn":25},{"ruleId":"421","severity":1,"message":"484","line":6,"column":38,"nodeType":"423","messageId":"424","endLine":6,"endColumn":47},{"ruleId":"485","severity":1,"message":"486","line":56,"column":48,"nodeType":"487","messageId":"488","endLine":56,"endColumn":50},{"ruleId":"421","severity":1,"message":"489","line":2,"column":9,"nodeType":"423","messageId":"424","endLine":2,"endColumn":26},{"ruleId":"421","severity":1,"message":"490","line":25,"column":65,"nodeType":"423","messageId":"424","endLine":25,"endColumn":74},{"ruleId":"421","severity":1,"message":"491","line":26,"column":16,"nodeType":"423","messageId":"424","endLine":26,"endColumn":25},{"ruleId":"421","severity":1,"message":"460","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"492","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":25},{"ruleId":"421","severity":1,"message":"460","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"493","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":21},{"ruleId":"421","severity":1,"message":"494","line":2,"column":10,"nodeType":"423","messageId":"424","endLine":2,"endColumn":17},{"ruleId":"421","severity":1,"message":"495","line":4,"column":10,"nodeType":"423","messageId":"424","endLine":4,"endColumn":24},{"ruleId":"421","severity":1,"message":"496","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":22},{"ruleId":"497","severity":1,"message":"498","line":34,"column":17,"nodeType":"438","endLine":34,"endColumn":81},{"ruleId":"421","severity":1,"message":"473","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":25},{"ruleId":"421","severity":1,"message":"474","line":5,"column":27,"nodeType":"423","messageId":"424","endLine":5,"endColumn":36},{"ruleId":"421","severity":1,"message":"499","line":27,"column":30,"nodeType":"423","messageId":"424","endLine":27,"endColumn":41},{"ruleId":"421","severity":1,"message":"500","line":1,"column":10,"nodeType":"423","messageId":"424","endLine":1,"endColumn":19},{"ruleId":"421","severity":1,"message":"494","line":3,"column":10,"nodeType":"423","messageId":"424","endLine":3,"endColumn":17},{"ruleId":"421","severity":1,"message":"458","line":7,"column":8,"nodeType":"423","messageId":"424","endLine":7,"endColumn":16},{"ruleId":"421","severity":1,"message":"501","line":14,"column":10,"nodeType":"423","messageId":"424","endLine":14,"endColumn":17},{"ruleId":"421","severity":1,"message":"502","line":41,"column":15,"nodeType":"423","messageId":"424","endLine":41,"endColumn":23},{"ruleId":"421","severity":1,"message":"503","line":105,"column":17,"nodeType":"423","messageId":"424","endLine":105,"endColumn":24},{"ruleId":"421","severity":1,"message":"504","line":106,"column":114,"nodeType":"423","messageId":"424","endLine":106,"endColumn":127},{"ruleId":"421","severity":1,"message":"505","line":106,"column":129,"nodeType":"423","messageId":"424","endLine":106,"endColumn":141},{"ruleId":"421","severity":1,"message":"459","line":8,"column":8,"nodeType":"423","messageId":"424","endLine":8,"endColumn":25},{"ruleId":"421","severity":1,"message":"506","line":44,"column":37,"nodeType":"423","messageId":"424","endLine":44,"endColumn":43},{"ruleId":"421","severity":1,"message":"507","line":44,"column":84,"nodeType":"423","messageId":"424","endLine":44,"endColumn":96},{"ruleId":"421","severity":1,"message":"508","line":44,"column":105,"nodeType":"423","messageId":"424","endLine":44,"endColumn":118},"no-unused-vars","'BoardPreview' is defined but never used.","Identifier","unusedVar","'BoardsPick' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NavLink' is defined but never used.","'MenuMapShow' is defined but never used.","'isMapOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'currGroup'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cardService' is defined but never used.","'board' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'newBoard' is assigned a value but never used.","no-redeclare","'labels' is already defined.","redeclared","'allBoards' is assigned a value but never used.","'Link' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'homeImgSrc' is defined but never used.","no-native-reassign",["509"],"no-negated-in-lhs",["510"],"'EqualizerOutlinedIcon' is defined but never used.","'EditIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Component' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'MoreHorizIcon' is defined but never used.","'AddDueDateModal' is defined but never used.","'cardId' is assigned a value but never used.","'RoomIcon' is defined but never used.","'RemoveRedEyeOutlinedIcon' is defined but never used.","'ArrowBackIosIcon' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'DynamicCardActionModal' is defined but never used.","'menuService' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'card' is assigned a value but never used.","'isAddingToTop' is assigned a value but never used.","'CloseSharpIcon' is defined but never used.","'Draggable' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'DynamicGroupModal' is defined but never used.","'closeMenu' is assigned a value but never used.","'currModal' is assigned a value but never used.","'MemberListModal' is defined but never used.","'utilService' is defined but never used.","'connect' is defined but never used.","'handleTodoDrag' is defined but never used.","'CallReceived' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'isModalOpen' is assigned a value but never used.","'TableCell' is defined but never used.","'Archive' is defined but never used.","'finalPos' is assigned a value but never used.","'editPos' is assigned a value but never used.","'enterEditMode' is assigned a value but never used.","'exitEditMode' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'EnterEditMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 446d208307bf59014326a90686e85647d5a2b9f4
