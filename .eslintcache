[{"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\index.js":"1","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\serviceWorkerRegistration.js":"2","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\reportWebVitals.js":"3","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\store.js":"4","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\App.jsx":"5","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardList.jsx":"6","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardPreview.jsx":"7","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Header.jsx":"8","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Home.jsx":"9","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\boardAction.js":"10","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Board.jsx":"11","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\index.js":"12","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\boardService.js":"13","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\httpService.js":"14","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\reviewReducer.js":"15","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\systemReducer.js":"16","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\userReducer.js":"17","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\cardReducer.js":"18","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\boardReducer.js":"19","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\userActions.js":"20","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardHeader.jsx":"21","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupList.jsx":"22","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Card.jsx":"23","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\utilService.js":"24","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\cardService.js":"25","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\userService.js":"26","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupPreview.jsx":"27","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardContent.jsx":"28","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\cardActions.js":"29","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardList.jsx":"30","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\ActivityList.jsx":"31","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Label.jsx":"32","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentList.jsx":"33","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardAttachmentList.jsx":"34","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardDescription.jsx":"35","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPreview.jsx":"36","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\menuReducer.js":"37","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\menuAction.js":"38","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\menuService.js":"39","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\Menu.jsx":"40","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx":"41","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx":"42","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx":"43","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx":"44","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx":"45","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx":"46","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx":"47","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx":"48","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx":"49","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx":"50","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx":"51"},{"size":935,"mtime":1610481008514,"results":"52","hashOfConfig":"53"},{"size":5201,"mtime":1610481008516,"results":"54","hashOfConfig":"53"},{"size":377,"mtime":1610481008516,"results":"55","hashOfConfig":"53"},{"size":323,"mtime":1610481008527,"results":"56","hashOfConfig":"53"},{"size":621,"mtime":1610677151267,"results":"57","hashOfConfig":"53"},{"size":1104,"mtime":1610541644728,"results":"58","hashOfConfig":"53"},{"size":362,"mtime":1610540312102,"results":"59","hashOfConfig":"53"},{"size":549,"mtime":1610668376678,"results":"60","hashOfConfig":"53"},{"size":588,"mtime":1610542934549,"results":"61","hashOfConfig":"53"},{"size":2926,"mtime":1610627080734,"results":"62","hashOfConfig":"53"},{"size":1432,"mtime":1610718243690,"results":"63","hashOfConfig":"53"},{"size":560,"mtime":1610622588603,"results":"64","hashOfConfig":"53"},{"size":2345,"mtime":1610619806996,"results":"65","hashOfConfig":"53"},{"size":1109,"mtime":1610586031761,"results":"66","hashOfConfig":"53"},{"size":669,"mtime":1610481008526,"results":"67","hashOfConfig":"53"},{"size":322,"mtime":1610481008526,"results":"68","hashOfConfig":"53"},{"size":818,"mtime":1610554789226,"results":"69","hashOfConfig":"53"},{"size":377,"mtime":1610586031764,"results":"70","hashOfConfig":"53"},{"size":627,"mtime":1610586031764,"results":"71","hashOfConfig":"53"},{"size":1832,"mtime":1610554626638,"results":"72","hashOfConfig":"53"},{"size":1170,"mtime":1610669827393,"results":"73","hashOfConfig":"53"},{"size":1718,"mtime":1610586031748,"results":"74","hashOfConfig":"53"},{"size":2736,"mtime":1610586031751,"results":"75","hashOfConfig":"53"},{"size":681,"mtime":1610481008524,"results":"76","hashOfConfig":"53"},{"size":760,"mtime":1610586031760,"results":"77","hashOfConfig":"53"},{"size":2586,"mtime":1610586031762,"results":"78","hashOfConfig":"53"},{"size":2551,"mtime":1610586031749,"results":"79","hashOfConfig":"53"},{"size":1063,"mtime":1610586031752,"results":"80","hashOfConfig":"53"},{"size":704,"mtime":1610586031763,"results":"81","hashOfConfig":"53"},{"size":475,"mtime":1610586031747,"results":"82","hashOfConfig":"53"},{"size":1317,"mtime":1610717824799,"results":"83","hashOfConfig":"53"},{"size":485,"mtime":1610586031756,"results":"84","hashOfConfig":"53"},{"size":1504,"mtime":1610586031751,"results":"85","hashOfConfig":"53"},{"size":1023,"mtime":1610586031751,"results":"86","hashOfConfig":"53"},{"size":1119,"mtime":1610586031755,"results":"87","hashOfConfig":"53"},{"size":2424,"mtime":1610586031748,"results":"88","hashOfConfig":"53"},{"size":279,"mtime":1610623330055,"results":"89","hashOfConfig":"53"},{"size":259,"mtime":1610623271363,"results":"90","hashOfConfig":"53"},{"size":0,"mtime":1610623151796,"results":"91","hashOfConfig":"53"},{"size":7294,"mtime":1610716770679,"results":"92","hashOfConfig":"53"},{"size":243,"mtime":1610687342378,"results":"93","hashOfConfig":"53"},{"size":1373,"mtime":1610720013457,"results":"94","hashOfConfig":"53"},{"size":515,"mtime":1610652716076,"results":"95","hashOfConfig":"53"},{"size":417,"mtime":1610641961533,"results":"96","hashOfConfig":"53"},{"size":2246,"mtime":1610689479900,"results":"97","hashOfConfig":"53"},{"size":3591,"mtime":1610683421075,"results":"98","hashOfConfig":"53"},{"size":1568,"mtime":1610709818319,"results":"99","hashOfConfig":"53"},{"size":5848,"mtime":1610710453066,"results":"100","hashOfConfig":"53"},{"size":1225,"mtime":1610660007763,"results":"101","hashOfConfig":"53"},{"size":283,"mtime":1610652621486,"results":"102","hashOfConfig":"53"},{"size":271,"mtime":1610652604992,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1ogt17l",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\index.js",[],["220","221"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\serviceWorkerRegistration.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\reportWebVitals.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\store.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\App.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardList.jsx",["222"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardAction.js'\r\nimport { BoardPreview } from './BoardPreview.jsx'\r\n\r\nclass _BoardList extends Component {\r\n\r\n    componentDidMount() {\r\n        console.log('@@@');\r\n        this.props.loadBoards()\r\n    }\r\n    get boardsForDisplay() {\r\n        let boards = this.props.boards\r\n        console.log(this.props);\r\n        console.log('boards', boards);\r\n        return boards\r\n    }\r\n    render() {\r\n        const { boards } = this.boardsForDisplay\r\n        console.log(boards);\r\n        return (\r\n            <section className=\"board-list\">\r\n                {boards.map(board => {\r\n                    <div> key={board._id}\r\n                        <BoardPreview board={board} /></div>\r\n                })}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardPreview.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\Header.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Home.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\boardAction.js",["223"],"import { boardService } from '../../services/boardService.js'\r\nimport { httpService } from '../../services/httpService.js'\r\n\r\nexport function loadBoards() {\r\n  console.log('hi');\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query()\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function getBoardById(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      // socketService.on('board-update',updatedBoard=>{\r\n      //   dispatch({ type: 'SET_BOARD', updatedBoard })\r\n      // })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function addCard(boardId, groupId, cardToAdd) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addCard(boardId, groupId, cardToAdd)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addGroup(boardId, group) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addGroup(boardId, group)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoardCard(board, card) {\r\n  return async dispatch => {\r\n    const newBoard = boardService.updateBoardCard(board, card)\r\n    //const newBoard = await httpService.put('board/' + board._id,boardService.updateBoardCard(board,card))\r\n    dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n  }\r\n}\r\n\r\nexport function openLabel() {\r\n  return dispatch => {\r\n    dispatch({ type: 'OPEN-LABELS' })\r\n  }\r\n}\r\nexport function setBackground(board, background) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = { ...board, style: background }\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err);\r\n    }\r\n  }\r\n}\r\n\r\n// export function selectImg(board, imgSrc) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       const selectedImg = await boardService.selectImg(board, imgSrc)\r\n//       dispatch({ type: 'CHANGE_STYLE', selectedImg })\r\n//     }\r\n//     catch (err) {\r\n//       console.log('boardActions: err in selectImg', err);\r\n//     }\r\n//   }\r\n// }\r\n\r\n// export function selectColor(board, color) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       console.log('hi***');\r\n//       const selectedColor = await boardService.selectColor(board, color)\r\n//       console.log('selectedColor:', selectedColor);\r\n//       dispatch({ type: 'SELECT_COLOR', selectedColor })\r\n//     }\r\n//     catch (err) {\r\n//       console.log('boardActions: err in selectColor', err);\r\n//     }\r\n//   }\r\n// }\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\pages\\Board.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\index.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\boardService.js",["224"],"import { utilService } from './utilService'\r\nimport { httpService } from './httpService'\r\n\r\n\r\n// const { board } = require('../data/db.json')\r\nvar db = require('../db.json')\r\nconst { board } = db\r\n\r\nvar gBoards = [board]\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    addCard,\r\n    addGroup,\r\n    // selectImg,\r\n    // selectColor,\r\n    updateBoardCard,\r\n    setBackground\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction query() {\r\n    const board = httpService.get('/board')\r\n    return board\r\n}\r\n\r\nfunction getById(id) {\r\n    const currBoard = gBoards.find(board => board._id === id)\r\n    const copy = JSON.parse(JSON.stringify(currBoard))\r\n    // return Promise.resolve(copy)\r\n    return Promise.resolve(currBoard)\r\n}\r\n\r\nfunction updateBoardCard(board, cardToUpdate) {\r\n    const newGroups = board.groups.map(group => {\r\n        const cards = group.cards.map(card => (card.id === cardToUpdate.id) ? cardToUpdate : card)\r\n        return { ...group, cards }\r\n    })\r\n    return { ...board, groups: newGroups }\r\n}\r\n\r\nfunction addCard(boardId, groupId, card) {\r\n    var copy = JSON.parse(JSON.stringify(gBoards))\r\n    var newCard = { ...card, id: utilService.makeId() }\r\n    const boardIdx = gBoards.findIndex(board => board._id === boardId)\r\n    const groupIdx = copy[boardIdx].groups.findIndex(group => group.id === groupId)\r\n    copy[boardIdx].groups[groupIdx].cards.push(newCard)\r\n    gBoards = copy\r\n    return gBoards[boardIdx]\r\n}\r\n\r\n\r\n\r\nasync function addGroup(boardId, group) {\r\n    try {\r\n        const currBoard = await getById(boardId)\r\n        // const copy = JSON.parse(JSON.stringify(currBoard))\r\n        const newGroup = { ...group, id: utilService.makeId() }\r\n        currBoard.groups.push(newGroup)\r\n        return Promise.resolve(currBoard)\r\n    }\r\n    catch (err) {\r\n        console.log('err in service:', err);\r\n    }\r\n}\r\nfunction setBackground(board, background) {\r\n    try {\r\n        const currBoard = getById(board._id)\r\n        // const style = (background.length > 10) ? imgSrc : color\r\n        var updatedBoard = { ...currBoard, style: background }\r\n        return Promise.resolve(updatedBoard)\r\n    }\r\n    catch (err) {\r\n        console.log('err in setting background', err);\r\n    }\r\n}\r\n\r\n\r\n// function selectImg(board,imgSrc) {\r\n//     return imgSrc\r\n// }\r\n// function selectColor(board,color) {\r\n//     return color\r\n// }\r\n\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\httpService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\reviewReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\systemReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\userReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\cardReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\boardReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\userActions.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\BoardHeader.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupList.jsx",["225"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react'\r\nimport { GroupPreview } from \"./GroupPreview\";\r\n\r\nexport class GroupList extends Component {\r\n\r\n    state = {\r\n        group: {\r\n            id: '',\r\n            title: '',\r\n            style: {},\r\n            cards: []\r\n        },\r\n        isAdding:false\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const { group } = this.state\r\n\r\n        const {value }= ev.target\r\n        this.setState({\r\n            group:{...group,title:value}\r\n        })\r\n    }\r\n\r\n    onShowAddBtn = () => {\r\n        this.setState({ isAdding: true })\r\n    }\r\n    onAddGroup =  () => {\r\n        const { group } = this.state\r\n        const { board} = this.props\r\n        this.props.addGroup(board._id, group)\r\n        this.setState({\r\n          group: { ...group, title: '' },\r\n            isAdding: false\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { groups } = this.props\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div className=\"group-container\">\r\n                    {groups && groups.map((group, idx) => <GroupPreview key={idx} group={group} />)}\r\n                    <div style={{display:'flex' ,flexDirection:'column'}}>\r\n                        <form action=\"\">\r\n                        <input type=\"text\" placeholder=\"+ Add another list\" value={this.state.group.title} onClick={this.onShowAddBtn} onChange={this.handleChange} style={{marginTop:'30px'}} />\r\n                        {this.state.isAdding&&<button onClick={this.onAddGroup}>Add List</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Card.jsx",["226"],"import { connect } from \"react-redux\";\r\nimport { cardService } from \"../../services/cardService.js\";\r\nimport { updateBoardCard } from \"../../store/actions/boardAction\";\r\nimport { withRouter } from \"react-router\";\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport { Component } from \"react\";\r\nimport { CardContent } from \"./CardContent\";\r\n\r\n\r\nclass _Card extends Component {\r\n\r\n    state = {\r\n        card: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.cardId !== this.props.match.params.cardId) this.loadCard()\r\n        if (prevProps.board._id !== this.props.board._id) this.loadCard()\r\n    }\r\n\r\n    loadCard = () => {\r\n        const { board } = this.props\r\n        const { cardId } = this.props.match.params\r\n        if (cardId && board.groups) {\r\n            const card = cardService.getCardById(board, cardId)\r\n            this.setState({ card })\r\n        }\r\n    }\r\n\r\n    saveCardChanges = async (card) => {\r\n        const { board } = this.props\r\n        const newBoard = await this.props.updateBoardCard(board, card)\r\n        this.setState({card})\r\n    }\r\n\r\n    onChangetitle = ({target}) => {\r\n        const {value} = target\r\n        this.setState(prevState => ({card:{...prevState.card, title: value}}))\r\n    }\r\n\r\n    onSaveTitle(ev){\r\n        ev.preventDefault()\r\n        this.saveCardChanges(this.state.card)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.board);\r\n        const { card } = this.state\r\n        if (!card) return null\r\n        return (\r\n            <section className={\"card-modal-screen flex center\"}>\r\n                <div className=\"card-modal grid\">\r\n                    <div className=\"header flex\">\r\n                        <WebIcon/>\r\n                        <form onSubmit={this.onSaveTitle}></form>\r\n                        <input \r\n                        type=\"text\"\r\n                        value={card.title}\r\n                        onChange={this.onChangetitle}\r\n                        />\r\n                    </div>\r\n                    <CardContent card={card} save={this.saveCardChanges} />\r\n                    <div className=\"card-options\">\r\n                        options <br/>options <br/>options <br/>options\r\n                    <div className=\"add-to-card\"></div>\r\n                        <div className=\"card-actions\"></div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoardCard\r\n}\r\n\r\nexport const Card = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Card))\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\utilService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\cardService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\userService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\GroupPreview.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardContent.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\cardActions.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\ActivityList.jsx",["227","228"],"import { Component } from \"react\"\r\n\r\n//icons:\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\n// import FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\nexport class ActivityList extends Component {\r\n\r\n    state = {\r\n        isShown: false\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n    render() {\r\n        const { activities, inMenu } = this.props\r\n        const { isShown } = this.state\r\n        return <div className=\"attachments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                {!inMenu && <div className=\"flex align-start\">\r\n                    <span><PlaylistAddCheckIcon /></span>\r\n                    <h4 className=\"option-title\">Activity</h4>\r\n                </div>}\r\n                {!inMenu && <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>}\r\n            </header>\r\n            {isShown || inMenu && activities.map(act =>\r\n                <div key={act.id}>\r\n                    <span>{act.createdBy.fullname}: </span>\r\n                    <span> {act.txt}</span>\r\n                    <br />\r\n                    <small>At: {act.createdAt}</small>\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\Label.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardCommentList.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardAttachmentList.jsx",["229"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const {card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = {txt, createdAt: Date.now(), createdBy: {},id: utilService.makeId()}\r\n        const newCard = {...card}\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    render() {\r\n        const {attachments} = this.props.card\r\n        if(!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <div className=\"flex\">\r\n            <AttachFileRoundedIcon style={{transform: \"rotate(35deg)\"}}/>\r\n            <h3>Attachments</h3>\r\n            </div>\r\n            {attachments.map(att => <a key={att.id} target=\"_blank\" href={att.url}><h4>{att.title}</h4></a>)}\r\n        </div>\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\card\\CardDescription.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\CardPreview.jsx",["230","231","232","233"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { cardService } from \"../services/cardService\";\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\n\r\nexport class CardPreview extends Component {\r\n\r\n    state = {\r\n        labels: [],\r\n        height: (this.props.isLabelOpen)?'fit-content':'7px',\r\n        width:(this.props.isLabelOpen)?'fit-content':'35px'\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { styles } = this.state\r\n        const { card, board,isLabelOpen } = this.props\r\n        const labels = cardService.getCardLabels(board, card.labels)\r\n        this.setState({ labels,\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps!==this.props){\r\n            this.setState({\r\n                height: (this.props.isLabelOpen)?'fit-content':'7px',\r\n                width:(this.props.isLabelOpen)?'fit-content':'35px'\r\n            })\r\n        }\r\n    }\r\n\r\nonOpenLabel=()=>{\r\n    this.props.openLabel()\r\n}\r\n\r\n    render() {\r\n        const { card, board,isLabelOpen } = this.props\r\n        const { labels,height,width } = this.state\r\n        return (\r\n            <div className=\"card-preview\">\r\n             \r\n                <div className=\"label-container\">\r\n                    { labels.map((label, idx) =>{\r\n                        return <div onClick={this.onOpenLabel} key={idx} className={`label ${(isLabelOpen)? \"is-open\":\"is-close\"}`} style={{backgroundColor:label.color}}>\r\n                             {isLabelOpen&&label.title}\r\n                              </div>\r\n                              })\r\n                            }\r\n                </div>\r\n                    <Link to={`/board/${board._id}/${card.id}`}>{card.title}\r\n                <div className=\"card-icons\">\r\n                    {card.description && <SubjectIcon />}\r\n                    {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\r\n                    {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\r\n                    {card.checklists?.length > 0 && <CheckBoxIcon />}\r\n\r\n                </div>\r\n                    </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",["234","235"],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\reducers\\menuReducer.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\store\\actions\\menuAction.js",["236"],"import { menuService } from '../../services/menuService.js'\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_PHOTOS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\services\\menuService.js",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\Menu.jsx",["237","238"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//cmps:\r\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\r\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\r\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\r\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\r\nimport { SectionMore } from './menuFirstSee/menuTopOptions/SectionMore.jsx'\r\nimport { MenuButler } from './menuFirstSee/MenuButler';\r\nimport { MenuPowerups } from './menuFirstSee/MenuPowerups';\r\nimport { MenuMap } from './menuFirstSee/MenuMap';\r\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\r\nimport { ActivityList } from '../card/ActivityList.jsx'\r\n\r\n\r\n//icons:\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport ArrowUpwardSharpIcon from '@material-ui/icons/ArrowUpwardSharp';\r\n\r\n\r\nclass _Menu extends Component {\r\n\r\n    state = {\r\n        menuTitle: 'Menu',\r\n        currMenu: null,\r\n        inMenu: true\r\n    }\r\n\r\n\r\n    goBack = () => { this.setState({ currMenu: null }) }\r\n\r\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\r\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\r\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\r\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\r\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\r\n    openButler = () => { this.setState({ menuTitle: \"butler\", currMenu: 'MenuButler' }) }\r\n    openPowerups = () => { this.setState({ menuTitle: \"Power-ups\", currMenu: 'MenuPowerups' }) }\r\n    openMap = () => { this.setState({ menuTitle: \"Map\", currMenu: 'MenuMap' }) }\r\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\r\n\r\n    render() {\r\n\r\n\r\n        const { currMenu, menuTitle, inMenu } = this.state\r\n        const { board } = this.props\r\n\r\n        return (\r\n            <section className=\"menu\">\r\n                <div className=\"menu-top\">\r\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\r\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\r\n                    <button className=\"close-menu-btn\" onClick={this.props.closeMenu}><CloseIcon /></button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openAbout}>\r\n                        <span><InfoIcon /></span>\r\n                        <div className=\"about-all-desc\">\r\n                            <h4 className=\"about-this-board\">About This Board</h4>\r\n                            <span className=\"about-desc\">Add a description to your board</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openBgs}>\r\n                        <span>< WallpaperIcon /></span>\r\n                        <h4 className=\"option-title\">Change Background</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openSearch}>\r\n                        <span><SearchIcon /></span>\r\n                        <h4 className=\"option-title\">Search Cards</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openStickers}>\r\n                        <span><LabelImportantIcon /></span>\r\n                        <h4 className=\"option-title\">Stickers</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openMore}>\r\n                        <span><MoreHorizIcon /></span>\r\n                        <h4 className=\"option-title\">More</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openButler}>\r\n                        <span className=\"butler-icon\">🤖</span>\r\n                        <div className=\"butler-div\">\r\n                            <h4> Butler</h4>\r\n                            <span>Automate cards and more...</span>\r\n                        </div>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openPowerups}>\r\n                        <span className=\"powerups-icon\"><ArrowUpwardSharpIcon /></span>\r\n                        <div className=\"powerups-div\">\r\n                            <h4>Power-Ups</h4>\r\n                            <span className=\"power-ups-desc\">Calendar, Google Drive and more...</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openMap}>\r\n                        <span><RoomIcon /></span>\r\n                        <h4 className=\"option-title\">Map</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openActivity}>\r\n                        <span><PlaylistAddCheckIcon /></span>\r\n                        <h4 className=\"option-title\">Activity</h4>\r\n                    </button>\r\n                    <ActivityList activities={board.activities} inMenu={inMenu} />\r\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\r\n                </section>}\r\n                <DynamicCmp currMenu={currMenu} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n}\r\nexport const Menu = connect(mapStateToProps, mapDispatchToProps)(_Menu)\r\n\r\n\r\nfunction DynamicCmp({ currMenu }) {\r\n    switch (currMenu) {\r\n        case 'SectionAbout':\r\n            return <SectionAbout />\r\n        case 'SectionBackground':\r\n            return <SectionBackground />\r\n        case 'SectionSearch':\r\n            return <SectionSearch />\r\n        case 'SectionStickers':\r\n            return <SectionStickers />\r\n        case 'SectionMore':\r\n            return <SectionMore />\r\n        case 'MenuButler':\r\n            return <MenuButler />\r\n        case 'MenuPowerups':\r\n            return <MenuPowerups />\r\n        case 'MenuMap':\r\n            return <MenuMap />\r\n        case 'MenuActivity':\r\n            return <MenuActivity />\r\n        default:\r\n            return <h2></h2>\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx",["239","240","241"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\r\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\r\n\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n//imgs:\r\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\r\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\r\n\r\nexport class SectionBackground extends Component {\r\n\r\n    state = {\r\n        currType: null,\r\n        menuTitle: 'Change Background',\r\n        photosSrc,\r\n        colorsSrc\r\n    }\r\n\r\n    goBackBg = () => { this.setState({ currType: null }) }\r\n\r\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\r\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\r\n\r\n    render() {\r\n        const { currType, photosSrc, colorsSrc } = this.state\r\n        return (\r\n            <section className=\"background-section\">\r\n                {currType === null && <section className=\"flex photos-colors\">\r\n                    <div className=\"photos\">\r\n                        <button onClick={this.choosePhotos}>\r\n                            <img src={photosSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Photos</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"colors\">\r\n                        <button onClick={this.chooseColors}>\r\n                            <img src={colorsSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Colors</span>\r\n                        </button>\r\n                    </div>\r\n                </section>}\r\n                {currType && <button className=\"back-bg-btn\" onClick={this.goBackBg}><ArrowBackIosIcon /></button>}\r\n                <hr className=\"hr-menu\" />\r\n                <DynamicCmpBg currType={currType} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction DynamicCmpBg({ currType }) {\r\n    switch (currType) {\r\n        case 'PhotosArea':\r\n            return <PhotosArea />\r\n        case 'ColorsArea':\r\n            return <ColorsArea />\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx",["242"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n//icons:\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n//functions:\r\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\r\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\r\n\r\n//imgs:\r\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\r\n\r\nclass _PhotosArea extends Component {\r\n\r\n    state = {\r\n        photoSearch: '',\r\n        filterBy: {\r\n            name: ''\r\n        },\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ]\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.state.bgImgs[0]);\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.setFilter(this.state.filterBy)\r\n        })\r\n    }\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n    selectImg = (imgSrc) => {\r\n        imgSrc = '../assets/bgImgs/' + (imgSrc.substr(14)).substr(0, 8) + '.jpg'\r\n        console.log('edited imgSrc:', imgSrc);\r\n        this.props.setBackground(this.props.board, { backgroundImage: imgSrc })\r\n    }\r\n\r\n    get imgsForDidsplay() {\r\n        let imgs = this.state.bgImgs\r\n        const regex = new RegExp(this.props.filterBy, 'i')\r\n        imgs = imgs.filter(img => regex.test(img.title))\r\n        return imgs\r\n    }\r\n    render() {\r\n        const { name } = this.state.filterBy\r\n        const imgs = this.imgsForDidsplay\r\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"photo-type\">\r\n                <div className=\"flex search-photo\">\r\n                    <SearchIcon /><input type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Photos\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"photos-area\">\r\n                    {imgs.map((img, idx) => {\r\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                            onClick={() => { this.selectImg(img.src) }}>\r\n                            <img src={img.src} />\r\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        filterBy: state.menuModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBackground,\r\n    setFilter\r\n}\r\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\r\n\r\n","D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx",[],"D:\\עדינה\\coding academy\\sprint-4-Trello\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":23,"column":35,"nodeType":"249","messageId":"250","endLine":23,"endColumn":37},{"ruleId":"251","severity":1,"message":"252","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"251","severity":1,"message":"255","line":32,"column":11,"nodeType":"253","messageId":"254","endLine":32,"endColumn":15},{"ruleId":"251","severity":1,"message":"256","line":1,"column":10,"nodeType":"253","messageId":"254","endLine":1,"endColumn":16},{"ruleId":"251","severity":1,"message":"257","line":36,"column":15,"nodeType":"253","messageId":"254","endLine":36,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":28,"column":22,"nodeType":"260","messageId":"261","endLine":28,"endColumn":24},{"ruleId":"258","severity":1,"message":"259","line":28,"column":32,"nodeType":"260","messageId":"261","endLine":28,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":25,"column":37,"nodeType":"264","endLine":25,"endColumn":84},{"ruleId":"251","severity":1,"message":"265","line":19,"column":17,"nodeType":"253","messageId":"254","endLine":19,"endColumn":23},{"ruleId":"251","severity":1,"message":"266","line":20,"column":29,"nodeType":"253","messageId":"254","endLine":20,"endColumn":40},{"ruleId":"251","severity":1,"message":"267","line":40,"column":24,"nodeType":"253","messageId":"254","endLine":40,"endColumn":30},{"ruleId":"251","severity":1,"message":"268","line":40,"column":31,"nodeType":"253","messageId":"254","endLine":40,"endColumn":36},{"ruleId":"243","replacedBy":"269"},{"ruleId":"245","replacedBy":"270"},{"ruleId":"251","severity":1,"message":"271","line":1,"column":10,"nodeType":"253","messageId":"254","endLine":1,"endColumn":21},{"ruleId":"251","severity":1,"message":"272","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":161,"column":20,"nodeType":"264","endLine":161,"endColumn":24},{"ruleId":"275","severity":1,"message":"276","line":37,"column":29,"nodeType":"264","endLine":37,"endColumn":75},{"ruleId":"275","severity":1,"message":"276","line":43,"column":29,"nodeType":"264","endLine":43,"endColumn":75},{"ruleId":"273","severity":1,"message":"274","line":62,"column":20,"nodeType":"264","endLine":62,"endColumn":24},{"ruleId":"275","severity":1,"message":"276","line":108,"column":29,"nodeType":"264","endLine":108,"endColumn":50},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'httpService' is defined but never used.","Identifier","unusedVar","'copy' is assigned a value but never used.","'render' is defined but never used.","'newBoard' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'styles' is assigned a value but never used.","'isLabelOpen' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.",["277"],["278"],"'menuService' is defined but never used.","'Link' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]