[{"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/index.js":"1","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/serviceWorkerRegistration.js":"2","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/reportWebVitals.js":"3","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/store.js":"4","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/App.jsx":"5","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/index.js":"6","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/reviewReducer.js":"7","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/systemReducer.js":"8","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/boardReducer.js":"9","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/userReducer.js":"10","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/cardReducer.js":"11","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/menuReducer.js":"12","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardList.jsx":"13","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/socketService.js":"14","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Home.jsx":"15","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Header.jsx":"16","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Board.jsx":"17","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Dashboard.jsx":"18","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/boardAction.js":"19","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardPreview.jsx":"20","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/cardService.js":"21","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/boardService.js":"22","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupList.jsx":"23","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMapShow.jsx":"24","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardHeader.jsx":"25","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/Menu.jsx":"26","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Archive.jsx":"27","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Card.jsx":"28","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/utilService.js":"29","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/httpService.js":"30","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/MyAvatar.jsx":"31","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivitiesList.jsx":"32","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddDueDateModal.jsx":"33","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardMenu.jsx":"34","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/DynamicCardActionModal.jsx":"35","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserCards.jsx":"36","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserActivities.jsx":"37","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionAbout.jsx":"38","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionSearch.jsx":"39","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionBackground.jsx":"40","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionStickers.jsx":"41","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionLabels.jsx":"42","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentPreview.jsx":"43","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/userActions.js":"44","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/menuAction.js":"45","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/userService.js":"46","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardContent.jsx":"47","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupPreview.jsx":"48","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivity.jsx":"49","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/ColorsArea.jsx":"50","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/PhotosArea.jsx":"51","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/menuService.js":"52","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberListModal.jsx":"53","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelListModal.jsx":"54","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddChecklistModal.jsx":"55","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MoveCardModal.jsx":"56","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddCoverModal.jsx":"57","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CopyCardModal.jsx":"58","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddAttachmentModal.jsx":"59","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/UserSearchBy.jsx":"60","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/LabelSearchBy.jsx":"61","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/cardActions.js":"62","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardAttachmentList.jsx":"63","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentList.jsx":"64","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelList.jsx":"65","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberList.jsx":"66","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklistList.jsx":"67","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardDescription.jsx":"68","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardList.jsx":"69","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/AddCardInput.jsx":"70","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupMenu.jsx":"71","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklist.jsx":"72","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPreview.jsx":"73","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Todo.jsx":"74","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/LinearProgressBar.jsx":"75","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/cardEdit.jsx":"76","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/cardDetails.jsx":"77","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardDetails.jsx":"78","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardEdit.jsx":"79","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/ShareCardModal.jsx":"80","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Login.jsx":"81","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Signup.jsx":"82","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserMenuModal.jsx":"83","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/TimeDisplay.jsx":"84"},{"size":991,"mtime":1611221020692,"results":"85","hashOfConfig":"86"},{"size":5064,"mtime":1610480913306,"results":"87","hashOfConfig":"86"},{"size":364,"mtime":1610480913306,"results":"88","hashOfConfig":"86"},{"size":312,"mtime":1610480913309,"results":"89","hashOfConfig":"86"},{"size":1515,"mtime":1611242699265,"results":"90","hashOfConfig":"86"},{"size":544,"mtime":1611177853855,"results":"91","hashOfConfig":"86"},{"size":647,"mtime":1610480913309,"results":"92","hashOfConfig":"86"},{"size":309,"mtime":1610480913309,"results":"93","hashOfConfig":"86"},{"size":605,"mtime":1611230586742,"results":"94","hashOfConfig":"86"},{"size":719,"mtime":1611244513519,"results":"95","hashOfConfig":"86"},{"size":360,"mtime":1610581763949,"results":"96","hashOfConfig":"86"},{"size":268,"mtime":1610806693749,"results":"97","hashOfConfig":"86"},{"size":901,"mtime":1611087970412,"results":"98","hashOfConfig":"86"},{"size":1759,"mtime":1611059379623,"results":"99","hashOfConfig":"86"},{"size":297,"mtime":1611006710909,"results":"100","hashOfConfig":"86"},{"size":2511,"mtime":1611259740676,"results":"101","hashOfConfig":"86"},{"size":2116,"mtime":1611256287748,"results":"102","hashOfConfig":"86"},{"size":2636,"mtime":1611087436487,"results":"103","hashOfConfig":"86"},{"size":6683,"mtime":1611273540031,"results":"104","hashOfConfig":"86"},{"size":388,"mtime":1611087436483,"results":"105","hashOfConfig":"86"},{"size":2999,"mtime":1611154075874,"results":"106","hashOfConfig":"86"},{"size":6801,"mtime":1611273487721,"results":"107","hashOfConfig":"86"},{"size":3879,"mtime":1611150823789,"results":"108","hashOfConfig":"86"},{"size":1225,"mtime":1610892226053,"results":"109","hashOfConfig":"86"},{"size":1781,"mtime":1611272540359,"results":"110","hashOfConfig":"86"},{"size":5244,"mtime":1611256309368,"results":"111","hashOfConfig":"86"},{"size":5928,"mtime":1611233371260,"results":"112","hashOfConfig":"86"},{"size":4156,"mtime":1611230517492,"results":"113","hashOfConfig":"86"},{"size":656,"mtime":1610647470146,"results":"114","hashOfConfig":"86"},{"size":1037,"mtime":1611058838420,"results":"115","hashOfConfig":"86"},{"size":556,"mtime":1611275997919,"results":"116","hashOfConfig":"86"},{"size":583,"mtime":1610892226053,"results":"117","hashOfConfig":"86"},{"size":1470,"mtime":1610926696429,"results":"118","hashOfConfig":"86"},{"size":2490,"mtime":1611144158108,"results":"119","hashOfConfig":"86"},{"size":2460,"mtime":1611144718253,"results":"120","hashOfConfig":"86"},{"size":547,"mtime":1611087436485,"results":"121","hashOfConfig":"86"},{"size":780,"mtime":1611087436485,"results":"122","hashOfConfig":"86"},{"size":3745,"mtime":1611233787912,"results":"123","hashOfConfig":"86"},{"size":1443,"mtime":1611005165112,"results":"124","hashOfConfig":"86"},{"size":2152,"mtime":1611005165111,"results":"125","hashOfConfig":"86"},{"size":2116,"mtime":1610892226055,"results":"126","hashOfConfig":"86"},{"size":6814,"mtime":1611087436487,"results":"127","hashOfConfig":"86"},{"size":579,"mtime":1611276194885,"results":"128","hashOfConfig":"86"},{"size":857,"mtime":1611260573068,"results":"129","hashOfConfig":"86"},{"size":664,"mtime":1610892226057,"results":"130","hashOfConfig":"86"},{"size":1383,"mtime":1611260718447,"results":"131","hashOfConfig":"86"},{"size":1267,"mtime":1611056501691,"results":"132","hashOfConfig":"86"},{"size":6804,"mtime":1611229291024,"results":"133","hashOfConfig":"86"},{"size":2056,"mtime":1611087436486,"results":"134","hashOfConfig":"86"},{"size":1619,"mtime":1611005165110,"results":"135","hashOfConfig":"86"},{"size":5649,"mtime":1611005165111,"results":"136","hashOfConfig":"86"},{"size":293,"mtime":1610892226057,"results":"137","hashOfConfig":"86"},{"size":2718,"mtime":1611136754175,"results":"138","hashOfConfig":"86"},{"size":2341,"mtime":1611065789856,"results":"139","hashOfConfig":"86"},{"size":1904,"mtime":1610921263752,"results":"140","hashOfConfig":"86"},{"size":2186,"mtime":1611162773030,"results":"141","hashOfConfig":"86"},{"size":3877,"mtime":1611242974360,"results":"142","hashOfConfig":"86"},{"size":2843,"mtime":1611084084002,"results":"143","hashOfConfig":"86"},{"size":1903,"mtime":1611069008885,"results":"144","hashOfConfig":"86"},{"size":505,"mtime":1611005165112,"results":"145","hashOfConfig":"86"},{"size":1924,"mtime":1611005165112,"results":"146","hashOfConfig":"86"},{"size":680,"mtime":1610584712043,"results":"147","hashOfConfig":"86"},{"size":1804,"mtime":1611227273523,"results":"148","hashOfConfig":"86"},{"size":2745,"mtime":1610892226068,"results":"149","hashOfConfig":"86"},{"size":1035,"mtime":1611066931784,"results":"150","hashOfConfig":"86"},{"size":1056,"mtime":1611069083410,"results":"151","hashOfConfig":"86"},{"size":1621,"mtime":1611056024213,"results":"152","hashOfConfig":"86"},{"size":2170,"mtime":1611145058550,"results":"153","hashOfConfig":"86"},{"size":2553,"mtime":1611155625203,"results":"154","hashOfConfig":"86"},{"size":1026,"mtime":1611087436483,"results":"155","hashOfConfig":"86"},{"size":1207,"mtime":1611087436484,"results":"156","hashOfConfig":"86"},{"size":2064,"mtime":1611056437484,"results":"157","hashOfConfig":"86"},{"size":4234,"mtime":1611226697485,"results":"158","hashOfConfig":"86"},{"size":2994,"mtime":1611135980466,"results":"159","hashOfConfig":"86"},{"size":558,"mtime":1610673370614,"results":"160","hashOfConfig":"86"},{"size":7684,"mtime":1611087886987,"results":"161","hashOfConfig":"86"},{"size":3799,"mtime":1611087436507,"results":"162","hashOfConfig":"86"},{"size":3735,"mtime":1611225792252,"results":"163","hashOfConfig":"86"},{"size":7333,"mtime":1611313343228,"results":"164","hashOfConfig":"86"},{"size":834,"mtime":1611146454381,"results":"165","hashOfConfig":"86"},{"size":3874,"mtime":1611182330681,"results":"166","hashOfConfig":"86"},{"size":6263,"mtime":1611181565719,"results":"167","hashOfConfig":"86"},{"size":1822,"mtime":1611225294182,"results":"168","hashOfConfig":"86"},{"size":1262,"mtime":1611312385152,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"f4780n",{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"172"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"172"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"172"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"172"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"172"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"172"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"172"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"172"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"172"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"172"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"172"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"172"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"172"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"172"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"172"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"172"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"172"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"172"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"172"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"172"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"172"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"172"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"172"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"172"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"172"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"172"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"172"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"172"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"355"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"355"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"172"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"172"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"172"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/index.js",[],["376","377"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/serviceWorkerRegistration.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/reportWebVitals.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/store.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/App.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/index.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/reviewReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/systemReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/boardReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/userReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/cardReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/reducers/menuReducer.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardList.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/socketService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Home.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Header.jsx",["378","379","380"],"import { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from '../store/actions/userActions'\n\n//icons:\nimport AppsIcon from '@material-ui/icons/Apps';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AddIcon from '@material-ui/icons/Add';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\n\n//cmps:\nimport { MenuMapShow } from './menu/menuFirstSee/MenuMapShow';\nimport { UserMenuModal } from './UserMenuModal';\nimport { MyAvatar } from './MyAvatar';\n\nclass _Header extends Component {\n    state = {\n        isMapOpen: false,\n        isUserModalOpen: false\n    }\n    toggleMap = () => { this.setState({ isMapOpen: !this.state.isMapOpen }) }\n\n    closeModal = () => { this.setState({ isUserModalOpen: false }) }\n\n    render() {\n        const { isMapOpen, isUserModalOpen } = this.state\n        const { board, loggedUser, logout } = this.props\n        // console.log('user', createdBy, 'board', board);\n        return (\n            <header className=\"main-header flex space-bt\">\n                <div className=\"flex align-center\">\n                    <Link to=\"/\"><AppsIcon /></Link>\n                    <Link to=\"/\"><HomeOutlinedIcon /></Link>\n                    <span className=\"show-boards flex align-center\"><InsertChartIcon style={{transform: 'rotate(180deg)'}}/> Boards</span>\n                </div>\n\n                <h2 className=\"app-logo\">Fello</h2>\n\n                <div className=\"flex align-center\">\n                    <Link to=\"/\"><AddIcon /></Link>\n                    <Link to=\"/dashboard\"><DashboardIcon /></Link>\n                    {loggedUser ? <div onClick={() => this.setState({ isUserModalOpen: true })}> <MyAvatar user={loggedUser} /></div>\n                        :\n                        <span onClick={() => this.setState({ isUserModalOpen: true })}> <AccountCircleIcon /></span>}\n                    {isUserModalOpen && <UserMenuModal logout={logout} closeModal={this.closeModal} board={board} user={loggedUser} />}\n                </div>\n            </header>\n        )\n\n    }\n\n\n}\nconst mapStateToProps = state => {\n    return {\n        loggedUser: state.userModule.loggedUser,\n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    logout\n}\n\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Board.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Dashboard.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/boardAction.js",["381"],"import { boardService } from '../../services/boardService.js'\nimport { cardService } from '../../services/cardService.js'\nimport { socketService } from '../../services/socketService.js'\n\nexport function loadBoards() {\n  return async dispatch => {\n    try {\n      const boards = await boardService.query()\n      dispatch({ type: 'SET_BOARDS', boards })\n    }\n    catch (err) {\n      console.log('boardActions: err in loadboards', err)\n    }\n  }\n}\n\nexport function cleanBoard() {\n  return async dispatch => {\n    dispatch({ type: 'SET_BOARD', board: null })\n    socketService.off('board update')\n  }\n}\nexport function updateBoard(board, newBoard) {\n  return async dispatch => {\n    try {\n      dispatch({ type: 'SET_BOARD', board: newBoard }) //drag end drop deley\n      boardService.updateBoard({ ...newBoard })\n    }\n    catch (err) {\n      dispatch({ type: 'SET_BOARD', board }) // if server returns error \n      console.log('boardActions: could not save', err);\n    }\n\n  }\n}\n\nexport function getBoardById(id) {\n  return async dispatch => {\n    try {\n      const board = await boardService.getById(id)\n      socketService.emit('join board', board._id)\n      dispatch({ type: 'SET_BOARD', board })\n      socketService.on('board update', updatedBoard => {\n        console.log('got socket event');\n        dispatch({ type: 'SET_BOARD', board: updatedBoard })\n      })\n    }\n    catch (err) {\n      console.log('err in loadBoard', err)\n    }\n  }\n}\n\nexport function addBoard(newBoard) {\n  return async dispatch => {\n    const board = await boardService.addBoard(newBoard)\n    dispatch({ type: 'ADD_BOARD', board })\n  }\n}\n\nexport function addGroup(board, group) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.addGroup(board, group)\n      dispatch({ type: 'SET_BOARD', board: newBoard })\n      boardService.updateBoard(newBoard)\n    }\n    catch (err) {\n      console.log('err in loadBoard', err)\n      dispatch({ type: 'SET_BOARD', board })\n\n    }\n  }\n}\n\nexport function addCard(board, group, cardToAdd) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.addCard(board, group, cardToAdd)\n      dispatch({ type: 'SET_BOARD', board: newBoard })\n      boardService.updateBoard(newBoard)\n    }\n    catch (err) {\n      console.log('err in loadBoard', err)\n      dispatch({ type: 'SET_BOARD', board })\n\n    }\n  }\n}\n\n\nexport function updateBoardCard(board, card) {\n  return async dispatch => {\n    try {\n      const updatedBoard = await boardService.updateBoardCard(board, card)\n      console.log(updatedBoard);\n      dispatch({ type: 'SET_BOARD', board: updatedBoard }) //drag end drop deley\n      boardService.updateBoard({ ...updatedBoard })\n    }\n    catch (err) {\n      dispatch({ type: 'SET_BOARD', board }) // if server returns error \n      console.log('boardActions: could not save', err);\n    }\n\n  }\n}\n\nexport function openLabel() {\n  return dispatch => {\n    dispatch({ type: 'OPEN-LABELS' })\n  }\n}\n\nexport function setBackground(board, background) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.setStyle(board, background)\n      dispatch({ type: 'SET_BOARD', board: newBoard })\n      boardService.updateBoard(newBoard)\n    }\n    catch (err) {\n      console.log('err in loadBoard', err)\n      dispatch({ type: 'SET_BOARD', board })\n\n    }\n  }\n}\n\nexport function updateCardLocation(board, source, destination) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.updateCardLocation(board, source, destination)\n      dispatch({ type: 'SET_BOARD', board: newBoard })\n      boardService.updateBoard(newBoard)\n    }\n    catch (err) {\n      console.log('err in loadBoard', err)\n      dispatch({ type: 'SET_BOARD', board })\n\n    }\n  }\n}\n\nexport function updateGroupLoaction(board, groupId, source, destination) {\n  return async dispatch => {\n    try {\n      const updatedBoard = await boardService.updateGroupLoaction(board, groupId, source, destination)\n      console.log(updatedBoard)\n      dispatch({ type: 'SET_BOARD', board: updatedBoard }) //drag end drop deley\n      boardService.updateBoard(updatedBoard)\n    }\n    catch (err) {\n      dispatch({ type: 'SET_BOARD', board }) // if server returns error \n      console.log('boardActions: could not save', err);\n    }\n  }\n}\n\nexport function editGroupTitle(board, group, groupTitle) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.updateGroupTitle(board, group, groupTitle)\n      dispatch({ type: 'SET_BOARD', board: newBoard })\n      boardService.updateBoard(newBoard)\n    }\n    catch (err) {\n      console.log('err in loadBoard', err)\n      dispatch({ type: 'SET_BOARD', board })\n\n    }\n  }\n}\n\nexport function copyList(board, group) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.copyList(board, group)\n        dispatch({ type: 'SET_BOARD', board: newBoard })\n        boardService.updateBoard(newBoard)\n      }\n      catch (err) {\n        console.log('err in loadBoard', err)\n        dispatch({ type: 'SET_BOARD', board })\n  \n      }\n  }\n}\n\nexport function setFilter(filterBy) {\n  return (dispatch) => {\n    const action = {\n      type: 'SET_GROUPS_FILTER',\n      filterBy\n    }\n    dispatch(action)\n  }\n}\n\nexport function editCurrLabel(board, label, selectedColorLabel, act) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.editCurrLabel(board, label, selectedColorLabel, act)\n        dispatch({ type: 'SET_BOARD', board: newBoard })\n        boardService.updateBoard(newBoard)\n      }\n      catch (err) {\n        console.log('err in loadBoard', err)\n        dispatch({ type: 'SET_BOARD', board })\n  \n      }\n  }\n}\n\nexport function moveCard(board, card, to) {\n  return async dispatch => {\n    try {\n      const newBoard = await boardService.moveCard(board, card, to)\n        dispatch({ type: 'SET_BOARD', board: newBoard })\n        boardService.updateBoard(newBoard)\n      }\n      catch (err) {\n        console.log('err in loadBoard', err)\n        dispatch({ type: 'SET_BOARD', board })\n  \n      }\n  }\n}\n\nexport function onArchiveList(currBoard, currGroup) {\n  return async dispatch => {\n    try {\n      const board = await boardService.archiveList(currBoard, currGroup)\n      dispatch({ type: 'SET_BOARD', board })\n    }\n    catch (err) {\n      console.log('err in loadBoard', err);\n    }\n  }\n}\n\nexport function onArchiveCard(currBoard, currGroup, card) {\n  return async dispatch => {\n    try {\n      const board = await boardService.archiveCard(currBoard, currGroup, card)\n      dispatch({ type: 'SET_BOARD', board })\n    }\n    catch (err) {\n      console.log('err in loadBoard', err);\n    }\n  }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardPreview.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/cardService.js",["382"],"import { utilService } from './utilService'\n\nexport const cardService = {\n    getCardById,\n    getCards,\n    getCardLabels,\n    getCardForUpdate,\n    updateChecklistTodo,\n    removeChecklist,\n    getActivityToAdd,\n    getCommentToAdd,\n    handleChecklistDrag,\n    handleTodoDrag\n\n}\n\nfunction getCardById(board, cardId) {\n    var currCard\n    board.groups.forEach(group => group.cards.forEach(card => {\n        if (card.id === cardId) currCard = JSON.parse(JSON.stringify(card))\n    }))\n    if (!currCard) return null\n    const labels = getCardLabels(board, currCard.labels)\n    const activities = _getCardActivities(board, cardId)\n    return { ...currCard, labels, activities }\n}\n\nfunction getCardForUpdate(card) {\n    const labels = card.labels.map(label => label?.id)\n    const newCard = JSON.parse(JSON.stringify(card))\n    delete newCard.activities\n    // const newCard = JSON.parse(JSON.stringify(card))  //got error on json actions\n    return { ...newCard, labels }\n\n\n}\nfunction _getCardActivities(board, cardId) {\n    return board.activities.filter(act => act.card.id === cardId)\n}\n\nfunction getCardLabels(board, labels) {\n    return board.labels.filter(label => labels?.includes(label.id))\n}\n\nfunction getCards(group) {\n    const cards = group.cards\n    return cards\n}\n\nfunction updateChecklistTodo(card, checklist, todo) {\n    const todoToUpdate = JSON.parse(JSON.stringify(todo))\n    const newCard = JSON.parse(JSON.stringify(card))\n    if (todoToUpdate.id) var todos = checklist.todos.map(todo => (todo.id === todoToUpdate.id) ? todoToUpdate : todo)\n    else {\n        todoToUpdate.id = utilService.makeId()\n        todos = [...checklist.todos, todoToUpdate]\n    }\n    const currChecklist = { ...checklist, todos }\n    const checklists = card.checklists.map(checklist => (checklist.id === currChecklist.id) ? currChecklist : checklist)\n    return { ...newCard, checklists }\n}\n\nfunction removeChecklist(card, currChecklist) {\n    const checklists = card.checklists.filter(checklist => checklist.id !== currChecklist.id)\n    const newCard = JSON.parse(JSON.stringify(card))\n    return { ...newCard, checklists }\n}\n\nfunction getActivityToAdd(card, user, txt) {\n\n    return {\n        id: utilService.makeId(),\n        txt,\n        createdAt: Date.now(),\n        createdBy: user,\n        card: {\n            id: card.id,\n            title: card.title\n        }\n    }\n\n}\n\nfunction getCommentToAdd(txt, user) {\n    return { txt, createdAt: Date.now(), createdBy: user, id: utilService.makeId() }\n}\n\n\nfunction handleTodoDrag(board, card, res) {\n    var newCard\n    if (res.type = 'checklists') newCard = cardService.handleChecklistDrag(card, res)\n    return newCard\n\n}\n\nfunction handleChecklistDrag( card, res) {\n    console.log(card);\n    const checklists = [...card.checklists]\n    const checklist = checklists.splice(res.source.index, 1)[0]\n    checklists.splice(res.destination.index, 0, checklist)\n    const newCard = { ...card, checklists }\n    console.log(newCard)\n    return newCard\n\n}\n\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/boardService.js",["383","384","385"],"import { utilService } from './utilService'\nimport { httpService } from './httpService'\nimport { cardService } from './cardService'\n\n\n\nexport const boardService = {\n    query,\n    getById,\n    addCard,\n    addGroup,\n    updateBoardCard,\n    updateCardLocation,\n    updateGroupLoaction,\n    addBoard,\n    updateGroupTitle,\n    updateBoardDesc,\n    getActivities,\n    setStyle,\n    copyList,\n    editCurrLabel,\n    updateBoard,\n    moveCard,\n    archiveList,\n    archiveCard\n\n\n}\n\n\n\n\nasync function query() {\n    console.log('sevice got req');\n    try {\n        const boards = await httpService.get('/board')\n        return boards\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nasync function getById(id) {\n    try {\n        const board = await httpService.get('/board/' + id)\n        return board\n    } catch (err) {\n        console.log(err)\n    }\n\n}\n\nasync function addBoard(board) {\n    const newBoard = { ...board, _id: utilService.makeId() }\n    try {\n        const boardAfter = await httpService.post('/board', newBoard)\n        return boardAfter\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n\nasync function updateBoardCard(currBoard, card) { //will it be a problem with idxs due to d&d?\n    const board = JSON.parse(JSON.stringify(currBoard))\n    const cardToUpdate = cardService.getCardForUpdate(card)\n    const newGroups = board.groups.map(group => {\n        const cards = group.cards.map(card => (card.id === cardToUpdate.id) ? cardToUpdate : card)\n        return { ...group, cards }\n    })\n    const newBoard = { ...board, groups: newGroups }\n    return newBoard\n}\n\nasync function addCard(board, group, currCard, isAddingToTop) {\n    const card = { ...currCard, createdAt: Date.now(), id: utilService.makeId() }\n    const newGroup = (isAddingToTop) ? { ...group, cards: [card, ...group.cards] } : { ...group, cards: [...group.cards, card] }\n    const newGroups = board.groups.map(group => (group.id === newGroup.id ? newGroup : group))\n    const newBoard = { ...board, groups: newGroups }\n   return newBoard\n}\n\n\nasync function addGroup(board, group) {\n    const newGroup = { ...group, createdAt: Date.now(), id: utilService.makeId() }\n    const newGroups = [...board.groups, newGroup]\n    const newBoard = { ...board, groups: newGroups }\n    return newBoard\n}\n\nfunction updateCardLocation(board, source, destination) {\n    console.log('dnd:', source, destination)\n    const currBoard = JSON.parse(JSON.stringify(board))\n    const fromGroupIdx = currBoard.groups.findIndex(group => group.id === source.droppableId)\n    const toGroupIdx = currBoard.groups.findIndex(group => group.id === destination.droppableId)\n    const currCard = currBoard.groups[fromGroupIdx].cards[source.index]\n    currBoard.groups[fromGroupIdx].cards.splice(source.index, 1)\n    currBoard.groups[toGroupIdx].cards.splice(destination.index, 0, currCard)\n    return currBoard\n}\n\nasync function updateGroupLoaction(board, groupId, source, destination) {\n    const currBoard = JSON.parse(JSON.stringify(board))\n    const currGroup = currBoard.groups.find(group => group.id === groupId)\n    currBoard.groups.splice(source.index, 1)\n    currBoard.groups.splice(destination.index, 0, currGroup)\n    return currBoard\n}\n\nasync function updateGroupTitle(board, currGroup, title) {\n\n    const newGroups = board.groups.map(group => (group.id === currGroup.id) ? { ...group, title } : group)\n    const newBoard = { ...board, groups: newGroups }\n}\n\nasync function setStyle(board, background) {\n    const newBoard = { ...board, style: background }\n   return newBoard\n}\n\nasync function updateBoardDesc(board, description) {\n    const newBoard = { ...board, description }\n    try {\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\n        return boardAfter\n    } catch (err) {\n        console.log(err)\n    }\n}\n\nfunction getActivities(board, filter) {\n    const cardsComments = []\n    board.groups.forEach(group => group.cards.forEach(card => {\n        if (card.comments) cardsComments.push(...card.comments)\n    }))\n    if (filter === 'all') return [...cardsComments, ...board.activities]\n    else return [...cardsComments]\n}\n\nasync function copyList(board, currGroup) {\n    const boardCopy = JSON.parse(JSON.stringify(board))\n    const groupCopy = JSON.parse(JSON.stringify(currGroup))\n    groupCopy.id = utilService.makeId()\n    groupCopy.cards.forEach(card => card.id = utilService.makeId())\n    const groupIdx = board.groups.findIndex(group => group.id === currGroup.id)\n    boardCopy.groups.splice((groupIdx + 1), 0, groupCopy)\n    return boardCopy\n\n}\n\n\nasync function editCurrLabel(board, currLabel, deleteOption) {\n\n    if (currLabel.id) {\n        if (deleteOption !== 'delete') {\n            var labels = board.labels.map(label => (label.id === currLabel.id) ? currLabel : label)\n        } else {\n            var labels = board.labels.filter(label => (label.id !== currLabel.id))\n        }\n    }\n    else {\n        currLabel.id = utilService.makeId()\n        var labels = [...board.labels, currLabel]\n    }\n    const newBoard = { ...board, labels }\n\n   return newBoard\n}\n\n\nasync function archiveList(currBoard, currGroup) {\n    const newBoard = { ...currBoard, groups: currBoard.groups.filter(group => group.id !== currGroup.id), archives: { ...currBoard.archives, groups: [...currBoard.archives.groups, currGroup] } }\n    try {\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\n        return boardAfter\n\n    } catch (err) {\n        console.log(err)\n    }\n\n}\n\n\nasync function updateBoard(board) {\n    try {\n        const boardAfter = await httpService.put('/board/' + board._id, board)\n        return boardAfter\n    } catch (err) {\n        console.log(err)\n    }\n\n}\nasync function moveCard(currBoard, currCard, to) {\n    console.log('currBoard, currCard, to', currBoard, currCard, to)\n    const groups = currBoard.groups.map((group, idx) => {\n        var cards\n        if (idx !== +to.groupIdx) {\n            cards = group.cards.filter(card => card.id !== currCard.id)\n        }\n        else {\n            cards = [...group.cards]\n            cards.splice(+to.cardIdx, 0, currCard)\n        }\n        return { ...group, cards }\n    })\n    const board = { ...currBoard, groups }\n    return board\n}\n\nasync function archiveCard(currBoard, currGroup, currCard) {\n    const newBoard = { ...currBoard }\n    const groupIdx = currBoard.groups.findIndex(group => group.id === currGroup.id)\n    const newCards = currBoard.groups[groupIdx].cards.filter(card => card.id !== currCard.id)\n    newBoard.groups[groupIdx].cards = newCards\n    newBoard.archives.cards.unshift(currCard)\n    try {\n        const boardAfter = await httpService.put('/board/' + newBoard._id, newBoard)\n        return boardAfter\n\n    } catch (err) {\n        console.log(err)\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupList.jsx",["386"],"import React, { Component } from 'react'\nimport { GroupPreview } from \"./GroupPreview\";\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\n\n\nexport class GroupList extends Component {\n\n    state = {\n        // isModalOpen:false,\n        group: {\n            title: '',\n            style: {},\n            cards: []\n        },\n        isAdding: false,\n        isEdit: {\n            isOpen: false,\n            id: ''\n        }\n    }\n    componentDidMount() {\n        this.cardRef = React.createRef()\n    }\n\n\n    handleChange = (ev) => {\n        const { group } = this.state\n        const { value } = ev.target\n        this.setState({\n            group: { ...group, title: value }\n        })\n    }\n\n    onAddGroup = () => {\n        const { group } = this.state\n        const { board } = this.props\n        this.props.addGroup(board, group)\n        this.setState({ group: { title: '', style: {}, cards: [] } })\n\n    }\n\n    handleEnter = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault()\n            this.onAddGroup()\n        }\n    }\n\n    discardChanges = (ev) => {\n        this.setState({ group: { title: '', style: {}, cards: [] } })\n        ev.currentTarget.blur()\n    }\n\n    handleDrag = (result) => {\n        const { board } = this.props\n        const { source, destination } = result\n\n        if (result.type === 'GROUP') {\n            const groupId = result.draggableId\n            this.props.updateGroupLoaction(board, groupId, source, destination)\n        } else {\n            const cardId = result.draggableId\n            this.props.updateCardLocation(board, source, destination)\n\n        }\n\n    }\n    enterEditMode = (id) => {\n\n        this.setState({ isEdit: { isOpen: true, id: id } })\n    }\n\n    exitEditMode = (ev) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n        this.setState({\n            isEdit: { isOpen: false, id: '' }\n        })\n    }\n\n    render() {\n        const { groups } = this.props.board\n        const { isEdit } = this.state\n        return (\n            // <DragDropContext onDragEnd={this.handleOnDragEnd}>\n            <DragDropContext onDragEnd={this.handleDrag}>\n                <Droppable droppableId=\"board\" type=\"GROUP\" direction=\"horizontal\">\n                    {(provided) => (\n\n                        <div ref={provided.innerRef} {...provided.droppableProps} className=\"group-container\" onClick={this.exitEditMode}  >\n                            {groups && groups.map((group, idx) => {\n                                return (\n                                    <GroupPreview exitEditMode={this.exitEditMode} enterEditMode={this.enterEditMode} isEdit={isEdit} key={group.id} idx={idx} listId={group.id} group={group} />\n                                )\n                            })}\n                            {provided.placeholder}\n\n                            <div className=\"hidden-actions-form-container add-group\" >\n                                <form action=\"\" className=\"hidden-actions-form\">\n                                    <input onKeyDown={this.handleEnter} className=\"add-list-input\" type=\"text\" placeholder=\"+ Add another list\" value={this.state.group.title} onChange={this.handleChange} />\n                                </form>\n                                <div className=\"hidden-actions flex list\">\n                                    <button onClick={this.onAddGroup}>Add List</button>\n                                    <button onClick={this.discardChanges} className=\"icon\">\n                                        <CloseSharpIcon />\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n}\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuMapShow.jsx",["387"],"\nimport { Component } from 'react'\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\n\n//icons:\nimport RoomIcon from '@material-ui/icons/Room';\n\n\nclass _MenuMapShow extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        gGoogleMap: ''\n    };\n\n    render() {\n        return (\n            <section className=\"map-section\">\n                <Map\n                    google={this.props.google}\n                    initialCenter={{ lat: 32.0749831, lng: 34.9120554 }}\n                    center={this.state.center}\n                    zoom={14}>\n\n                    <Marker\n                        name={'Current location'} />\n\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                        <div>\n                            <h1>{this.state.selectedPlace.name}</h1>\n                        </div>\n                    </InfoWindow>\n\n                </Map>\n            </section>\n        )\n    }\n}\nexport const MenuMapShow = GoogleApiWrapper({\n    apiKey: ('AIzaSyBzfpQbTtSYT__Qh9PIPLUnA9xBMKj1iFY')\n})(_MenuMapShow)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/BoardHeader.jsx",["388"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport EqualizerOutlinedIcon from '@material-ui/icons/EqualizerOutlined';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {updateBoard} from '../store/actions/boardAction';\n\n\nclass _BoardHeader extends Component {\n\n    state = {\n        title: this.props.board.title\n    }\n\n    saveBoard = (boardToUpdate) =>  {\n        const {board} = this.props\n        updateBoard(board, boardToUpdate)\n    }\n\n\n    render() {\n        const { openArchive, board, toggleMenu } = this.props\n        const style = board.isPrivate ? {color:'white'} : {}\n        if (!board) return\n        return (\n            <div className=\"board-header flex align-center space-bt\" >\n                <div className=\"flex\">\n                    <span className=\"flex align-center\" style={style}>\n                    <LockOutlinedIcon/>\n                    Private\n                    </span>\n                    <input type=\"text\" name=\"title\" value={this.state.title} autoComplete=\"off\" />\n                </div>\n\n                <div className=\"flex align center\">\n                    <span onClick={openArchive}><ArchiveOutlinedIcon /></span>\n                    <button onClick={toggleMenu} className=\"flex align-center\"><MoreHorizIcon />Show Menu</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.board,\n        boards: state.boardModule.boards,\n    }\n}\nconst mapDispatchToProps = {\n    updateBoard\n}\n\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/Menu.jsx",["389"],"import { Component } from 'react'\n\n//cmps:\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\nimport { MenuActivitiesList } from './menuFirstSee/MenuActivitiesList.jsx'\nimport { SectionLabels } from './menuFirstSee/menuTopOptions/SectionLabels.jsx'\n\n\n//icons:\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\n\n\nexport class Menu extends Component {\n\n    state = {\n        menuTitle: 'Menu',\n        currMenu: null,\n        inMenu: true,\n    }\n\n   \n\n    goBack = () => { this.setState({ currMenu: null }) }\n\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\n    openLabels = () => { this.setState({ menuTitle: \"Labels\", currMenu: 'SectionLabels' }) }\n\n    render() {\n\n\n        const { currMenu, menuTitle } = this.state\n        const { board, isMenuOpen, toggleMenu } = this.props\n        if (!board.activities) return null\n        return (\n            <section className={`menu flex col ${isMenuOpen ? 'open' : ''}`}>\n                <div className=\"menu-top\">\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\n                    <button className=\"close-menu-btn\" onClick={toggleMenu}><CloseIcon /></button>\n                </div>\n                <hr className=\"hr-menu\" />\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\n\n                    <button className=\"menu-option top-option\" onClick={this.openAbout}>\n                        <span><InfoIcon /></span>\n                        <div className=\"about-all-desc\">\n                            <h4 className=\"about-this-board\">About This Board</h4>\n                            <span className=\"about-desc\">Add a description to your board</span>\n                        </div>\n                    </button>\n\n                    <button className=\"menu-option\" onClick={this.openBgs}>\n                        <span>< WallpaperIcon /></span>\n                        <h4 className=\"option-title\">Change Background</h4>\n                    </button>\n\n                    {/* <button className=\"menu-option\" onClick={this.openSearch}>\n                        <span><SearchIcon /></span>\n                        <h4 className=\"option-title\">Search Cards</h4>\n                    </button> */}\n\n                    {/* <button className=\"menu-option\" onClick={this.openStickers}>\n                        <span><LabelImportantIcon /></span>\n                        <h4 className=\"option-title\">Stickers</h4>\n                    </button> */}\n\n                    <button className=\"menu-option\" onClick={this.openLabels}>\n                        <span><LabelOutlinedIcon /></span>\n                        <h4 className=\"option-title\">Labels</h4>\n                    </button>\n                    <hr className=\"hr-menu\" />\n                    <button className=\"menu-option\" onClick={this.openActivity}>\n                        <span><PlaylistAddCheckIcon /></span>\n                        <h4 className=\"option-title\">Activity</h4>\n                    </button>\n                    <MenuActivitiesList board={board} />\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\n                </section>}\n                <DynamicCmp currMenu={currMenu} board={board} />\n            </section >\n        )\n    }\n}\n\n\n\n\nfunction DynamicCmp({ currMenu, board }) {\n    switch (currMenu) {\n        case 'SectionAbout':\n            return <SectionAbout board={board} />\n        case 'SectionBackground':\n            return <SectionBackground />\n        case 'SectionSearch':\n            return <SectionSearch board={board} />\n        case 'SectionStickers':\n            return <SectionStickers />\n        case 'SectionLabels':\n            return <SectionLabels board={board} />\n        case 'MenuActivity':\n            return <MenuActivity board={board} />\n        default:\n            return null\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/Archive.jsx",["390","391"],"import React, { Component } from 'react'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { MyAvatar } from './MyAvatar'\n\nexport class Archive extends Component {\n\n\n    render() {\n        const { board } = this.props\n        return (\n            <React.Fragment>\n\n                <h3> ARCHIVE</h3>\n                <div className='group-container'>\n\n                    {board.archives.groups.map(group => {\n                        return (\n                            <div className='group-preview' >\n\n                                <div>\n                                    <span className=\"group-menu-btn\" >...</span>\n                                    <p>{group.title}-Archives</p>\n                                </div>\n                                <div className={'card-list'} style={{ overflow: 'none' }} >\n                                    {group.cards.map((card) => {\n                                        return (\n                                            <div className='card-preview' style={card.style}   >\n                                                <div className=\"label-container\">\n                                                    {card.labels?.map((label, idx) => {\n                                                        return <div key={label?.id} className={`label is-close`} style={{ backgroundColor: label?.color }}>\n                                                        </div>\n                                                    })\n                                                    }\n                                                </div>\n                                                <div className={`edit-and-title`} >\n                                                    <div>\n                                                        <p>{card.title}</p>\n                                                    </div>\n\n                                                </div>\n\n                                                <div className=\"card-icons \">\n                                                    <div className=\"card-icons-section1\">\n                                                        {card.description && <SubjectIcon />}\n                                                        {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                                                        {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                                                        {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n                                                    </div>\n                                                    {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member => <MyAvatar user={member} />)} </div>}\n                                                </div>\n\n                                            </div>\n\n                                        )\n                                    })}\n                                </div>\n                            </div>\n                        )\n                    })}\n\n\n                    <div className='group-preview' >\n\n                        <div>\n                            <span className=\"group-menu-btn\" >...</span>\n                            <p>Cards Archives</p>\n                        </div>\n\n                        <div className={'card-list'} style={{ overflow: 'none' }} >\n                            {board.archives.cards.map((card) => {\n                                return (\n                                    <div className='card-preview' style={card.style}   >\n                                        <div className=\"label-container\">\n                                            {card.labels.map((label, idx) => {\n                                                return <div key={label.id} className={`label is-close`} style={{ backgroundColor: label.color }}>\n                                                </div>\n                                            })\n                                            }\n                                        </div>\n                                        <div className={`edit-and-title`} >\n                                            <div>\n                                                <p>{card.title}</p>\n                                            </div>\n\n                                        </div>\n\n                                        <div className=\"card-icons \">\n                                            <div className=\"card-icons-section1\">\n                                                {card.description && <SubjectIcon />}\n                                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n                                            </div>\n                                            {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member => <MyAvatar user={member} />)} </div>}\n                                        </div>\n\n                                    </div>\n\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Card.jsx",["392"],"import { connect } from \"react-redux\";\nimport { cardService } from \"../../services/cardService.js\";\nimport { updateBoardCard } from \"../../store/actions/boardAction\";\nimport { withRouter } from \"react-router\";\nimport WebIcon from '@material-ui/icons/Web';\nimport { Component } from \"react\";\nimport { CardContent } from \"./CardContent\";\nimport { Link } from \"react-router-dom\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { CardMenu } from \"./CardMenu.jsx\";\nimport { DynamicCardActionModal } from \"./DynamicCardActionModal.jsx\";\nimport {AddDueDateModal} from \"./AddDueDateModal.jsx\";\n// import { CardAction } from \"./CardAction\";\n\nclass _Card extends Component {\n\n    state = {\n        card: null,\n        currModal: {},\n        title: ''\n    }\n\n    componentDidMount() {\n        this.loadCard()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.cardId !== this.props.match.params.cardId) this.loadCard()\n        if (prevProps.board._id !== this.props.board?._id) this.loadCard()\n    }\n\n    loadCard = () => {\n        const { board } = this.props\n        const { cardId } = this.props.match.params\n        if (cardId && board.groups) {\n            const card = cardService.getCardById(board, cardId)\n            this.setState({ card, title: card.title })\n        } else this.setState({ card: null })\n    }\n\n    saveCardChanges = async (card, txt) => {\n        var { board, loggedUser } = this.props\n        if (txt) {\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\n            board = {...board, activities: [activity, ...board.activities]}\n        } \n        await this.props.updateBoardCard(board, card)\n        this.loadCard()\n    }\n\n    onChangetitle = (ev) => {\n        const { value } = ev.target\n        this.setState({title: value })\n    }\n\n    onSaveTitle = (ev) => {\n        if (ev.key && ev.key !== 'Enter') return\n        const {card, title} = this.state\n        this.saveCardChanges({...card, title} ,'Edited card title')\n        ev.currentTarget?.blur()\n    }\n\n    closeModal = () =>{\n        const {currModal} = this.state\n        if (currModal?.name) this.setState({currModal: null})\n    }\n\n    setCurrModal = (currModal) => {\n        this.setState({currModal})\n    }\n\n    render() {\n        const { board, loggedUser } = this.props\n        const { card, currModal, title } = this.state\n        if (!card) return null\n        return (\n            <Link to={`/board/${board._id}`}>\n                <section onClick={this.closeModal} className={\"card-modal-screen flex justify-center\"}>\n                    <div onClick={(ev) => { ev.preventDefault() }} className=\"card-modal grid\">\n                        <div className=\"header flex\">\n                            <WebIcon />\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={this.onChangetitle}\n                                onBlur={this.onSaveTitle}\n                                onKeyDown={this.onSaveTitle}\n                            />\n                            <Link to={`/board/${board._id}`}><CloseSharpIcon /></Link>\n                        </div>\n                        <CardContent setCurrModal={this.setCurrModal} closeModal={this.closeModal} user={loggedUser} board={board} card={card} save={this.saveCardChanges} />\n                        <CardMenu setCurrModal={this.setCurrModal} closeModal={this.closeModal}/>\n                        <div  onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}}>\n                        <DynamicCardActionModal closeModal={this.closeModal} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\n                        </div>\n                    </div>\n                </section>\n            </Link>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedUser: state.userModule.loggedUser, \n        board: state.boardModule.board\n    }\n}\nconst mapDispatchToProps = {\n    updateBoardCard\n}\n\nexport const Card = withRouter(connect(mapStateToProps, mapDispatchToProps)(_Card))\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/utilService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/httpService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/MyAvatar.jsx",["393"],"import { makeStyles } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }))\n\nexport function MyAvatar({user}){\n     const classes = useStyles()\n    if (!user) return null\n    if (user.imgUrl) return  <Avatar alt={user.fullname} className={classes.small} src={user.imgUrl} />\n    return <Avatar className={classes[user.color], classes.small}>{user.fullname?.substring(0, 1)}</Avatar>\n\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivitiesList.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddDueDateModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardMenu.jsx",["394"],"import PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport WebIcon from '@material-ui/icons/Web';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport RemoveRedEyeOutlinedIcon from '@material-ui/icons/RemoveRedEyeOutlined';\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nexport function CardMenu(props) {\n\n    function setModal(modal,ev){\n        ev.stopPropagation()\n        ev.preventDefault() \n        props.setCurrModal({name: modal})\n    }\n\n    return (\n        <div onClick={props.closeModal} className=\"card-action-menu flex col\">\n            <h5>ADD TO CARD</h5>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('members',ev)}><PersonOutlineIcon/> Members</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('labels', ev)}><LabelOutlinedIcon/> Labels</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('checklist', ev)}><PlaylistAddCheckIcon/> Checklist</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('dueDate', ev)}><AccessTimeIcon/> Due Date</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('attachment', ev)}><AttachFileIcon style={{transform: \"rotate(35deg)\"}}/> Attachment</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('cover', ev)}><WebIcon/> Cover</span>\n            <h5>ACTIONS</h5>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('move', ev)}><ArrowRightAltIcon/> Move</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('copy', ev)}><FileCopyOutlinedIcon/> Copy</span>\n            {/* <span className=\"flex align-center\" onClick={(ev) => setModal('watch', ev)}><RemoveRedEyeOutlinedIcon/> Watch</span> */}\n            <span className=\"flex align-center\" onClick={(ev) => setModal('archive', ev)}><ArchiveOutlinedIcon/> Archive</span>\n            <span className=\"flex align-center\" onClick={(ev) => setModal('share', ev)}><ShareOutlinedIcon/> Share</span>\n        </div>\n    )\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/DynamicCardActionModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserCards.jsx",[],["395","396"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserActivities.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionAbout.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionSearch.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionBackground.jsx",["397","398","399","400"],"import { Component } from 'react'\n\n//cmps:\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\n\n\n//icons:\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\n\n//imgs:\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\n\nexport class SectionBackground extends Component {\n\n    state = {\n        currType: null,\n        menuTitle: 'Change Background',\n        photosSrc,\n        colorsSrc\n    }\n\n    goBackBg = () => { this.setState({ currType: null }) }\n\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\n\n    render() {\n        const { currType, photosSrc, colorsSrc } = this.state\n        return (\n            <section className=\"background-section\">\n                {currType === null && <section className=\"flex photos-colors\">\n                    <div className=\"photos\">\n                        <button onClick={this.choosePhotos}>\n                            <img src={photosSrc} className=\"img-select\" />\n                            <span className=\"select-img-title\">Photos</span>\n                        </button>\n                    </div>\n                    <div className=\"colors\">\n                        <button onClick={this.chooseColors}>\n                            <img src={colorsSrc} className=\"img-select\" />\n                            <span className=\"select-img-title\">Colors</span>\n                        </button>\n                    </div>\n                </section>}\n                {currType === null && <hr className=\"hr-menu\" />}\n                <DynamicCmpBg currType={currType} goBack={this.goBackBg} />\n            </section>\n        )\n    }\n}\nfunction DynamicCmpBg({ currType, goBack }) {\n    switch (currType) {\n        case 'PhotosArea':\n            return <PhotosArea goBack={goBack} />\n        case 'ColorsArea':\n            return <ColorsArea goBack={goBack} />\n        default:\n            return <h1></h1>\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionStickers.jsx",["401"],"import { Component } from 'react'\n\nimport stick1 from '../../../../assets/stickers/sticker-01.png'\nimport stick2 from '../../../../assets/stickers/sticker-02.png'\nimport stick3 from '../../../../assets/stickers/sticker-03.png'\nimport stick4 from '../../../../assets/stickers/sticker-04.png'\nimport stick5 from '../../../../assets/stickers/sticker-05.png'\nimport stick6 from '../../../../assets/stickers/sticker-06.png'\nimport stick7 from '../../../../assets/stickers/sticker-07.png'\nimport stick8 from '../../../../assets/stickers/sticker-08.png'\nimport stick9 from '../../../../assets/stickers/sticker-09.png'\nimport stick10 from '../../../../assets/stickers/sticker-10.png'\nimport stick11 from '../../../../assets/stickers/sticker-11.png'\nimport stick12 from '../../../../assets/stickers/sticker-12.png'\n\n\nexport class SectionStickers extends Component {\n\n    state = {\n        stickers: [\n            { src: stick1, _id: 'stick101' },\n            { src: stick2, _id: 'stick102' },\n            { src: stick3, _id: 'stick103' },\n            { src: stick4, _id: 'stick104' },\n            { src: stick5, _id: 'stick105' },\n            { src: stick6, _id: 'stick106' },\n            { src: stick7, _id: 'stick107' },\n            { src: stick8, _id: 'stick108' },\n            { src: stick9, _id: 'stick109' },\n            { src: stick10, _id: 'stick1011' },\n            { src: stick11, _id: 'stick1011' },\n            { src: stick12, _id: 'stick1012' }\n\n        ]\n    }\n\n\n    render() {\n        const { stickers } = this.state\n\n        console.log('stickers:', stickers);\n        if (!stickers || !stickers.length) return <h1>Loading...</h1>\n        return (\n            <section className=\"stickers-section\" style={{ display: \"grid\" }}>\n                <h1>Stickers!</h1>\n                <div className=\"stickers-area\">\n                    {stickers.map((sticker, idx) => {\n\n                        return <div className=\"sticker-img\" key={idx}>\n                            <img src={sticker.src} />\n                        </div>\n                    })}\n                </div>\n            </section >\n        )\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/SectionLabels.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentPreview.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/userActions.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/menuAction.js",["402"],"import { boardService } from '../../services/boardService.js'\nimport { menuService } from '../../services/menuService.js'\n\nexport function setFilter(filterBy) {\n    return (dispatch) => {\n        const action = {\n            type: 'FILTER_PHOTOS',\n            filterBy\n        }\n        dispatch(action)\n    }\n}\nexport function saveBoardDesc(board, description) {\n    return async dispatch => {\n        try {\n            const updatedBoard = await boardService.updateBoardDesc(board, description)\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\n        }\n        catch (err) {\n            console.log('boardActions: err:', err);\n        }\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/userService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardContent.jsx",["403"],"import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CardAttachmentList } from \"./CardAttachmentList\";\nimport { CardChecklistList } from \"./CardChecklistList\";\nimport { CardCommentList } from \"./CardCommentList\";\nimport { CardDescription } from \"./CardDescription\";\nimport { LabelList } from \"./LabelList\";\nimport { MemberList } from \"./MemberList\";\n\nclass _CardContent extends Component {\n\n    render() { \n        const {card, save, user, board} = this.props\n        return <div onClick={this.props.closeModal} className=\"card-content\">\n            <div className=\"flex wrap\">\n            <MemberList setCurrModal={this.props.setCurrModal} card={card}/>\n            <LabelList setCurrModal={this.props.setCurrModal} card={card}/>\n            </div>\n            <CardDescription card={card} user={user} save={save}/>\n            <CardChecklistList card={card} user={user} save={save}/>\n            <CardAttachmentList setCurrModal={this.props.setCurrModal} card={card}/>\n            <CardCommentList card={card} user={user} save={save}/>\n        </div>\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n    }\n}\nconst mapDispatchToProps = {\n}\n\nexport const CardContent = connect(mapStateToProps, mapDispatchToProps)(_CardContent)\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupPreview.jsx",["404","405"],"import React, { Component } from 'react'\nimport { CardList } from \"./CardList\";\nimport { connect } from 'react-redux'\nimport { loadCards } from '../store/actions/cardActions'\nimport { addCard, openLabel, editGroupTitle ,copyList,onArchiveList } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { GroupMenu } from './GroupMenu';\nimport { AddCardInput } from './AddCardInput';\n\n\nexport class _GroupPreview extends Component {\n\n    state = {\n        groupTitle: '',\n        card: {\n            createdBy: {},\n            title: '',\n            description: '',\n            dueDate: '',\n            style: {},\n            comments: [],\n            checklists: [],\n            attachments: [],\n            members: [],\n            labels: []\n        },\n        isAdding: false,\n        isChangeTitle: false,\n        isMenuOpen: false,\n        isAddingToTop:false,\n        topTitle:''\n    }\n\n\n    componentDidMount() {\n        const { group } = this.props\n        this.props.loadCards(group)\n        this.setState({ groupTitle: group.title })\n    }\n\n    openTitleBtn=()=>{\n        this.setState({isChangeTitle:true})\n    }\n\n    handleChange = (ev) => {\n        const { card} = this.state\n        const { value } = ev.target\n        this.setState({\n            card: { ...card, title: value }\n        })\n    }\n    onAddCard = async (ev) => {\n        const { card,isAddingToTop } = this.state\n        const { board, group } = this.props\n        this.props.addCard(board, group, card,isAddingToTop)\n        this.setState({\n            card: { \n                createdBy: {},\n                id: '',\n                title: '',\n                description: '',\n                createdAt: '',\n                dueDate: '',\n                style: {},\n                comments: [],\n                checklists: [],\n                attachments: [],\n                members: [],\n                labels: []\n            },\n            isAdding: false,\n            isAddingToTop:false\n        })\n    }\n\n\n    handleEditGroupTitle = (ev) => {\n        const { value } = ev.target\n        this.setState({ groupTitle: value })\n    }\n\n    discardChanges = (ev) => {\n        this.setState({\n            card: { ...this.state.card, title: '' }\n        })\n        ev.currentTarget.blur()\n    }\n\n    editGroupTitle = (ev) => {\n        if (ev.key && ev.key !== 'Enter') return \n        ev.preventDefault()\n        const { board, group } = this.props\n        const { groupTitle } = this.state\n        this.props.editGroupTitle(board, group, groupTitle)\n        this.setState({ isChangeTitle: false })\n        ev.currentTarget.blur()        \n    }\n    handleEnter = (ev) => {\n        if (ev.key === 'Enter') {\n            ev.preventDefault()\n            ev.currentTarget?.blur()\n            this.onAddCard()\n        }\n    }\n    toggleMenu = () => {\n        const { isMenuOpen } = this.state\n        this.setState({ isMenuOpen: !isMenuOpen })\n        \n    }\n    openInput=(ev)=>{\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.setState({isAddingToTop:true,isMenuOpen:false})\n    }\n    \n    copyList=()=>{\n        const { group,board } = this.props\n        this.props.copyList(board,group)\n        this.setState({isMenuOpen:false})\n    }\n    \n    closeMenu=()=>{\n        const { isMenuOpen } = this.state\n        if(isMenuOpen) this.setState({isMenuOpen:false})\n    }\n\n    onArchive=()=>{\n        const {board,group} = this.props\n        this.props.onArchiveList(board,group)\n        \n    }\n\n\n\n    render() {\n        const { listId, idx, group, board, isLabelOpen, openLabel, updateCardsLocation,isEdit,enterEditMode,exitEditMode } = this.props\n        const { cards } = group\n        const { groupTitle, isChangeTitle, isMenuOpen,isAddingToTop } = this.state\n        const { title } = this.state.card\n\n        return (\n            <Draggable draggableId={listId} index={idx} >\n                {(provided,snapshot) => (\n\n\n                    <div className={(snapshot.isDragging)?'group-preview dragging':'group-preview'} onClick={this.closeMenu} ref={provided.innerRef} {...provided.draggableProps} >\n\n                        <div {...provided.dragHandleProps} listId={listId}>\n                            <span className=\"group-menu-btn\" onClick={this.toggleMenu} >...</span>\n\n                            {isMenuOpen && <GroupMenu onArchive={this.onArchive}  openInput={this.openInput} copyList={this.copyList} />}\n\n\n                            <div className={`hidden-actions-form-container`}>\n                                <form className={`hidden-actions-form`}>\n                                    <input className=\"group-title-input\" onClick={this.openTitleBtn} onKeyUp={this.editGroupTitle} onChange={this.handleEditGroupTitle} type=\"text\" value={groupTitle} autoComplete=\"off\" />\n                                </form>\n                                {isChangeTitle && <div className=\"hidden-actions flex\" style={{ marginLeft: '0' }}>\n                                    <button type=\"button\" onClick={this.editGroupTitle}  > save </button>\n                                    <button onClick={this.discardChanges} className=\"icon\"><CloseSharpIcon /></button>\n                                </div>}\n                            </div>\n                        </div>\n                        \n                        {isAddingToTop && <AddCardInput isAddingToTop={isAddingToTop} title={title} onShowAddBtn={this.onShowAddBtn} handleEnter={this.handleEnter} onAddCard={this.onAddCard} discardChanges={this.discardChanges} handleChange={this.handleChange} />}\n                        <CardList isDragging={snapshot.isDragging}  exitEditMode={exitEditMode} enterEditMode={enterEditMode} isEdit={isEdit} listId={listId} cards={cards} board={board} updateCardsLocation={updateCardsLocation} isLabelOpen={isLabelOpen} openLabel={openLabel} currGroup={group} />\n                        {!isAddingToTop&&<AddCardInput isAddingToTop={isAddingToTop} title={title} onShowAddBtn={this.onShowAddBtn} handleEnter={this.handleEnter} onAddCard={this.onAddCard} discardChanges={this.discardChanges} handleChange={this.handleChange} />}\n\n                    \n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        reviews: state.reviewModule.reviews,\n        cards: state.cardModule.cards,\n        board: state.boardModule.board,\n        isLabelOpen: state.boardModule.isLabelOpen\n    }\n}\nconst mapDispatchToProps = {\n    loadCards,\n    addCard,\n    openLabel,\n    copyList,\n    editGroupTitle,\n    onArchiveList\n}\n\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview)\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/MenuActivity.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/ColorsArea.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/Backgrounds/PhotosArea.jsx",["406"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\n\n// import {menuService} from '../'\n//icons:\nimport SearchIcon from '@material-ui/icons/Search';\n\n\n//functions:\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\n\n//imgs:\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\n\nclass _PhotosArea extends Component {\n\n    state = {\n        photoSearch: '',\n        filter: '',\n        bgImgs: [\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\n        ]\n    }\n    componentDidMount() {\n        // console.log(this.state.bgImgs[0]);\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\n            this.props.setFilter(this.state.filterBy)\n        })\n    }\n\n    toggleImgTitle = (imgIdx) => {\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\n        })\n        this.setState({ bgImgs })\n    }\n\n    selectImg = (imgSrc) => { this.props.setBackground(this.props.board, { backgroundImage: `url(${imgSrc})` }) }\n\n    get imgs() {\n        const { bgImgs, filter } = this.state\n        const regex = new RegExp(filter, 'i')\n        return bgImgs.filter(img => regex.test(img.title))\n    }\n\n    render() {\n        const imgs = this.imgs\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\n        return (\n            <section className=\"photo-type\">\n                <div className=\"flex search-photo\">\n                    <SearchIcon /><input type=\"text\"\n                        name=\"filter\"\n                        onChange={({ target }) => this.setState({ filter: target.value })}\n                        placeholder=\"Photos\"\n                        autoComplete=\"off\"\n                        autoFocus\n                    />\n                </div>\n                <div className=\"photos-area\">\n                    {this.imgs.map((img, idx) => {\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\n                            onClick={() => { this.selectImg(img.src) }}>\n                            <img src={img.src} />\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\n                        </div>\n                    })}\n                </div>\n                <span className=\"go-back\" onClick={this.props.goBack}>Go back to backgrounds</span>\n            </section>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        board: state.boardModule.board,\n        filterBy: state.menuModule.filterBy\n    }\n}\nconst mapDispatchToProps = {\n    setBackground,\n    setFilter\n}\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/services/menuService.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberListModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelListModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddChecklistModal.jsx",["407"],"import { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { utilService } from \"../../services/utilService\";\n\n\nexport class AddChecklistModal extends Component{\n    state = {\n        title: 'Checklist'\n    }\n\n    onAddChecklist = (ev) => {\n        if (ev.key && ev.key !== \"Enter\") return \n        const { card, save, closeModal } = this.props\n        const newChecklist = {\n            id: utilService.makeId(),\n            title: this.state.title,\n            createdAt: Date.now(),\n            createdBy: {\n                _id: \"u101\",\n                fullname: \"Tal Tarablus\",\n                imgUrl: \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\n            },\n            todos: []\n        }\n        const newCard = {...card, checklists:[...card.checklists, newChecklist]}\n        save(newCard, `added checklist ${newChecklist.title} to card`)\n        closeModal()\n    }\n\n    handleFocus = (ev) => {\n        ev.target.select()\n    }\n\n    render() {\n\n        const { card, closeModal, style } = this.props\n        return (\n            <div className=\"checklist-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Add Checklist\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <small>Title</small>\n                <input \n                autoComplete=\"off\" \n                onFocus={this.handleFocus} \n                autoFocus \n                type=\"text\" name=\"title\" \n                onChange={({ target }) => this.setState({ title: target.value })} value={this.state.title}\n                onKeyDown={this.onAddChecklist}\n                />\n                <button onClick={this.onAddChecklist}>Add</button>\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MoveCardModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddCoverModal.jsx",["408"],"import { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport img1 from '../../assets/bgImgs/image-01.jpg'\nimport img2 from '../../assets/bgImgs/image-02.jpg'\nimport img3 from '../../assets/bgImgs/image-03.jpg'\nimport img4 from '../../assets/bgImgs/image-04.jpg'\nimport img5 from '../../assets/bgImgs/image-05.jpg'\nimport img6 from '../../assets/bgImgs/image-06.jpg'\nimport img7 from '../../assets/bgImgs/image-07.jpg'\nimport img8 from '../../assets/bgImgs/image-08.jpg'\nimport img9 from '../../assets/bgImgs/image-09.jpg'\nimport img10 from '../../assets/bgImgs/image-10.jpg'\nimport img11 from '../../assets/bgImgs/image-11.jpg'\nimport img12 from '../../assets/bgImgs/image-12.jpg'\nimport img13 from '../../assets/bgImgs/image-15.jpg'\nimport img14 from '../../assets/bgImgs/image-16.jpg'\nimport img15 from '../../assets/bgImgs/image-17.jpg'\nimport img16 from '../../assets/bgImgs/image-18.jpg'\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\n\n\nexport class AddCoverModal extends Component {\n\n    state = {\n        filter: '',\n        isCover: false\n    }\n\n    setColor = (color) => {\n        const card = JSON.parse(JSON.stringify(this.props.card))\n        const isCover = this.state\n        const NewCard = {\n            ...card, style: {\n                isCover,\n                background: {\n                    backgroundColor: color,\n                }\n            }\n        }\n        this.props.save(NewCard, `Set background color`)\n        this.props.closeModal()\n    }\n\n    setImg = (url) => {\n        const card = JSON.parse(JSON.stringify(this.props.card))\n        const isCover = this.state\n        const NewCard = {\n            ...card, style: {\n                isCover,\n                background: {\n                    backgroundImage: `url(${url})`,\n                }\n            }\n        }\n        this.props.save(NewCard, `Set background Img`)\n        this.props.closeModal()\n    }\n    clearStyle = () => {\n        const card = JSON.parse(JSON.stringify(this.props.card))\n        const NewCard = { ...card, style: {} }\n        this.props.save(NewCard, `Removed background`)\n        this.props.closeModal()\n    }\n\n    render() {\n        const colors = ['lightgray', '#adad85', 'coral', '#ff4d4d', 'crimson', 'yellowgreen', 'teal', '#3385ff',]\n        const imgs = [img1, img2, img3, img4, img5, img6, img7, img8, img9, img10, img11, img12, img13, img14, img15, img16]\n        const { closeModal, style } = this.props\n        const isCover = this.state\n        return (\n            <div className=\"cover-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Cover\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <small>SIZE</small>\n                <div className=\"cover-style-btns flex \">\n                    <button className={isCover ? 'selected' : ''} onClick={() => this.setState({ isCover: false })}><CreditCardIcon /></button>\n                    <button className={isCover ? 'upside' : 'upside selected'} onClick={() => this.setState({ isCover: true })}><CreditCardIcon /></button>\n                </div>\n                <small>COLORS</small>\n                <div className=\"flex wrap space-bt\">\n                    {colors.map(color => <div onClick={() => this.setColor(color)} key={Math.random()} className=\"color-box\" style={{ backgroundColor: color }}></div>)}\n                </div>\n                <small>UNSPLASH</small>\n                <div className=\"flex wrap space-bt\">\n                    {imgs.map(src => <img onClick={() => this.setImg(src)} key={Math.random()} className=\"color-box\" src={src} />)}\n                </div>\n                <button onClick={this.clearStyle}>Clear</button>\n\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CopyCardModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/AddAttachmentModal.jsx",["409","410"],"import React, { Component } from \"react\";\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { utilService } from \"../../services/utilService\";\n\n\nexport class AddAttachmentModal extends Component {\n    state = {\n        url: '',\n        title: ''\n    }\n\n    onAddAttachment = (ev) => {\n        console.log(ev);\n        if (!ev.key || ev.key && ev.key === \"Enter\") {\n\n            const { title, url } = this.state\n            const newAttachment = {\n                id: utilService.makeId(),\n                title: title,\n                url: url\n            }\n            const card = { ...this.props.card, attachments: [...this.props.card.attachments, newAttachment] }\n            this.props.save(card, `added attachment to ${newAttachment.title} to card`)\n            this.props.closeModal()\n        }\n    }\n\n    handleInput = (ev) => {\n        const { name, value } = ev.target\n        this.setState({ [name]: value })\n    }\n\n\n    render() {\n\n        const { closeModal, style } = this.props\n        return (\n            <div fer className=\"attachments-modal card-action-modal\" style={style}>\n                <div className=\"flex justify-center\">\n                    Attach From...\n                </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <small>Attach a link</small>\n                <input autoFocus onChange={this.handleInput} onKeyUp={this.onAddAttachment} autoComplete=\"off\" placeholder=\"Paste any link here...\" type=\"text\" name=\"url\" />\n                {this.state.url && <small>Link name (optional)</small>}\n                {this.state.url && <input ref=\"linkNameRef\" autoComplete=\"off\" onKeyUp={this.onAddAttachment} onChange={this.handleInput} type=\"text\" name=\"title\" />}\n                <button onClick={this.onAddAttachment}>Attach</button>\n            </div>\n        )\n\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/UserSearchBy.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/menu/menuFirstSee/menuTopOptions/menuSearchBy/LabelSearchBy.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/store/actions/cardActions.js",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardAttachmentList.jsx",["411","412"],"import React, { Component } from \"react\"\nimport { utilService } from \"../../services/utilService\";\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport CallMadeOutlinedIcon from '@material-ui/icons/CallMadeOutlined';\nimport { CallReceived } from \"@material-ui/icons\";\n\nexport class CardAttachmentList extends Component {\n\n    onAddAtach = (ev) => {\n        console.log(ev.key);\n        ev.preventDefault()\n        const { card } = this.props\n        const txt = this.state.newCommentTxt\n        const comment = { txt, createdAt: Date.now(), createdBy: {}, id: utilService.makeId() }\n        const newCard = { ...card }\n        newCard.comments.unshift(comment)\n    }\n\n    openModal = (ev) => {\n        const top = ev.target.offsetTop\n        this.props.setCurrModal({name: 'attachment', style: {left: 'calc(50% - 350px)', top, transform: 'translateY(-80%)'}})\n    }\n\n\n    render() {\n        const { attachments } = this.props.card\n        if (!attachments) return null\n        return <div className=\"attachments\">\n            <header className=\"flex\">\n                <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />\n                <h3>Attachments</h3>\n            </header>\n            {attachments.map(att =>\n                <a onClick={() => window.open(att.url, \"_blank\")} key={att.id} >\n                    <div className=\"attachment flex align-center\">\n                        <div>LINK</div>\n                        <div className=\"flex align-start\">\n                            <h4>{att.title || att.url}</h4>\n                            <CallMadeOutlinedIcon />\n                        </div>\n                    </div>\n                </a>\n            )}\n            <button onClick={this.openModal}>Add an attachment</button>\n        </div>\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardCommentList.jsx",["413"],"import { Component } from \"react\"\nimport { utilService } from \"../../services/utilService\"\nimport { CardCommentPreview } from \"./CardCommentPreview\"\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport { cardService } from \"../../services/cardService\";\n\nexport class CardCommentList extends Component {\n\n    state = {\n        newCommentTxt: '',\n        isShown: false\n\n    }\n\n    showActivities = () => {\n        this.setState({ isShown: !this.state.isShown })\n    }\n\n\n    onInput = ({ target }) => {\n        const { name, value } = target\n        this.setState({ [name]: value })\n    }\n\n    onAddComment = (ev) => {\n        if (ev?.key && ev.key === \"Enter\") return\n        ev.preventDefault()\n        ev.currentTarget.blur()\n        const { card, user } = this.props\n        const txt = this.state.newCommentTxt\n        const comment = cardService.getCommentToAdd(txt, user)\n        const newCard = { ...card }\n        newCard.comments.unshift(comment)\n        this.props.save(newCard)\n        this.setState({ newCommentTxt: '' })\n    }\n\n    get data() {\n        const { comments, activities } = this.props.card\n        if (!this.state.isShown) return comments\n        else {\n            const data = [...comments, ...activities]\n            return data.sort((a, b) => b.createdAt - a.createdAt)\n        }\n    }\n\n\n    render() {\n        const { isShown } = this.state\n        return <div className=\"card-comments\">\n            <header className=\"in-card-section flex space-bt align-end\">\n                <div className=\"flex align-start\">\n                    <FormatListBulletedIcon />\n                    <h3>Activity</h3>\n                </div>\n                <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>\n            </header>\n            <div className={`hidden-actions-form-container`}>\n                <form onSubmit={(ev => ev.preventDefault())} className={`hidden-actions-form`}>\n                    <textarea\n                        type=\"text\"\n                        onChange={this.onInput}\n                        value={this.state.newCommentTxt}\n                        autoComplete=\"off\"\n                        placeholder=\"Write a comment..\"\n                        name=\"newCommentTxt\"\n                    />\n                </form>\n                <div className=\"hidden-actions flex\">\n                    <button type=\"button\"\n                        className={this.state.newCommentTxt ? '' : 'disabled'}\n                        onClick={this.onAddComment}\n                    >\n                        Save\n                    </button>\n\n                </div>\n            </div>\n            <CardCommentPreview data={this.data} />\n        </div>\n    }\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/LabelList.jsx",["414"],"import React, { Component } from \"react\";\n\nexport function LabelList(props) {\n\n    const containerRef = React.createRef()\n\n    function openModal(ev) {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const div = containerRef.current\n        const top = div.offsetTop + 50 + div.offsetParent.offsetTop\n        const left = ev.target.offsetLeft + ev.target.offsetParent.offsetLeft\n        props.setCurrModal({ name: 'labels', style: { top, left } })\n    }\n\n    const { card } = props\n    return (\n        <div className=\"card-labels\">\n            <h5>LABELS</h5> \n            <div className=\"label-container flex\" ref={containerRef}>\n                {card.labels.map(label =>\n                    <div onClick={openModal} key={label.id} className={`label flex center`} style={{ backgroundColor: label.color }}>\n                        {label.title}\n                    </div>\n                )}\n                <div onClick={openModal} className=\"add-label flex center\">+</div>\n            </div>\n\n        </div>\n    )\n\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/MemberList.jsx",["415","416"],"import React, { Component } from \"react\";\nimport { MyAvatar } from \"../MyAvatar\";\nimport { MemberListModal } from \"./MemberListModal\";\n\n\nexport function MemberList(props) {\n    const containerRef = React.createRef()\n\n    function openModal(ev) {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const div = containerRef.current\n        const top = div.offsetTop + 50 + div.offsetParent.offsetTop\n        const left = ev.target.offsetLeft + ev.target.offsetParent.offsetLeft\n        props.setCurrModal({ name: 'members', style: { top , left} })\n    }\n    const { card } = props\n\n    return (\n        <div className=\"card-members\">\n            <h5>MEMBERS</h5>\n            <div ref={containerRef} className=\"card-members flex\">\n                {card.members.map(user => <div onClick={openModal}><MyAvatar key={Math.random()} user={user} /></div>)}\n                <div onClick={openModal} className=\"add-user-button\">\n                    <MyAvatar user={{ fullname: '+' }} />\n                </div>\n            </div>\n\n        </div>\n    )\n\n}","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklistList.jsx",["417","418"],"import { DragDropContext, Droppable } from \"react-beautiful-dnd\"\nimport { connect } from \"react-redux\"\nimport { cardService } from \"../../services/cardService\"\nimport { handleTodoDrag } from \"../../store/actions/boardAction\"\nimport { CardChecklist } from \"./CardChecklist\"\n\nexport function CardChecklistList(props) {\n    const { card, board } = props\n\n    async function updateChecklist(checklist, todo) {\n        let newCard = await cardService.updateChecklistTodo(card, checklist, todo)\n        props.save(newCard, `Edited ${checklist.title} checklist`)\n    }\n\n    async function onRemoveChecklist(checklist) {\n        let newCard = await cardService.removeChecklist(card, checklist)\n        props.save(newCard, `removed ${checklist.title} checklist`)\n    }\n\n    function handleDrag(res) {\n            const newCard =  cardService.handleTodoDrag(board, card, res) \n            props.save(newCard,null)\n        \n    }\n\n    const { checklists } = card\n    return (\n\n        <DragDropContext onDragEnd={handleDrag}>\n            <Droppable droppableId=\"checklistList\" type=\"cheklist\" direction=\"vertical\">\n                {provided => (\n\n                    <div ref={provided.innerRef} {...provided.droppableProps} className=\"\">\n                        {checklists.map((checklist, idx) => <CardChecklist key={checklist.id} removeChecklist={() => onRemoveChecklist(checklist)} saveTodo={updateChecklist} checklist={checklist} idx={idx} checklistId={checklist.id} />)}\n                        {provided.placeholder}\n\n\n                    </div>\n                )}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardDescription.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardList.jsx",["419","420","421","422","423"],"import React, { Component } from 'react'\nimport { CardPreview } from \"./CardPreview\";\n// ////React DND///\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\n\n\nexport class CardList extends Component {\n    state = {\n        cards: []\n    }\n    componentDidMount() {\n        this.cardRef = React.createRef()\n        const { cards } = this.props\n        this.setState({ cards })\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps !== this.props) {\n            const { cards } = this.props\n            this.setState({ cards })\n        }\n    }\n\n    enterEditMode = (cardId) => {\n        const div = this.cardRef.current\n        const pos = div.getClientRects()\n        console.log('sending', pos);\n        var { top, left } = pos[0]\n        this.props.enterEditMode(cardId)\n        return { left }\n    }\n\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n        const { board, currGroup } = this.props\n        // const { cards } = this.props\n        const { cards } = this.state\n        const items = Array.from(cards)\n        const [reorderedItem] = items.splice(result.source.index, 1)\n        items.splice(result.destination.index, 0, reorderedItem)\n        this.setState({ cards: items })\n        this.props.updateCardsLocation(board, currGroup, items)\n    }\n\n    render() {\n        const { board, cards, listId, isLabelOpen, openLabel, currGroup, isEdit, exitEditMode } = this.props\n        return (\n            <Droppable droppableId={listId} type=\"CARD\">\n                {(droppableProvided) => (\n\n                    <div className={'card-list'} ref={droppableProvided.innerRef} style={{ overflow: 'none' }} >\n                        <div style={{ height: '1px' }}></div>\n                        {cards.map((card, idx) => {\n                            if (card) {\n\n                                return (\n                                    <div ref={this.cardRef}>\n                                        <CardPreview exitEditMode={exitEditMode} enterEditMode={this.enterEditMode} isEdit={isEdit} currGroup={currGroup} key={card.id} listId={listId} board={board} idx={idx} card={card} isLabelOpen={isLabelOpen} openLabel={openLabel} />\n                                    </div>\n                                )\n                            }\n\n                        })}\n                        {droppableProvided.placeholder}\n\n                    </div>\n                )}\n            </Droppable>\n        )\n    }\n\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/AddCardInput.jsx",["424"],"import CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport React, { Component } from 'react'\n\nexport class AddCardInput extends Component {\n\n    render() {\n\n        const {title,onShowAddBtn,handleEnter,onAddCard,discardChanges,handleChange,isAddingToTop} =this.props\n        \n        return (\n\n            <div className=\"hidden-actions-form-container\">\n                <form action=\"\" className=\"hidden-actions-form\" >\n                    <input  onClick={onShowAddBtn} onKeyDown={handleEnter}  value ={title}  type=\"text\" placeholder=\"+ Add another card \" onChange={handleChange} />\n                </form> \n                {/* className=\"add-card-input-bottom\" */}\n\n                <div className=\"hidden-actions flex\" style={{margin:'0'}}>\n                    <button  onClick={onAddCard}> Add Card</button>\n                    <button onClick={discardChanges} className=\"icon\">\n                        <CloseSharpIcon />\n                    </button>\n                </div>\n            </div>\n\n        )\n    }\n}\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/GroupMenu.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/CardChecklist.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardPreview.jsx",["425","426","427"],"import React, { Component } from 'react'\nimport { cardService } from \"../services/cardService\";\nimport { connect } from 'react-redux'\nimport { updateBoardCard, copyList, onArchiveCard } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { CardDetails } from './CardDetails';\nimport { CardEdit } from './CardEdit';\n\n\n\n\n\nclass _CardPreview extends Component {\n\n    state = {\n        isModalOpen: false,\n        // labels: [],\n        isEdit: false,\n        title: '',\n        card: null,\n        editStyle: {}\n    }\n\n\n    componentDidMount() {\n        this.cardRef = React.createRef()\n        const { card, board, isModalOpen } = this.props\n        const updatedCard = cardService.getCardById(board, card.id)\n        // const labels = cardService.getCardLabels(board, card.labels)\n        this.setState({\n            card: updatedCard,\n            title: card.title\n        })\n    }\n    componentDidUpdate(prevProps) {\n        const { card, board } = this.props\n        const updatedCard = cardService.getCardById(board, card.id)\n        if (prevProps !== this.props) {\n            this.setState({ card: updatedCard })\n\n        }\n    }\n\n    onOpenLabel = (ev) => {\n        ev.preventDefault()\n        this.props.openLabel()\n    }\n\n    enterEditMode = (ev,cardId) => {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const style = this.props.enterEditMode(cardId)\n        this.setState({ editStyle: style})\n    }\n\n    handleChange = (ev) => {\n        const { value } = ev.target\n        this.setState({ title: value })\n    }\n\n    onSave = () => {\n        const { card, board } = this.props\n        const { title } = this.state\n        card.title = title\n        console.log(card);\n        this.props.updateBoardCard(board, card)\n        this.setState({ isEdit: false })\n    }\n\n    copyList = () => {\n        const { currGroup, board } = this.props\n        this.props.copyList(board, currGroup)\n    }\n\n    onArchiveCard = () => {\n        const { board, currGroup } = this.props\n        const { card } = this.state\n        this.props.onArchiveCard(board, currGroup, card)\n\n    }\n\n    render() {\n        const { board, idx, isLabelOpen, currGroup, isEdit, exitEditMode, updateBoardCard, loggedUser } = this.props\n\n        const { title, card, editStyle } = this.state\n        if (!this.state.card) return <h1> loading</h1>\n        const { labels } = this.state.card\n        return (\n            <React.Fragment>\n                <Draggable\n                    draggableId={card.id}\n                    index={idx}\n                >\n                    {(draggbleProvided, snapshot) => (\n                        <div ref={draggbleProvided.innerRef}\n                            {...draggbleProvided.draggableProps}\n                            {...draggbleProvided.dragHandleProps}>\n                            {isEdit.isOpen && (isEdit.id === card.id) ? <CardEdit style={editStyle} onArchiveCard={this.onArchiveCard} copyList={this.copyList} loggedUser={loggedUser} updateBoardCard={updateBoardCard} exitEditMode={exitEditMode} onSave={this.onSave} currGroup={currGroup} isEdit={isEdit.isOpen} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} enterEditMode={this.enterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} /> : ''}\n                                {<CardDetails isDragging={snapshot.isDragging} isEdit={isEdit.isOpen} onOpenLabel={this.onOpenLabel} handleChange={this.handleChange} enterEditMode={this.enterEditMode} labels={labels} isLabelOpen={isLabelOpen} board={board} card={card} title={title} />}\n                        </div>\n                    )}\n                </Draggable>\n            </React.Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        reviews: state.reviewModule.reviews,\n        cards: state.cardModule.cards,\n        board: state.boardModule.board,\n        loggedUser: state.boardModule.loggedUser,\n        isLabelOpen: state.boardModule.isLabelOpen\n    }\n}\nconst mapDispatchToProps = {\n    updateBoardCard,\n    copyList,\n    onArchiveCard\n\n}\n\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview)\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/Todo.jsx",[],["428","429"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/LinearProgressBar.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/cardEdit.jsx",["430","431","432"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport { Archive } from '@material-ui/icons';\nimport { DynamicCardActionModal } from \"./card/DynamicCardActionModal\";\nimport { cardService } from '../services/cardService'\n\n\n\nexport class CardEdit extends Component {\n    state = {\n        editPos: 100,\n        isModalOpen: false,\n        currModal: {\n            name: '',\n            style: {\n                position: 'absolute',\n                // top:'20px',\n                left: '257px',\n                'z-index': '20'\n            }\n        }\n    }\n\n\n\n    componentDidMount() {\n        const { currGroup, board } = this.props\n        const idx = board.groups.findIndex(group => group.id === currGroup.id)\n        const pos = idx + 1\n        const finalPos = 266 * pos\n        this.setState({\n            // currModal:{...this.state.currModal, style:{...this.state.currModal.style,left:`${finalPos}px`}}\n        })\n        this.findCardPos()\n    }\n\n\n\n    findCardPos = () => {\n        const { editPos } = this.state\n        const { currGroup, card } = this.props\n        const idx = currGroup.cards.findIndex(groupCard => groupCard.id === card.id)\n        var pos = editPos * idx\n        // if(card.labels.length>0 || card.comments.length>0||card.description.length>0) pos+=120\n        if (idx === 0) {\n            this.setState({ editPos: 40 })\n        }\n        else if (idx === 1) this.setState({ editPos: 120 })\n        else if (pos >= 160) this.setState({ editPos: 160 })\n        else {\n            this.setState({ editPos: pos })\n        }\n\n    }\n\n\n\n    edit = (ev) => {\n        ev.stopPropagation()\n        ev.preventDefault()\n    }\n\n    openModal = (currName) => {\n        this.setState({\n            isModalOpen: true,\n            currModal: { ...this.state.currModal, name: currName }\n        })\n    }\n    closeModal = () => {\n        this.setState({ isModalOpen: false })\n    }\n\n\n    saveCardChanges = async (card, txt) => {\n        var { board, loggedUser } = this.props\n        if (txt) {\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\n            board = { ...board, activities: [activity, ...board.activities] }\n        }\n        await this.props.updateBoardCard(board, card)\n        this.loadCard()\n    }\n\n    loadCard = () => {\n        const { board } = this.props\n        const { cardId } = this.props.card.id\n        if (cardId && board.groups) {\n            const card = cardService.getCardById(board, cardId)\n            this.setState({ card })\n        } else this.setState({ card: null })\n    }\n\n    render() {\n        const { editPos, currModal, isModalOpen } = this.state\n        const { copyList, labels, isEdit, updateBoardCard, card, isLabelOpen,\n             board, handleChange, title, enterEditMode, exitEditMode, onArchiveCard } = this.props\n\n        return (\n            <React.Fragment>\n                <div onClick={this.edit} className={`${isEdit ? 'edit' : ''}`} style={{ top: `${editPos}px` }}>\n\n                    <div className=\"edit-container\">\n\n                        <div className={`card-preview ${isEdit ? 'edit' : ''} `}  >\n                            <div className=\"label-container\">\n                                {labels.map((label, idx) => {\n                                    return <div onClick={() => this.onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\n                                        {isLabelOpen && label.title}\n                                    </div>\n                                })\n                                }\n                            </div>\n                            <div className=\"edit-and-title\">\n                                <Link to={`/board/${board._id}/${card.id}`}>\n                                    <div>\n                                        <form action=\"\" onSubmit=\"return false\">\n\n                                            <input disabled={!isEdit} onChange={handleChange}\n                                                onClick={(ev) => {\n                                                    ev.preventDefault()\n                                                }}\n                                                type=\"text\" value={title} />\n                                        </form>\n                                    </div>\n                                </Link>\n                                <span className=\"edit-icon\" onClick={(ev) => {\n                                }} onClick={(ev) => enterEditMode(ev, card.id)} >\n                                    <EditIcon />\n                                </span>\n                            </div>\n                            <div className=\"card-icons\">\n                                {card.description && <SubjectIcon />}\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n                            </div>\n\n\n                        </div>\n\n\n                        {<div className={'edit-menu'}>\n                            <div className=\"edit-menu-btn\">  <PaymentIcon className=\"edit-menu-icons rotate\" /> <span>  Open Card </span></div>\n                            <div className=\"edit-menu-btn\" onClick={() => this.openModal('labels')} >  <LabelOutlinedIcon className=\"edit-menu-icons\" />  Edit labels </div>\n                            <div className=\"edit-menu-btn\" > <PersonOutlineIcon className=\"edit-menu-icons\" /> change members</div>\n                            <div className=\"edit-menu-btn\"> <ArrowRightAltIcon className=\"edit-menu-icons\" /> move  </div>\n                            <div className=\"edit-menu-btn\" onClick={copyList} > <PaymentIcon className=\"edit-menu-icons rotate\" /> copy </div>\n                            <div className=\"edit-menu-btn\"> <AccessTimeIcon className=\"edit-menu-icons\" /> change due date </div>\n                            <div className=\"edit-menu-btn\" onClick={onArchiveCard}> <ArchiveOutlinedIcon className=\"edit-menu-icons\" /> archive </div>\n                        </div>\n                        }\n\n\n                    </div>\n                    <div className='card-save-btn'>\n                        <button onClick={exitEditMode} style={{ cursor: 'pointer' }} >Save</button>\n                    </div>\n\n                    {isModalOpen && <div className=\"card-edit-modals\" >\n                        <DynamicCardActionModal closeModal={this.closeModal} updateBoardCard={updateBoardCard} save={this.saveCardChanges} currModal={currModal} card={card} board={board} />\n                    </div>\n                    }\n\n\n                </div >\n            </React.Fragment >\n\n        )\n    }\n}\n\n\n",["433","434"],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/cardDetails.jsx",["435","436","437"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {MyAvatar} from './MyAvatar'\n\nexport class CardDetails extends Component {\n\n    state = {\n        isSmall: false\n\n    }\n\n    componentDidMount() {\n        const { card } = this.props\n        if (card.comments.length === 0 && card.description.length === 0 && card.labels.length === 0 && card.attachments.length === 0 && card.members.length === 0) {\n            this.setState({ isSmall: true })\n        }\n    }\n\n\n    componentDidUpdate(prevProps) {\n        const { card } = this.props\n        if (prevProps !== this.props) {\n            if (card.comments.length > 0 || card.description.length > 0 || card.labels.length > 0 || card.attachments.length>0||card.members.length>0) {\n                this.setState({ isSmall: false })\n            }\n        }\n    }\n\n\n\n\n    render() {\n        const { labels,isDragging , onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode, enterEditMode } = this.props\n        const { isSmall } = this.state\n        var cardClass = isDragging? 'card-preview dragging':'card-preview' \n        return (\n            <React.Fragment>\n                <Link to={`/board/${board._id}/${card.id}`}>\n\n                    <div className={cardClass} style={isSmall ? {  padding: '4px 8px 2px', ...card.style } : card.style}>\n                        <div className=\"label-container\">\n                            {labels.map((label, idx) => {\n                                return <div onClick={(ev) => onOpenLabel(ev, card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\n                                    {isLabelOpen && label.title}\n                                </div>\n                            })\n                            }\n                        </div>\n                        <div className={isSmall ? 'small-card' : `edit-and-title`} >\n                            <div>\n                                <form action=\"\">\n\n                                    <p>{title}</p>\n                                </form>\n                            </div>\n                            <span className=\"edit-icon\" onClick={(ev) => enterEditMode(ev, card.id)} >\n                                <EditIcon />\n                            </span>\n                        </div>\n                        <div className=\"card-icons \">\n\n                            <div className=\"card-icons-section1\">\n\n                            {card.description && <SubjectIcon />}\n                            {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                            {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                            {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n\n                            </div>\n                                \n                            {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member=> <MyAvatar user={member}/>)} </div>}\n                            \n                            {/* {(card.members.length>=2)?`card-avatars-container`: 'card-avatars-container-single'} */}\n\n                        </div>\n\n                    </div>\n\n                </Link>\n\n\n            </React.Fragment>\n\n        )\n    }\n}\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardDetails.jsx",["438","439","440","441"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { MyAvatar } from './MyAvatar'\n\nexport class CardDetails extends Component {\n\n    state = {\n        isSmall: false\n\n    }\n\n    componentDidMount() {\n        const { card } = this.props\n        if (card.comments.length === 0 && card.description.length === 0 && card.labels.length === 0 && card.attachments.length === 0 && card.members.length === 0) {\n            this.setState({ isSmall: true })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { card } = this.props\n        if (prevProps !== this.props) {\n            if (card.comments.length > 0 || card.description.length > 0 || card.labels.length > 0 || card.attachments.length > 0 || card.members.length > 0) {\n                this.setState({ isSmall: false })\n            }\n        }\n    }\n\n\n\n    render() {\n        const { labels, isDragging, isEdit, onOpenLabel, card, isLabelOpen, board, handleChange, title, EnterEditMode, enterEditMode } = this.props\n        const { isSmall } = this.state\n        var cardClass = isDragging ? 'card-preview dragging' : 'card-preview'\n\n        return (\n            <React.Fragment>\n                <Link to={`/board/${board._id}/${card.id}`}>\n                    <div className={cardClass} style={{ ...card.style }}   >\n                        <div className=\"label-container\">\n                            {labels.map((label, idx) => {\n                                return <div onClick={(ev) => onOpenLabel(ev, card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\n                                    {isLabelOpen && label.title}\n                                </div>\n                            })\n                            }\n                        </div>\n                        <div className={isSmall ? 'small-card' : `edit-and-title`} >\n                            <p className=\"flex align-center\" style={(card.style.backgroundImage || card.style.backgroundColor )? {color:'white',fontWeight:'700'}:{}}>{title}</p>\n                            <span className={`edit-icon ${labels.length ? 'with-label' : ''}`} onClick={(ev) => enterEditMode(ev, card.id)} >\n                                <EditIcon />\n                            </span>\n                        </div>\n                        <div className=\"card-icons \">\n\n                            <div className=\"card-icons-section1\">\n\n                                {card.description && <SubjectIcon />}\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n\n                            </div>\n\n                            {card.members?.length > 0 && <div className='members-container'>  {card.members.map(member => <MyAvatar user={member} />)} </div>}\n\n                            {/* {(card.members.length>=2)?`card-avatars-container`: 'card-avatars-container-single'} */}\n\n                        </div>\n\n                    </div>\n\n                </Link>\n\n\n            </React.Fragment>\n\n        )\n    }\n}\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/CardEdit.jsx",["442","443","444","445","446","447","448","449","450"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport SubjectIcon from '@material-ui/icons/Subject';\nimport ChatBubbleOutlineRoundedIcon from '@material-ui/icons/ChatBubbleOutlineRounded';\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\nimport PlaylistAddCheckSharpIcon from \"@material-ui/icons/PlaylistAddCheckSharp\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport ArchiveOutlinedIcon from '@material-ui/icons/ArchiveOutlined';\nimport { Archive } from '@material-ui/icons';\nimport { DynamicCardActionModal } from \"./card/DynamicCardActionModal\";\nimport {cardService} from '../services/cardService'\n\n\n\n\nexport class CardEdit extends Component {\n    state={\n        editPos:100,\n        isModalOpen:false,\n        currModal:{\n            name:'',\n            style:{\n                position:'absolute',\n                // top:'20px',\n                left:'257px',\n                'z-index':'20'\n            }\n    }\n}\n\n\n\n    componentDidMount(){\n        const {currGroup,board} =this.props\n        const idx = board.groups.findIndex(group=>group.id===currGroup.id)\n            const pos = idx+1\n            const finalPos=266*pos        \n        this.setState({\n            // currModal:{...this.state.currModal, style:{...this.state.currModal.style,left:`${finalPos}px`}}\n        })\n        this.findCardPos()\n    }\n\n\n\n    findCardPos=()=>{\n        const {editPos}=this.state\n        const {currGroup,card}=this.props\n        const idx = currGroup.cards.findIndex( groupCard=>groupCard.id===card.id)\n        var pos= editPos*idx\n        // if(card.labels.length>0 || card.comments.length>0||card.description.length>0) pos+=120\n        if(idx===0){\n            this.setState({editPos:40})\n        }\n        else if(idx=== 1)this.setState({editPos:120})\n        else if(pos>=160)this.setState({editPos:160}) \n        else{\n            this.setState({editPos:pos})\n        }\n        \n    }\n\n\n\n    edit=(ev)=>{\n        ev.stopPropagation()\n        ev.preventDefault()\n    }\n    \n    openModal=(currName)=>{\n        this.setState({isModalOpen:true,\n        currModal:{...this.state.currModal,name:currName}\n        })\n    }\n    closeModal=()=>{\n        this.setState({isModalOpen:false})\n    }\n\n    \n    saveCardChanges = async (card, txt) => {\n        var { board, loggedUser } = this.props\n        if (txt) {\n            const activity = cardService.getActivityToAdd(card, loggedUser, txt)\n            board = {...board, activities: [activity, ...board.activities]}\n        }\n        await this.props.updateBoardCard(board, card)\n        this.loadCard()\n    }\n    \n    loadCard = () => {\n        const { board } = this.props\n        const { cardId } = this.props.card.id\n        if (cardId && board.groups) {\n            const card = cardService.getCardById(board, cardId)\n            this.setState({ card })\n        } else this.setState({ card: null })\n    }\n\n    render() {\n        const {editPos,currModal,isModalOpen}=this.state\n        const {style, copyList, labels, isEdit,onSave, currGroup, onOpenLabel, updateBoardCard, card, isLabelOpen, board, handleChange, title, enterEditMode,exitEditMode } = this.props\n        console.log(style);\n        return (\n            <React.Fragment>\n                <div onClick={this.edit} className={`${isEdit ? 'edit' : ''}`} >\n\n                    <div className=\"edit-container\">\n\n                        <div className={`card-preview flex col ${isEdit ? 'edit' : ''} `}  style={style} >\n                            <div className=\"label-container\">\n                                {labels.map((label, idx) => {\n                                    return <div onClick={() => this.onOpenLabel(card.id)} key={label.id} className={`label ${(isLabelOpen) ? \"is-open\" : \"is-close\"}`} style={{ backgroundColor: label.color }}>\n                                        {isLabelOpen && label.title}\n                                    </div>\n                                })\n                                }\n                            </div>\n                            <div className=\"edit-and-title\">\n                                    <div>\n                                        <form onSubmit=\"return false\">\n\n                                            <textarea disabled={!isEdit} onChange={handleChange}\n                                                onClick={(ev) => {\n                                                    ev.preventDefault()\n                                                }}\n                                                type=\"text\" value={title} />\n                                        </form>\n                                    </div>\n                            </div>\n                            <div className=\"card-icons\">\n                                {card.description && <SubjectIcon />}\n                                {card.comments?.length > 0 && <ChatBubbleOutlineRoundedIcon />}\n                                {card.attachments?.length > 0 && <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />}\n                                {card.checklists?.length > 0 && <PlaylistAddCheckSharpIcon />}\n                            </div>\n\n\n                        </div>\n\n\n                        { <div className={'edit-menu'}>\n                            <div className=\"edit-menu-btn flex align-center\">  <PaymentIcon className=\"edit-menu-icons rotate\" /> <span>  Open Card </span></div>\n                            <div className=\"edit-menu-btn flex align-center\" onClick={()=>this.openModal('labels')} >  <LabelOutlinedIcon className=\"edit-menu-icons\"  />  Edit labels </div>\n                            <div className=\"edit-menu-btn flex align-center\" > <PersonOutlineIcon className=\"edit-menu-icons\"/> change members</div>\n                            <div className=\"edit-menu-btn flex align-center\"> <ArrowRightAltIcon className=\"edit-menu-icons\"/> move  </div>\n                            <div className=\"edit-menu-btn flex align-center\"  onClick={copyList} > <PaymentIcon className=\"edit-menu-icons rotate\"/> copy </div>\n                            <div className=\"edit-menu-btn flex align-center\"> <AccessTimeIcon className=\"edit-menu-icons\"/> change due date </div>\n                            <div className=\"edit-menu-btn flex align-center\"> <ArchiveOutlinedIcon className=\"edit-menu-icons\"/> archive </div>\n                        </div>\n                        }\n\n\n                    </div>\n                    <div className='card-save-btn'>\n                        <button   onClick={exitEditMode} style={{cursor:'pointer'}} >Save</button>\n                    </div>\n\n               {isModalOpen&& <div className=\"card-edit-modals\" >   \n                    <DynamicCardActionModal closeModal={this.closeModal} updateBoardCard={updateBoardCard} save={this.saveCardChanges} currModal={currModal} card={card} board={board}/>\n                </div>\n                }\n\n\n\n                </div >\n            </React.Fragment >\n\n        )\n    }\n}\n\n\n","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/card/ShareCardModal.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Login.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/pages/Signup.jsx",[],"/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/UserMenuModal.jsx",["451"],"import { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\n\nimport { MyAvatar } from './MyAvatar.jsx'\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\nexport function _UserMenuModal(props) {\n\n    const { user, closeModal, logout, history } = props\n\n    async function onLogout() {\n        if (!user) return\n        await logout()\n        history.push('/login')\n    }\n\n    return (\n        <div onClick={closeModal} className=\"user-menu-screen\">\n            <div className=\"user-menu-modal card-action-modal\">\n                <div className=\"flex justify-center\" style={{ paddingTop: '10px' }}>\n                    Account\n            </div>\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\n                <hr />\n                <div className=\"flex\">\n                    <MyAvatar user={user} />\n                    <div className=\"flex col\" style={{ paddingLeft: '5px' }}>\n                        <span style={{ lineHeight: '22px' }}>{user?.fullname}</span>\n                        <span style={{ fontSize: '0.8em' }}>{user?.email || 'No e-mail to show'}</span>\n                    </div>\n                </div>\n                <hr />\n\n                <section className=\"user-actions flex col\">\n                    <Link to={`/user/${user?._id}/activity`}>Activity</Link>\n                    <Link to={`/user/${user?._id}/card`}>Cards</Link>\n                    <span>Tutorial</span>\n                    <hr />\n                    {(!user || user?.isGuest) && <Link to=\"/login\">Log In</Link>}\n                    <button onClick={onLogout} className=\"clean-btn\" style={{ paddingBottom: '5px' }}>Log Out</button>\n                </section>\n            </div >\n        </div>\n    )\n\n}\n\nexport const UserMenuModal = withRouter(_UserMenuModal)","/Users/nadavcohen/Desktop/dev/boot_camp/projs/sprint-4-Trello/src/cmps/TimeDisplay.jsx",[],{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","severity":1,"message":"457","line":2,"column":16,"nodeType":"458","messageId":"459","endLine":2,"endColumn":23},{"ruleId":"456","severity":1,"message":"460","line":15,"column":10,"nodeType":"458","messageId":"459","endLine":15,"endColumn":21},{"ruleId":"456","severity":1,"message":"461","line":29,"column":17,"nodeType":"458","messageId":"459","endLine":29,"endColumn":26},{"ruleId":"456","severity":1,"message":"462","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":21},{"ruleId":"463","severity":1,"message":"464","line":91,"column":9,"nodeType":"465","messageId":"466","endLine":91,"endColumn":32},{"ruleId":"456","severity":1,"message":"467","line":113,"column":11,"nodeType":"458","messageId":"459","endLine":113,"endColumn":19},{"ruleId":"468","severity":1,"message":"469","line":158,"column":17,"nodeType":"458","messageId":"470","endLine":158,"endColumn":23},{"ruleId":"468","severity":1,"message":"469","line":163,"column":13,"nodeType":"458","messageId":"470","endLine":163,"endColumn":19},{"ruleId":"456","severity":1,"message":"471","line":64,"column":19,"nodeType":"458","messageId":"459","endLine":64,"endColumn":25},{"ruleId":"456","severity":1,"message":"472","line":6,"column":8,"nodeType":"458","messageId":"459","endLine":6,"endColumn":16},{"ruleId":"456","severity":1,"message":"473","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":29},{"ruleId":"456","severity":1,"message":"474","line":18,"column":8,"nodeType":"458","messageId":"459","endLine":18,"endColumn":21},{"ruleId":"456","severity":1,"message":"475","line":6,"column":8,"nodeType":"458","messageId":"459","endLine":6,"endColumn":16},{"ruleId":"456","severity":1,"message":"476","line":7,"column":8,"nodeType":"458","messageId":"459","endLine":7,"endColumn":25},{"ruleId":"456","severity":1,"message":"477","line":12,"column":9,"nodeType":"458","messageId":"459","endLine":12,"endColumn":24},{"ruleId":"478","severity":1,"message":"479","line":17,"column":50,"nodeType":"480","messageId":"481","endLine":17,"endColumn":51},{"ruleId":"456","severity":1,"message":"482","line":7,"column":8,"nodeType":"458","messageId":"459","endLine":7,"endColumn":32},{"ruleId":"452","replacedBy":"483"},{"ruleId":"454","replacedBy":"484"},{"ruleId":"456","severity":1,"message":"485","line":9,"column":8,"nodeType":"458","messageId":"459","endLine":9,"endColumn":24},{"ruleId":"486","severity":1,"message":"487","line":37,"column":29,"nodeType":"488","endLine":37,"endColumn":75},{"ruleId":"486","severity":1,"message":"487","line":43,"column":29,"nodeType":"488","endLine":43,"endColumn":75},{"ruleId":"489","severity":1,"message":"490","line":61,"column":20,"nodeType":"488","endLine":61,"endColumn":24},{"ruleId":"486","severity":1,"message":"487","line":50,"column":29,"nodeType":"488","endLine":50,"endColumn":54},{"ruleId":"456","severity":1,"message":"491","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":21},{"ruleId":"456","severity":1,"message":"492","line":13,"column":34,"nodeType":"458","messageId":"459","endLine":13,"endColumn":39},{"ruleId":"456","severity":1,"message":"493","line":6,"column":10,"nodeType":"458","messageId":"459","endLine":6,"endColumn":25},{"ruleId":"456","severity":1,"message":"494","line":6,"column":27,"nodeType":"458","messageId":"459","endLine":6,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":105,"column":29,"nodeType":"488","endLine":105,"endColumn":50},{"ruleId":"456","severity":1,"message":"495","line":36,"column":17,"nodeType":"458","messageId":"459","endLine":36,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":88,"column":38,"nodeType":"488","endLine":88,"endColumn":130},{"ruleId":"496","severity":1,"message":"497","line":14,"column":21,"nodeType":"498","messageId":"499","endLine":14,"endColumn":23},{"ruleId":"496","severity":1,"message":"497","line":14,"column":31,"nodeType":"498","messageId":"499","endLine":14,"endColumn":33},{"ruleId":"456","severity":1,"message":"500","line":5,"column":10,"nodeType":"458","messageId":"459","endLine":5,"endColumn":22},{"ruleId":"501","severity":1,"message":"502","line":34,"column":17,"nodeType":"488","endLine":34,"endColumn":81},{"ruleId":"456","severity":1,"message":"503","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":21},{"ruleId":"456","severity":1,"message":"504","line":1,"column":17,"nodeType":"458","messageId":"459","endLine":1,"endColumn":26},{"ruleId":"456","severity":1,"message":"504","line":1,"column":17,"nodeType":"458","messageId":"459","endLine":1,"endColumn":26},{"ruleId":"456","severity":1,"message":"505","line":3,"column":10,"nodeType":"458","messageId":"459","endLine":3,"endColumn":25},{"ruleId":"456","severity":1,"message":"506","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":17},{"ruleId":"456","severity":1,"message":"507","line":4,"column":10,"nodeType":"458","messageId":"459","endLine":4,"endColumn":24},{"ruleId":"456","severity":1,"message":"508","line":4,"column":8,"nodeType":"458","messageId":"459","endLine":4,"endColumn":22},{"ruleId":"456","severity":1,"message":"493","line":6,"column":10,"nodeType":"458","messageId":"459","endLine":6,"endColumn":25},{"ruleId":"456","severity":1,"message":"509","line":6,"column":38,"nodeType":"458","messageId":"459","endLine":6,"endColumn":47},{"ruleId":"456","severity":1,"message":"510","line":30,"column":15,"nodeType":"458","messageId":"459","endLine":30,"endColumn":18},{"ruleId":"511","severity":1,"message":"512","line":56,"column":48,"nodeType":"513","messageId":"514","endLine":56,"endColumn":50},{"ruleId":"456","severity":1,"message":"515","line":8,"column":85,"nodeType":"458","messageId":"459","endLine":8,"endColumn":98},{"ruleId":"456","severity":1,"message":"493","line":5,"column":10,"nodeType":"458","messageId":"459","endLine":5,"endColumn":25},{"ruleId":"456","severity":1,"message":"494","line":5,"column":27,"nodeType":"458","messageId":"459","endLine":5,"endColumn":36},{"ruleId":"456","severity":1,"message":"516","line":27,"column":30,"nodeType":"458","messageId":"459","endLine":27,"endColumn":41},{"ruleId":"452","replacedBy":"517"},{"ruleId":"454","replacedBy":"518"},{"ruleId":"456","severity":1,"message":"519","line":14,"column":10,"nodeType":"458","messageId":"459","endLine":14,"endColumn":17},{"ruleId":"456","severity":1,"message":"520","line":41,"column":15,"nodeType":"458","messageId":"459","endLine":41,"endColumn":23},{"ruleId":"521","severity":1,"message":"522","line":138,"column":36,"nodeType":"523","endLine":138,"endColumn":80},{"ruleId":"452","replacedBy":"524"},{"ruleId":"454","replacedBy":"525"},{"ruleId":"456","severity":1,"message":"476","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":8,"endColumn":25},{"ruleId":"456","severity":1,"message":"526","line":39,"column":76,"nodeType":"458","messageId":"459","endLine":39,"endColumn":88},{"ruleId":"456","severity":1,"message":"527","line":39,"column":97,"nodeType":"458","messageId":"459","endLine":39,"endColumn":110},{"ruleId":"456","severity":1,"message":"476","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":8,"endColumn":25},{"ruleId":"456","severity":1,"message":"528","line":37,"column":37,"nodeType":"458","messageId":"459","endLine":37,"endColumn":43},{"ruleId":"456","severity":1,"message":"526","line":37,"column":84,"nodeType":"458","messageId":"459","endLine":37,"endColumn":96},{"ruleId":"456","severity":1,"message":"527","line":37,"column":105,"nodeType":"458","messageId":"459","endLine":37,"endColumn":118},{"ruleId":"456","severity":1,"message":"529","line":2,"column":10,"nodeType":"458","messageId":"459","endLine":2,"endColumn":14},{"ruleId":"456","severity":1,"message":"475","line":7,"column":8,"nodeType":"458","messageId":"459","endLine":7,"endColumn":16},{"ruleId":"456","severity":1,"message":"519","line":14,"column":10,"nodeType":"458","messageId":"459","endLine":14,"endColumn":17},{"ruleId":"456","severity":1,"message":"520","line":42,"column":19,"nodeType":"458","messageId":"459","endLine":42,"endColumn":27},{"ruleId":"456","severity":1,"message":"530","line":105,"column":16,"nodeType":"458","messageId":"459","endLine":105,"endColumn":23},{"ruleId":"456","severity":1,"message":"531","line":106,"column":48,"nodeType":"458","messageId":"459","endLine":106,"endColumn":54},{"ruleId":"456","severity":1,"message":"532","line":106,"column":56,"nodeType":"458","messageId":"459","endLine":106,"endColumn":65},{"ruleId":"456","severity":1,"message":"533","line":106,"column":67,"nodeType":"458","messageId":"459","endLine":106,"endColumn":78},{"ruleId":"456","severity":1,"message":"534","line":106,"column":144,"nodeType":"458","messageId":"459","endLine":106,"endColumn":157},{"ruleId":"456","severity":1,"message":"504","line":1,"column":10,"nodeType":"458","messageId":"459","endLine":1,"endColumn":19},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'MenuMapShow' is defined but never used.","'isMapOpen' is assigned a value but never used.","'cardService' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'newBoard' is assigned a value but never used.","no-redeclare","'labels' is already defined.","redeclared","'cardId' is assigned a value but never used.","'RoomIcon' is defined but never used.","'EqualizerOutlinedIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'EditIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'AddDueDateModal' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'RemoveRedEyeOutlinedIcon' is defined but never used.",["535"],["536"],"'ArrowBackIosIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'menuService' is defined but never used.","'board' is assigned a value but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'card' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'CallReceived' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'utilService' is defined but never used.","'Component' is defined but never used.","'MemberListModal' is defined but never used.","'connect' is defined but never used.","'handleTodoDrag' is defined but never used.","'CloseSharpIcon' is defined but never used.","'Draggable' is defined but never used.","'top' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isAddingToTop' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.",["535"],["536"],"'Archive' is defined but never used.","'finalPos' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["535"],["536"],"'handleChange' is assigned a value but never used.","'EnterEditMode' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'Link' is defined but never used.","'editPos' is assigned a value but never used.","'onSave' is assigned a value but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","'enterEditMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]