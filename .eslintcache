[{"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js":"1","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js":"4","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx":"5","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx":"6","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx":"7","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js":"8","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx":"9","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx":"10","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js":"11","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx":"12","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js":"13","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js":"14","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js":"15","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js":"16","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js":"17","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js":"18","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js":"19","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\menuReducer.js":"20","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx":"21","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\Menu.jsx":"22","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx":"23","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx":"24","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx":"25","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js":"26","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js":"27","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx":"28","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx":"29","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx":"30","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx":"31","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx":"32","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx":"33","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardMenu.jsx":"34","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\DynamicCardActionModal.jsx":"35","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentPreview.jsx":"36","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js":"37","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\menuAction.js":"38","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx":"39","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx":"40","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx":"41","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx":"42","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\MyAvatar.jsx":"43","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx":"44","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx":"45","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx":"46","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx":"47","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\menuService.js":"48","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx":"49","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx":"50","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuMore\\SectionLabels.jsx":"51","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js":"52","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberListModal.jsx":"53","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddAttachmentModal.jsx":"54","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelListModal.jsx":"55","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddChecklistModal.jsx":"56","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js":"57","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx":"58","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberList.jsx":"59","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx":"60","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelList.jsx":"61","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklistList.jsx":"62","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx":"63","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx":"64","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx":"65","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklist.jsx":"66","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev2.jsx":"67","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev.jsx":"68","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Todo.jsx":"69","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\LinearProgressBar.jsx":"70","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupMenu.jsx":"71","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\AddCardInput.jsx":"72"},{"size":910,"mtime":1610460278356,"results":"73","hashOfConfig":"74"},{"size":364,"mtime":1610460278364,"results":"75","hashOfConfig":"74"},{"size":5064,"mtime":1610460278367,"results":"76","hashOfConfig":"74"},{"size":323,"mtime":1610460278387,"results":"77","hashOfConfig":"74"},{"size":725,"mtime":1610898772660,"results":"78","hashOfConfig":"74"},{"size":971,"mtime":1610635829567,"results":"79","hashOfConfig":"74"},{"size":362,"mtime":1610580403932,"results":"80","hashOfConfig":"74"},{"size":4428,"mtime":1610923958003,"results":"81","hashOfConfig":"74"},{"size":3557,"mtime":1610987516811,"results":"82","hashOfConfig":"74"},{"size":1565,"mtime":1610891480685,"results":"83","hashOfConfig":"74"},{"size":560,"mtime":1610815597106,"results":"84","hashOfConfig":"74"},{"size":1268,"mtime":1610891480669,"results":"85","hashOfConfig":"74"},{"size":1109,"mtime":1610570748015,"results":"86","hashOfConfig":"74"},{"size":6037,"mtime":1610990638388,"results":"87","hashOfConfig":"74"},{"size":669,"mtime":1610460278383,"results":"88","hashOfConfig":"74"},{"size":818,"mtime":1610580403938,"results":"89","hashOfConfig":"74"},{"size":322,"mtime":1610460278384,"results":"90","hashOfConfig":"74"},{"size":910,"mtime":1610815597128,"results":"91","hashOfConfig":"74"},{"size":377,"mtime":1610545229448,"results":"92","hashOfConfig":"74"},{"size":279,"mtime":1610815597107,"results":"93","hashOfConfig":"74"},{"size":665,"mtime":1610815597065,"results":"94","hashOfConfig":"74"},{"size":7460,"mtime":1610897216708,"results":"95","hashOfConfig":"74"},{"size":2003,"mtime":1610891480661,"results":"96","hashOfConfig":"74"},{"size":5009,"mtime":1610989797368,"results":"97","hashOfConfig":"74"},{"size":3905,"mtime":1610898772677,"results":"98","hashOfConfig":"74"},{"size":682,"mtime":1610815597104,"results":"99","hashOfConfig":"74"},{"size":2325,"mtime":1610898772692,"results":"100","hashOfConfig":"74"},{"size":605,"mtime":1610891480666,"results":"101","hashOfConfig":"74"},{"size":3983,"mtime":1610891480673,"results":"102","hashOfConfig":"74"},{"size":1532,"mtime":1610891480676,"results":"103","hashOfConfig":"74"},{"size":2246,"mtime":1610815597097,"results":"104","hashOfConfig":"74"},{"size":2172,"mtime":1610891480678,"results":"105","hashOfConfig":"74"},{"size":1082,"mtime":1610891480674,"results":"106","hashOfConfig":"74"},{"size":2519,"mtime":1610898772682,"results":"107","hashOfConfig":"74"},{"size":1759,"mtime":1610898772684,"results":"108","hashOfConfig":"74"},{"size":509,"mtime":1610815597078,"results":"109","hashOfConfig":"74"},{"size":1832,"mtime":1610580403938,"results":"110","hashOfConfig":"74"},{"size":687,"mtime":1610891480693,"results":"111","hashOfConfig":"74"},{"size":243,"mtime":1610815597088,"results":"112","hashOfConfig":"74"},{"size":244,"mtime":1610891480668,"results":"113","hashOfConfig":"74"},{"size":515,"mtime":1610815597091,"results":"114","hashOfConfig":"74"},{"size":2141,"mtime":1610891480667,"results":"115","hashOfConfig":"74"},{"size":547,"mtime":1610898772706,"results":"116","hashOfConfig":"74"},{"size":6211,"mtime":1610891480671,"results":"117","hashOfConfig":"74"},{"size":1568,"mtime":1610815597094,"results":"118","hashOfConfig":"74"},{"size":6631,"mtime":1610994301879,"results":"119","hashOfConfig":"74"},{"size":1363,"mtime":1610898772680,"results":"120","hashOfConfig":"74"},{"size":301,"mtime":1610891480688,"results":"121","hashOfConfig":"74"},{"size":303,"mtime":1610891480682,"results":"122","hashOfConfig":"74"},{"size":2323,"mtime":1610891480681,"results":"123","hashOfConfig":"74"},{"size":585,"mtime":1610891480679,"results":"124","hashOfConfig":"74"},{"size":2586,"mtime":1610586036755,"results":"125","hashOfConfig":"74"},{"size":2648,"mtime":1610898772687,"results":"126","hashOfConfig":"74"},{"size":1733,"mtime":1610898772675,"results":"127","hashOfConfig":"74"},{"size":2495,"mtime":1610898772686,"results":"128","hashOfConfig":"74"},{"size":1744,"mtime":1610898772676,"results":"129","hashOfConfig":"74"},{"size":704,"mtime":1610586036756,"results":"130","hashOfConfig":"74"},{"size":4559,"mtime":1610991676505,"results":"131","hashOfConfig":"74"},{"size":874,"mtime":1610898772687,"results":"132","hashOfConfig":"74"},{"size":2235,"mtime":1610898772681,"results":"133","hashOfConfig":"74"},{"size":897,"mtime":1610898772685,"results":"134","hashOfConfig":"74"},{"size":878,"mtime":1610815597076,"results":"135","hashOfConfig":"74"},{"size":1532,"mtime":1610815597074,"results":"136","hashOfConfig":"74"},{"size":2826,"mtime":1610898772679,"results":"137","hashOfConfig":"74"},{"size":3964,"mtime":1610991957658,"results":"138","hashOfConfig":"74"},{"size":1571,"mtime":1610898772678,"results":"139","hashOfConfig":"74"},{"size":7738,"mtime":1611004061972,"results":"140","hashOfConfig":"74"},{"size":3799,"mtime":1611003438191,"results":"141","hashOfConfig":"74"},{"size":3300,"mtime":1610898772689,"results":"142","hashOfConfig":"74"},{"size":577,"mtime":1610815597067,"results":"143","hashOfConfig":"74"},{"size":1208,"mtime":1610911768058,"results":"144","hashOfConfig":"74"},{"size":1032,"mtime":1610929667420,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"15e2un3",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"148"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"148"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"148"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"148"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"148"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"148"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"148"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"148"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"148"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"148"},"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\index.js",[],["314","315"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\store.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\App.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardList.jsx",["316"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardAction.js'\r\nimport { BoardPreview } from './BoardPreview.jsx'\r\n\r\nclass _BoardList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n    get boardsForDisplay() {\r\n        let boards = this.props.boards\r\n        return boards\r\n    }\r\n    render() {\r\n        const { boards } = this.boardsForDisplay\r\n        return (\r\n            <section className=\"board-list\">\r\n                {boards.map(board => {\r\n                    <div> key={board._id}\r\n                        <BoardPreview board={board} /></div>\r\n                })}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\nexport const BoardList = connect(mapStateToProps, mapDispatchToProps)(_BoardList)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardPreview.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\boardAction.js",["317"],"import { boardService } from '../../services/boardService.js'\r\nimport { httpService } from '../../services/httpService.js'\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query()\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err)\r\n    }\r\n  }\r\n}\r\nexport function addBoard(newBoard){\r\n  return dispatch=>{\r\n    const board = boardService.addBoard(newBoard)\r\n    dispatch({type:'ADD_BOARD',board:board})\r\n  }\r\n}\r\n\r\nexport function getBoardById(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(id)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n      // socketService.on('board-update',updatedBoard=>{\r\n      //   dispatch({ type: 'SET_BOARD', updatedBoard })\r\n      // })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function addCard(boardId, groupId, cardToAdd,isAdding) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addCard(boardId, groupId, cardToAdd,isAdding)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addGroup(boardId, group) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.addGroup(boardId, group)\r\n      dispatch({ type: 'SET_BOARD', board })\r\n    }\r\n    catch (err) {\r\n      console.log('err in loadBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoardCard(board, card) {\r\n  return async dispatch => {\r\n    const newBoard = boardService.updateBoardCard(board, card)\r\n    //const newBoard = await httpService.put('board/' + board._id,boardService.updateBoardCard(board,card))\r\n    dispatch({ type: 'SET_BOARD', board: newBoard })\r\n\r\n  }\r\n}\r\n\r\nexport function openLabel() {\r\n  return dispatch => {\r\n    dispatch({ type: 'OPEN-LABELS' })\r\n  }\r\n}\r\nexport function setBackground(board, background) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = { ...board, style: background }\r\n      dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in loadboards', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectImg(board, imgSrc) {\r\n  return async dispatch => {\r\n    try {\r\n      const selectedImg = await boardService.selectImg(board, imgSrc)\r\n      dispatch({ type: 'CHANGE_STYLE', selectedImg })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectImg', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function selectColor(board, color) {\r\n  return async dispatch => {\r\n    try {\r\n      console.log('hi***');\r\n      const selectedColor = await boardService.selectColor(board, color)\r\n      console.log('selectedColor:', selectedColor);\r\n      dispatch({ type: 'SELECT_COLOR', selectedColor })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateCardLocation(board,cardId,source,destination){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateCardLocation(board,cardId,source,destination)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateGroupLoaction(board,groupId,source,destination){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupLoaction(board,groupId,source,destination)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function editGroupTitle(board,group,groupTitle){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroupTitle(board,group,groupTitle)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function copyList(board,group){\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.copyList(board,group)\r\n      dispatch({ type: 'SET_BOARD', board:updatedBoard })\r\n    }\r\n    catch (err) {\r\n      console.log('boardActions: err in selectColor', err);\r\n    }\r\n  }\r\n}\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Home.jsx",["318"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\pages\\Board.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMapShow.jsx",["319"],"\r\nimport { Component } from 'react'\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\n//icons:\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\n\r\nclass _MenuMapShow extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        gGoogleMap: ''\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"map-section\">\r\n                <Map\r\n                    google={this.props.google}\r\n                    initialCenter={{ lat: 32.0749831, lng: 34.9120554 }}\r\n                    center={this.state.center}\r\n                    zoom={14}>\r\n\r\n                    <Marker\r\n                        name={'Current location'} />\r\n\r\n                    <InfoWindow\r\n                        marker={this.state.activeMarker}\r\n                        visible={this.state.showingInfoWindow}>\r\n                        <div>\r\n                            <h1>{this.state.selectedPlace.name}</h1>\r\n                        </div>\r\n                    </InfoWindow>\r\n\r\n                </Map>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const MenuMapShow = GoogleApiWrapper({\r\n    apiKey: ('AIzaSyBzfpQbTtSYT__Qh9PIPLUnA9xBMKj1iFY')\r\n})(_MenuMapShow)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\boardService.js",["320","321"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\reviewReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\systemReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\reducers\\menuReducer.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\BoardHeader.jsx",["322"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n//icons:\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nclass _BoardHeader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex board-header\" >\r\n                <h4>board header</h4>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewModule.reviews,\r\n        board: state.boardModule.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // getBoardById,\r\n    // addGroup\r\n}\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\Menu.jsx",["323","324"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n//cmps:\r\nimport { SectionAbout } from './menuFirstSee/menuTopOptions/SectionAbout.jsx'\r\nimport { SectionBackground } from './menuFirstSee/menuTopOptions/SectionBackground.jsx'\r\nimport { SectionSearch } from './menuFirstSee/menuTopOptions/SectionSearch.jsx'\r\nimport { SectionStickers } from './menuFirstSee/menuTopOptions/SectionStickers.jsx'\r\nimport { SectionMore } from './menuFirstSee/menuTopOptions/SectionMore.jsx'\r\nimport { MenuButler } from './menuFirstSee/MenuButler';\r\nimport { MenuPowerups } from './menuFirstSee/MenuPowerups';\r\nimport { MenuMap } from './menuFirstSee/MenuMap';\r\nimport { MenuActivity } from './menuFirstSee/MenuActivity';\r\nimport { MenuActivitiesList } from './menuFirstSee/MenuActivitiesList.jsx'\r\n\r\n\r\n//icons:\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport WallpaperIcon from '@material-ui/icons/Wallpaper';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport ArrowUpwardSharpIcon from '@material-ui/icons/ArrowUpwardSharp';\r\n\r\n\r\nexport class Menu extends Component {\r\n\r\n    state = {\r\n        menuTitle: 'Menu',\r\n        currMenu: null,\r\n        inMenu: true,\r\n        isMenuOpen: false\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ isMenuOpen: !this.state.isMenuOpen })\r\n    }\r\n\r\n    goBack = () => { this.setState({ currMenu: null }) }\r\n\r\n    openAbout = () => { this.setState({ menuTitle: \"About This Board\", currMenu: 'SectionAbout' }) }\r\n    openBgs = () => { this.setState({ menuTitle: \"Change Background\", currMenu: 'SectionBackground' }) }\r\n    openSearch = () => { this.setState({ menuTitle: \"Search Cards\", currMenu: 'SectionSearch' }) }\r\n    openStickers = () => { this.setState({ menuTitle: \"Stickers\", currMenu: 'SectionStickers' }) }\r\n    openMore = () => { this.setState({ menuTitle: \"More\", currMenu: 'SectionMore' }) }\r\n    openButler = () => { this.setState({ menuTitle: \"butler\", currMenu: 'MenuButler' }) }\r\n    openPowerups = () => { this.setState({ menuTitle: \"Power-ups\", currMenu: 'MenuPowerups' }) }\r\n    openMap = () => { this.setState({ menuTitle: \"Map\", currMenu: 'MenuMap' }) }\r\n    openActivity = () => { this.setState({ menuTitle: \"Activity\", currMenu: 'MenuActivity' }) }\r\n\r\n    render() {\r\n\r\n\r\n        const { currMenu, menuTitle, inMenu, isMenuOpen } = this.state\r\n        const { board } = this.props\r\n        if (!board.activities) return null\r\n        return (\r\n            <section className={`menu flex col ${isMenuOpen ? 'open' : ''}`}>\r\n                <button className=\"menu-btn flex align-center\" onClick={this.toggleMenu}><MoreHorizIcon />Show Menu</button>\r\n                <div className=\"menu-top\">\r\n                    {currMenu && <button className=\"back-menu-btn\" onClick={this.goBack}><ArrowBackIosIcon /></button>}\r\n                    <h3>{(currMenu === null) ? 'Menu' : menuTitle}</h3>\r\n                    <button className=\"close-menu-btn\" onClick={this.toggleMenu}><CloseIcon /></button>\r\n                    <hr className=\"hr-menu\" />\r\n                </div>\r\n                {currMenu === null && <section className=\"menu-options\" style={{ display: \"grid\" }}>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openAbout}>\r\n                        <span><InfoIcon /></span>\r\n                        <div className=\"about-all-desc\">\r\n                            <h4 className=\"about-this-board\">About This Board</h4>\r\n                            <span className=\"about-desc\">Add a description to your board</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openBgs}>\r\n                        <span>< WallpaperIcon /></span>\r\n                        <h4 className=\"option-title\">Change Background</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openSearch}>\r\n                        <span><SearchIcon /></span>\r\n                        <h4 className=\"option-title\">Search Cards</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openStickers}>\r\n                        <span><LabelImportantIcon /></span>\r\n                        <h4 className=\"option-title\">Stickers</h4>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openMore}>\r\n                        <span><MoreHorizIcon /></span>\r\n                        <h4 className=\"option-title\">More</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openButler}>\r\n                        <span className=\"butler-icon\">🤖</span>\r\n                        <div className=\"butler-div\">\r\n                            <h4> Butler</h4>\r\n                            <span>Automate cards and more...</span>\r\n                        </div>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openPowerups}>\r\n                        <span className=\"powerups-icon\"><ArrowUpwardSharpIcon /></span>\r\n                        <div className=\"powerups-div\">\r\n                            <h4>Power-Ups</h4>\r\n                            <span className=\"power-ups-desc\">Calendar, Google Drive and more...</span>\r\n                        </div>\r\n                    </button>\r\n\r\n                    <button className=\"menu-option\" onClick={this.openMap}>\r\n                        <span><RoomIcon /></span>\r\n                        <h4 className=\"option-title\">Map</h4>\r\n                    </button>\r\n                    <hr className=\"hr-menu\" />\r\n                    <button className=\"menu-option\" onClick={this.openActivity}>\r\n                        <span><PlaylistAddCheckIcon /></span>\r\n                        <h4 className=\"option-title\">Activity</h4>\r\n                    </button>\r\n                    <MenuActivitiesList board={board} />\r\n                    <span className=\"view-all-activities-span\" onClick={this.openActivity}>View all activity...</span>\r\n                </section>}\r\n                <DynamicCmp currMenu={currMenu} board={board} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction DynamicCmp({ currMenu, board }) {\r\n    switch (currMenu) {\r\n        case 'SectionAbout':\r\n            return <SectionAbout board={board} />\r\n        case 'SectionBackground':\r\n            return <SectionBackground />\r\n        case 'SectionSearch':\r\n            return <SectionSearch board={board} />\r\n        case 'SectionStickers':\r\n            return <SectionStickers />\r\n        case 'SectionMore':\r\n            return <SectionMore board={board} />\r\n        case 'MenuButler':\r\n            return <MenuButler />\r\n        case 'MenuPowerups':\r\n            return <MenuPowerups />\r\n        case 'MenuMap':\r\n            return <MenuMap />\r\n        case 'MenuActivity':\r\n            return <MenuActivity board={board} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\Header.jsx",["325"],"import { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport { MenuMapShow } from './menu/menuFirstSee/MenuMapShow';\r\n\r\nclass _Header extends Component {\r\n    state = { isMapOpen: false }\r\n    toggleMap = () => { this.setState({ isMapOpen: !this.state.isMapOpen }) }\r\n    render() {\r\n        const { isMapOpen } = this.state\r\n        return (\r\n            <header className=\"main-header\">\r\n                <div className=\"icons-container\">\r\n\r\n                    <span className=\"apps-icon\">\r\n                        <AppsIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                        <Link to=\"/\">\r\n                            <DashboardIcon />\r\n                        </Link>\r\n                    </span>\r\n                </div>\r\n\r\n                <h3>Trello</h3>\r\n                <div className=\"icons-container\">\r\n                    <span className=\"apps-icon\" onClick={this.toggleMap}>\r\n                        {/* <Link to=\"/map\"></Link> */}\r\n                        <RoomIcon />\r\n                        {isMapOpen && <MenuMapShow />}\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                        <AddIcon />\r\n                    </span>\r\n                    <span className=\"apps-icon\">\r\n                        <AccountCircleIcon />\r\n                    </span>\r\n                </div>\r\n            </header>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userModule.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {}\r\n\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(_Header)","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupList.jsx",["326","327"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Card.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\cardService.js",["328"],"import {utilService} from './utilService'\r\n\r\nexport const cardService = {\r\n    getCardById,\r\n    getCards,\r\n    getCardLabels,\r\n    getCardForUpdate,\r\n    updateChecklistTodo,\r\n    removeChecklist,\r\n    getActivityToAdd,\r\n    getCommentToAdd\r\n\r\n}\r\n\r\nfunction getCardById(board, cardId) {\r\n    var currCard\r\n    board.groups.forEach(group => group.cards.forEach(card => {\r\n        if (card.id === cardId) currCard = card\r\n    }))\r\n    if (!currCard) return null\r\n    const labels = getCardLabels(board, currCard.labels)\r\n    const activities = _getCardActivities(board, cardId)\r\n    return {...currCard, labels, activities }\r\n}\r\n\r\nfunction getCardForUpdate(card){\r\n    delete card.activities\r\n    const labels = card.labels.map(label => label.id)\r\n    const newCard = JSON.parse(JSON.stringify(card))\r\n    return {...newCard, labels}\r\n\r\n\r\n}\r\nfunction _getCardActivities(board, cardId) {\r\n    return board.activities.filter(act => act.card.id === cardId)\r\n}\r\n\r\nfunction getCardLabels(board, labels) {\r\n    return board.labels.filter(label => labels?.includes(label.id))\r\n}\r\n\r\nfunction getCards(group){\r\n    const cards = group.cards\r\n    return cards\r\n}\r\n\r\nfunction updateChecklistTodo(card, checklist, todo){\r\n    const todoToUpdate = {...todo}\r\n    if (todoToUpdate.id) var todos = checklist.todos.map(todo => (todo.id === todoToUpdate.id) ? todoToUpdate : todo)\r\n    else {\r\n        todoToUpdate.id = utilService.makeId()\r\n        var todos = [...checklist.todos, todoToUpdate]\r\n    }\r\n    const currChecklist = {...checklist, todos}\r\n    const checklists = card.checklists.map(checklist => (checklist.id === currChecklist.id) ? currChecklist : checklist)\r\n    return {...card, checklists}\r\n}\r\n\r\nfunction removeChecklist(card, currChecklist){\r\n    const checklists = card.checklists.filter(checklist => checklist.id !== currChecklist.id)\r\n    return {...card, checklists}\r\n}\r\n\r\nfunction getActivityToAdd(card, user, txt ){\r\n    \r\n        return {\r\n            id: utilService.makeId(),\r\n            txt ,\r\n            createdAt: Date.now(),\r\n            createdBy: user,\r\n            card: {\r\n               id: card.id,\r\n               title: card.title\r\n            }\r\n        }\r\n\r\n}\r\n\r\nfunction getCommentToAdd(txt, user){\r\n    return {txt, createdAt: Date.now(), createdBy: user, id: utilService.makeId()}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivitiesList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionAbout.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionSearch.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionBackground.jsx",["329","330","331"],"import { Component } from 'react'\r\n\r\n//cmps:\r\nimport { PhotosArea } from './Backgrounds/PhotosArea.jsx'\r\nimport { ColorsArea } from './Backgrounds/ColorsArea.jsx';\r\n\r\n\r\n//icons:\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\n\r\n//imgs:\r\nimport photosSrc from '../../../../assets/bgImgs/photosChoose.jpg'\r\nimport colorsSrc from '../../../../assets/bgImgs/colorsChoose.jpg'\r\n\r\nexport class SectionBackground extends Component {\r\n\r\n    state = {\r\n        currType: null,\r\n        menuTitle: 'Change Background',\r\n        photosSrc,\r\n        colorsSrc\r\n    }\r\n\r\n    goBackBg = () => { this.setState({ currType: null }) }\r\n\r\n    choosePhotos = () => { this.setState({ menuTitle: \"Photos\", currType: 'PhotosArea' }) }\r\n    chooseColors = () => { this.setState({ menuTitle: \"Colors\", currType: 'ColorsArea' }) }\r\n\r\n    render() {\r\n        const { currType, photosSrc, colorsSrc } = this.state\r\n        return (\r\n            <section className=\"background-section\">\r\n                {currType === null && <section className=\"flex photos-colors\">\r\n                    <div className=\"photos\">\r\n                        <button onClick={this.choosePhotos}>\r\n                            <img src={photosSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Photos</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"colors\">\r\n                        <button onClick={this.chooseColors}>\r\n                            <img src={colorsSrc} className=\"img-select\" />\r\n                            <span className=\"select-img-title\">Colors</span>\r\n                        </button>\r\n                    </div>\r\n                </section>}\r\n                {currType && <button className=\"back-bg-btn\" onClick={this.goBackBg}><ArrowBackIosIcon /></button>}\r\n                <hr className=\"hr-menu\" />\r\n                <DynamicCmpBg currType={currType} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nfunction DynamicCmpBg({ currType }) {\r\n    switch (currType) {\r\n        case 'PhotosArea':\r\n            return <PhotosArea />\r\n        case 'ColorsArea':\r\n            return <ColorsArea />\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionStickers.jsx",["332"],"import { Component } from 'react'\r\n\r\nimport stick1 from '../../../../assets/stickers/sticker-01.png'\r\nimport stick2 from '../../../../assets/stickers/sticker-02.png'\r\nimport stick3 from '../../../../assets/stickers/sticker-03.png'\r\nimport stick4 from '../../../../assets/stickers/sticker-04.png'\r\nimport stick5 from '../../../../assets/stickers/sticker-05.png'\r\nimport stick6 from '../../../../assets/stickers/sticker-06.png'\r\nimport stick7 from '../../../../assets/stickers/sticker-07.png'\r\nimport stick8 from '../../../../assets/stickers/sticker-08.png'\r\nimport stick9 from '../../../../assets/stickers/sticker-09.png'\r\nimport stick10 from '../../../../assets/stickers/sticker-10.png'\r\nimport stick11 from '../../../../assets/stickers/sticker-11.png'\r\nimport stick12 from '../../../../assets/stickers/sticker-12.png'\r\n\r\n\r\nexport class SectionStickers extends Component {\r\n\r\n    state = {\r\n        stickers: [\r\n            { src: stick1, _id: 'stick101' },\r\n            { src: stick2, _id: 'stick102' },\r\n            { src: stick3, _id: 'stick103' },\r\n            { src: stick4, _id: 'stick104' },\r\n            { src: stick5, _id: 'stick105' },\r\n            { src: stick6, _id: 'stick106' },\r\n            { src: stick7, _id: 'stick107' },\r\n            { src: stick8, _id: 'stick108' },\r\n            { src: stick9, _id: 'stick109' },\r\n            { src: stick10, _id: 'stick1011' },\r\n            { src: stick11, _id: 'stick1011' },\r\n            { src: stick12, _id: 'stick1012' }\r\n\r\n        ]\r\n    }\r\n\r\n\r\n    render() {\r\n        const { stickers } = this.state\r\n\r\n        console.log('stickers:', stickers);\r\n        if (!stickers || !stickers.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"stickers-section\" style={{ display: \"grid\" }}>\r\n                <h1>Stickers!</h1>\r\n                <div className=\"stickers-area\">\r\n                    {stickers.map((sticker, idx) => {\r\n\r\n                        return <div className=\"sticker-img\" key={idx}>\r\n                            <img src={sticker.src} />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\SectionMore.jsx",["333"],"import { Component } from 'react'\r\n\r\n//icons:\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\n\r\n//cmps:\r\nimport { SectionLabels } from './menuMore/SectionLabels';\r\n\r\nexport class SectionMore extends Component {\r\n\r\n    state = {\r\n        currMore: null\r\n    }\r\n\r\n    openLabels = () => { this.setState({ currMore: 'labels' }) }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        const { currMore } = this.state\r\n        return (\r\n            <section className=\"more-section\" style={{ display: \"grid\" }}>\r\n                <button className=\"menu-option\" onClick={this.openLabels}>\r\n                    <span><LabelOutlinedIcon /></span>\r\n                    <h4 className=\"option-title\">Labels</h4>\r\n                </button>\r\n                <DynamicCmp currMore={currMore} board={board} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\nexport function DynamicCmp({ currMore, board }) {\r\n    switch (currMore) {\r\n        case 'labels':\r\n            return <SectionLabels board={board} />\r\n\r\n        default:\r\n            return <h1></h1>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardMenu.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\DynamicCardActionModal.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentPreview.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\menuAction.js",["334"],"import { boardService } from '../../services/boardService.js'\r\nimport { menuService } from '../../services/menuService.js'\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_PHOTOS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\nexport function saveBoardDesc(board, description) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = await boardService.updateBoardDesc(board, description)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        }\r\n        catch (err) {\r\n            console.log('boardActions: err:', err);\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuButler.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuMap.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuPowerups.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\MenuActivity.jsx",["335"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { boardService } from '../../../services/boardService';\r\n\r\n//cmps:\r\nimport { CardCommentPreview } from '../../card/CardCommentPreview';\r\n\r\n\r\n\r\nexport class MenuActivity extends Component {\r\n\r\n\r\n    state = {\r\n        backgroundColorAll: '',\r\n        colorAll: '',\r\n        textDecorationAll: '',\r\n        backgroundColorComments: '',\r\n        colorComments: '',\r\n        textDecorationComments: '',\r\n        filterBy: ''\r\n    }\r\n\r\n    changeBgClrAndAllActs = () => { this.setState({ backgroundColorAll: 'rgb(0, 121, 191)', colorAll: '#fff', textDecorationAll: 'none', backgroundColorComments: '', colorComments: '', textDecorationComments: '', filterBy: 'all' }) }\r\n    changeBgClr = () => { this.setState({ backgroundColorComments: 'rgb(0, 121, 191)', colorComments: '#fff', textDecorationComments: 'none', backgroundColorAll: '', colorAll: '', textDecorationAll: '', filterBy: '' }) }\r\n\r\n    get data() {\r\n        const { board } = this.props\r\n        const { filterBy } = this.state\r\n        const allActivites = boardService.getActivities(board, filterBy)\r\n        return allActivites\r\n    }\r\n\r\n    render() {\r\n        const { backgroundColorAll, backgroundColorComments, colorAll, colorComments, textDecorationAll, textDecorationComments } = this.state\r\n        console.log('state', this.state);\r\n        return (\r\n            <section className=\"menu-activities-section\">\r\n                <div className=\"select-active-filter\">\r\n                    <button className=\"active-filter-btn filter-all\" onClick={this.changeBgClrAndAllActs} style={{ backgroundColor: backgroundColorAll, color: colorAll, textDecoration: textDecorationAll }}>All</button>\r\n                    <button className=\"active-filter-btn filter-comments\" onClick={this.changeBgClr} style={{ backgroundColor: backgroundColorComments, color: colorComments, textDecoration: textDecorationComments }}>Comments</button>\r\n                </div>\r\n                <hr className=\"hr-menu\" />\r\n                <CardCommentPreview data={this.data} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\MyAvatar.jsx",["336"],"import { makeStyles } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }))\r\n\r\nexport function MyAvatar({user}){\r\n     const classes = useStyles()\r\n\r\n    if( user.imgUrl) return  <Avatar alt={user.fullname} className={classes.small} src={user.imgUrl} />\r\n    return <Avatar className={classes[user.color], classes.small}>{user.fullname.substring(0, 1)}</Avatar>\r\n\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\PhotosArea.jsx",["337"],"import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n// import {menuService} from '../'\r\n//icons:\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n//functions:\r\nimport { setBackground } from '../../../../../store/actions/boardAction.js'\r\nimport { setFilter } from '../../../../../store/actions/menuAction.js'\r\n\r\n//imgs:\r\nimport src1 from '../../../../../assets/bgImgs/image-01.jpg'\r\nimport src2 from '../../../../../assets/bgImgs/image-02.jpg'\r\nimport src3 from '../../../../../assets/bgImgs/image-03.jpg'\r\nimport src4 from '../../../../../assets/bgImgs/image-04.jpg'\r\nimport src5 from '../../../../../assets/bgImgs/image-05.jpg'\r\nimport src6 from '../../../../../assets/bgImgs/image-06.jpg'\r\nimport src7 from '../../../../../assets/bgImgs/image-07.jpg'\r\nimport src8 from '../../../../../assets/bgImgs/image-08.jpg'\r\nimport src9 from '../../../../../assets/bgImgs/image-09.jpg'\r\nimport src10 from '../../../../../assets/bgImgs/image-10.jpg'\r\nimport src11 from '../../../../../assets/bgImgs/image-11.jpg'\r\nimport src12 from '../../../../../assets/bgImgs/image-12.jpg'\r\nimport src13 from '../../../../../assets/bgImgs/image-13.jpg'\r\nimport src14 from '../../../../../assets/bgImgs/image-14.jpg'\r\nimport src15 from '../../../../../assets/bgImgs/image-15.jpg'\r\nimport src16 from '../../../../../assets/bgImgs/image-16.jpg'\r\nimport src17 from '../../../../../assets/bgImgs/image-17.jpg'\r\nimport src18 from '../../../../../assets/bgImgs/image-18.jpg'\r\n\r\nclass _PhotosArea extends Component {\r\n\r\n    state = {\r\n        photoSearch: '',\r\n        filterBy: {\r\n            name: ''\r\n        },\r\n        bgImgs: [\r\n            { src: src1, _id: 'img101', title: \"sunset\", isImgTitleShow: false },\r\n            { src: src2, _id: 'img102', title: \"Snowy mountains\", isImgTitleShow: false },\r\n            { src: src3, _id: 'img103', title: \"Mountains at sunset\", isImgTitleShow: false },\r\n            { src: src4, _id: 'img104', title: \"clouds\", isImgTitleShow: false },\r\n            { src: src5, _id: 'img105', title: \"Cliff on a stream\", isImgTitleShow: false },\r\n            { src: src6, _id: 'img106', title: \"Stars\", isImgTitleShow: false },\r\n            { src: src7, _id: 'img107', title: \"Bright background\", isImgTitleShow: false },\r\n            { src: src8, _id: 'img108', title: \"Wall painting\", isImgTitleShow: false },\r\n            { src: src9, _id: 'img109', title: \"Snowy village\", isImgTitleShow: false },\r\n            { src: src10, _id: 'img110', title: \"stream\", isImgTitleShow: false },\r\n            { src: src11, _id: 'img111', title: \"Desert\", isImgTitleShow: false },\r\n            { src: src12, _id: 'img112', title: \"A flowering tree\", isImgTitleShow: false },\r\n            { src: src13, _id: 'img113', title: \"Cherries\", isImgTitleShow: false },\r\n            { src: src14, _id: 'img114', title: \"Tree leaves\", isImgTitleShow: false },\r\n            { src: src15, _id: 'img115', title: \"Orange tree\", isImgTitleShow: false },\r\n            { src: src16, _id: 'img116', title: \"Tangled stream\", isImgTitleShow: false },\r\n            { src: src17, _id: 'img117', title: \"Cloudy mountains\", isImgTitleShow: false },\r\n            { src: src18, _id: 'img118', title: \"Rear passage\", isImgTitleShow: false }\r\n        ]\r\n        // bgImgs:[]\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.state.bgImgs[0]);\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.setFilter(this.state.filterBy)\r\n        })\r\n    }\r\n    // getFromNet = (q) => {\r\n    //     menuService.getPhotos(q)\r\n    //         .then(res => this.setState({ books: res.items.splice(0, 4) }));\r\n    // }\r\n    // handleChange = (ev) => {\r\n    //     console.log('your search:', ev.target.value);\r\n    //     this.getFromNet(ev.target.value);\r\n    // };\r\n    toggleImgTitle = (imgIdx) => {\r\n        let bgImgs = this.state.bgImgs.map((img, idx) => {\r\n            return (imgIdx !== idx) ? img : { ...img, isImgTitleShow: !img.isImgTitleShow }\r\n        })\r\n        this.setState({ bgImgs })\r\n    }\r\n    selectImg = (imgSrc) => {\r\n        imgSrc = '../assets/bgImgs/' + (imgSrc.substr(14)).substr(0, 8) + '.jpg'\r\n        console.log('edited imgSrc:', imgSrc);\r\n        this.props.setBackground(this.props.board, { backgroundImage: imgSrc })\r\n    }\r\n\r\n    get imgsForDidsplay() {\r\n        let imgs = this.state.bgImgs\r\n        const regex = new RegExp(this.props.filterBy, 'i')\r\n        imgs = imgs.filter(img => regex.test(img.title))\r\n        return imgs\r\n    }\r\n    render() {\r\n        const { name } = this.state.filterBy\r\n        const imgs = this.imgsForDidsplay\r\n        if (!imgs || !imgs.length) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"photo-type\">\r\n                <div className=\"flex search-photo\">\r\n                    <SearchIcon /><input type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Photos\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"photos-area\">\r\n                    {imgs.map((img, idx) => {\r\n                        return <div className=\"bgImg\" key={img._id} onMouseOver={() => { this.toggleImgTitle(idx) }}\r\n                            onMouseOut={() => { this.toggleImgTitle(idx) }}\r\n                            onClick={() => { this.selectImg(img.src) }}>\r\n                            <img src={img.src} />\r\n                            {img.isImgTitleShow && <span className=\"img-title\">{img.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.board,\r\n        filterBy: state.menuModule.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setBackground,\r\n    setFilter\r\n}\r\nexport const PhotosArea = connect(mapStateToProps, mapDispatchToProps)(_PhotosArea)\r\n\r\n","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\Backgrounds\\ColorsArea.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupPreview.jsx",["338","339","340","341"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardContent.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\menuService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\UserSearchBy.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuSearchBy\\LabelSearchBy.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\menu\\menuFirstSee\\menuTopOptions\\menuMore\\SectionLabels.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\services\\userService.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberListModal.jsx",["342"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { MyAvatar } from \"../MyAvatar\";\r\n\r\n\r\nexport class MemberListModal extends Component {\r\n\r\n    state = {\r\n        filter: ''\r\n    }\r\n\r\n    get members() {\r\n        const { filter } = this.state\r\n        const { members } = this.props.board\r\n        const regex = new RegExp(filter, 'i')\r\n        return members.filter(member => member.fullname.match(regex))\r\n    }\r\n\r\n    get cardMembersNames(){\r\n        const { members } = this.props.card\r\n        return members.map(member => member.fullname)\r\n    }\r\n\r\n    onAddMember = (member) => {\r\n        const card = {...this.props.card, members:[...this.props.card.members, member]}\r\n        this.props.save(card, `added ${member.fullname} to card`)\r\n    }\r\n\r\n    removeMember = (currMember) => {\r\n        const members = this.props.card.members.filter(member => {console.log(member.id); return member._id !== currMember._id})\r\n        const card = {...this.props.card, members}\r\n        this.props.save(card, `removed ${currMember.fullname} from card`)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { card, closeModal, style } = this.props\r\n        return (\r\n            <div onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}} className=\"member-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Members\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <input autoFocus onChange={({ target }) => this.setState({ filter: target.value })} type=\"text\" name=\"filter\" placeholder=\"Search members...\" />\r\n                <small>MEMBERS</small>\r\n                <div className=\"members-container\">\r\n                    {this.members.map(member =>\r\n                        <div  onClick={() => this.onAddMember(member)} key={member._id} className={`flex align-center space-bt`} style={{ backgroundColor: member.color }}>\r\n                            <div className=\"flex align-center\" >\r\n                            <MyAvatar user={member}/>\r\n                            <span>{member.fullname}</span>\r\n                            </div>\r\n                            {(this.cardMembersNames.includes(member.fullname) && <span  onClick={(ev) => {ev.stopPropagation(); ev.preventDefault(); this.removeMember(member)}} style={{color: '#596880'}}>&#10003;</span>)}\r\n                        </div>)}\r\n                </div>\r\n                {/* <button>Show other team members</button> */}\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddAttachmentModal.jsx",["343"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { utilService } from \"../../services/utilService\";\r\n\r\n\r\nexport class AddAttachmentModal extends Component{\r\n    state = {\r\n        url: '',\r\n        title: ''\r\n    }\r\n\r\n    onAddCheckList = () => {\r\n        const newAttachment = {\r\n            id: utilService.makeId(),\r\n            title: this.state.title,\r\n            url: this.stat.url\r\n        }\r\n        const card = {...this.props.card, attachments:[...this.props.card.attachments, newAttachment]}\r\n        this.props.save(card, `added attachment to ${newAttachment.title} to card`)\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const {name, value} = target\r\n        this.setState({ [name]: value })\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const { card, closeModal, style } = this.props\r\n        return (\r\n            <div onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}} className=\"attachments-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Attach From...\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>Attach a link</small>\r\n                <input autoFocus onChange={this.handleInput} autoComplete=\"off\" placeholder=\"Paste any link here...\" type=\"text\" name=\"title\" />\r\n                {this.state.title && <small>Link name (optional)</small>}\r\n                {this.state.title && <input  onChange={this.handleInput} type=\"text\" name=\"title\" />}\r\n                <button onClick={this.onAddCheckList}>Attach</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelListModal.jsx",["344","345"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport {cardService} from '../../services/cardService';\r\nimport { Save } from \"@material-ui/icons\";\r\n\r\n\r\nexport class LabelListModal extends Component {\r\n\r\n    state = {\r\n        filter: ''\r\n    }\r\n\r\n    get labels() {\r\n        const { filter } = this.state\r\n        const { labels } = this.props.board\r\n        const regex = new RegExp(filter, 'i')\r\n        return labels.filter(label => label.title.match(regex))\r\n    }\r\n\r\n    onAddLable = (label ) => {\r\n        const card = {...this.props.card, labels:[...this.props.card.labels, label]}\r\n        this.props.save(card, `added label ${label.title}`)\r\n    }\r\n\r\n    removeLabel = (labelId) => {\r\n        const labels = this.props.card.labels.filter(label => label.id !== labelId)\r\n        const card = {...this.props.card, labels}\r\n        this.props.save(card, `removed a label`)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { card, closeModal, style } = this.props\r\n        return (\r\n            <div onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}} className=\"label-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Labels\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <input autoFocus onChange={({ target }) => this.setState({ filter: target.value })} type=\"text\" name=\"filter\" placeholder=\"Search labels...\" />\r\n                <small>LABELS</small>\r\n                <div className=\"labels-container\">\r\n                    {this.labels.map(label =>\r\n                        <div onClick={() => this.onAddLable(label)} key={label.id} className=\"flex\">\r\n                            <div className={`flex space-bt bgc-${label.color?.substring(1)}`} style={{ backgroundColor: label.color }}>\r\n                                <span>{label.title}</span>\r\n                                {(card.labels.includes(label) && <span onClick={(ev) => {ev.stopPropagation(); ev.preventDefault(); this.removeLabel(label.id)}}>&#10003;</span>)}\r\n                            </div>\r\n                            <EditOutlinedIcon />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <button>Create a new label</button>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\AddChecklistModal.jsx",["346"],"import { Component } from \"react\";\r\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport { utilService } from \"../../services/utilService\";\r\n\r\n\r\nexport class AddChecklistModal extends Component{\r\n    state = {\r\n        title: 'Checklist'\r\n    }\r\n\r\n    onAddCheckList = () => {\r\n        const newCheckList = {\r\n            id: utilService.makeId(),\r\n            title: this.state.title,\r\n            createdAt: Date.now(),\r\n            createdBy: {\r\n                _id: \"u101\",\r\n                fullname: \"Tal Tarablus\",\r\n                imgUrl: \"http://res.cloudinary.com/shaishar9/image/upload/v1590850482/j1glw3c9jsoz2py0miol.jpg\"\r\n            },\r\n            todos: []\r\n        }\r\n        const card = {...this.props.card, checklists:[...this.props.card.checklists, newCheckList]}\r\n        this.props.save(card, `added checklist${newCheckList.title} to card`)\r\n    }\r\n\r\n    handleFocus = (ev) => {\r\n        ev.target.select()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { card, closeModal, style } = this.props\r\n        return (\r\n            <div onClick={(ev) => {ev.stopPropagation(); ev.preventDefault()}} className=\"checklist-modal card-action-modal\" style={style}>\r\n                <div className=\"flex justify-center\">\r\n                    Add Checklist\r\n                </div>\r\n                <button className=\"icon\" onClick={closeModal}><CloseSharpIcon /></button>\r\n                <hr />\r\n                <small>Title</small>\r\n                <input onFocus={this.handleFocus} autoFocus onChange={({ target }) => this.setState({ title: target.value })} value={this.state.title} type=\"text\" name=\"title\" />\r\n                <button onClick={this.onAddCheckList}>Add</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\store\\actions\\cardActions.js",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardList.jsx",["347","348","349","350"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\MemberList.jsx",["351","352","353","354","355"],"import { Component } from \"react\";\r\nimport { MyAvatar } from \"../MyAvatar\";\r\nimport { MemberListModal } from \"./MemberListModal\";\r\n\r\n\r\nexport function MemberList(props) {\r\n\r\n    function openModal(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        props.setCurrModal({ name: 'members', style: { top: '21%', left: 'calc(50% - 300px)' } })\r\n    }\r\n    const { card, save, user, board } = props\r\n\r\n    return (\r\n        <div className=\"card-members\">\r\n            <h5>MEMBERS</h5>\r\n            <div className=\"card-members flex\">\r\n                {card.members.map(user => <div onClick={openModal}><MyAvatar key={Math.random()} user={user} /></div>)}\r\n                <div onClick={openModal} className=\"add-user-button\">\r\n                    <MyAvatar user={{ fullname: '+' }} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardDescription.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\LabelList.jsx",["356","357","358","359"],"import { Component } from \"react\";\r\nimport { LabelListModal } from \"./LabelListModal\";\r\n\r\nexport function LabelList(props) {\r\n\r\n    function openModal(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        props.setCurrModal({ name: 'labels', style: { top: '21%', left: 'calc(50% - 100px)' } })\r\n    }\r\n\r\n    const { card, board, save } = props\r\n    return (\r\n        <div className=\"card-labels\">\r\n            <h5>LABELS</h5> \r\n            <div className=\"label-container flex\">\r\n                {card.labels.map(label =>\r\n                    <div onClick={openModal} key={label.id} className={`label flex center`} style={{ backgroundColor: label.color }}>\r\n                        {label.title}\r\n                    </div>\r\n                )}\r\n                <div onClick={openModal} className=\"add-label flex center\">+</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklistList.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardAttachmentList.jsx",["360"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\";\r\nimport AttachFileRoundedIcon from '@material-ui/icons/AttachFileRounded';\r\nimport CallMadeOutlinedIcon from '@material-ui/icons/CallMadeOutlined';\r\n\r\nexport class CardAttachmentList extends Component {\r\n\r\n    onAddAtach = (ev) => {\r\n        console.log(ev.key);\r\n        ev.preventDefault()\r\n        const { card } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = { txt, createdAt: Date.now(), createdBy: {}, id: utilService.makeId() }\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n    }\r\n\r\n    render() {\r\n        const { attachments } = this.props.card\r\n        if (!attachments) return null\r\n        return <div className=\"attachments\">\r\n            <header className=\"flex\">\r\n                <AttachFileRoundedIcon style={{ transform: \"rotate(35deg)\" }} />\r\n                <h3>Attachments</h3>\r\n            </header>\r\n            {attachments.map(att =>\r\n                <a key={att.id} target=\"_blank\" href={att.url}>\r\n                    <div className=\"attachment flex align-center\">\r\n                        <div>LINK</div>\r\n                        <div className=\"flex align-start\">\r\n                            <h4>{att.title}</h4>\r\n                            <CallMadeOutlinedIcon />\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )}\r\n            <button>Add an attachment</button>\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardCommentList.jsx",["361"],"import { Component } from \"react\"\r\nimport { utilService } from \"../../services/utilService\"\r\nimport { CardCommentPreview } from \"./CardCommentPreview\"\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport { cardService } from \"../../services/cardService\";\r\n\r\nexport class CardCommentList extends Component {\r\n\r\n    state = {\r\n        newCommentTxt: '',\r\n        isShown: false\r\n\r\n    }\r\n\r\n    showActivities = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n\r\n    onInput = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddComment = (ev) => {\r\n        if (ev?.key && ev.key === \"Enter\") return\r\n        ev.preventDefault()\r\n        ev.currentTarget.blur()\r\n        const { card, user } = this.props\r\n        const txt = this.state.newCommentTxt\r\n        const comment = cardService.getCommentToAdd(txt, user)\r\n        const newCard = { ...card }\r\n        newCard.comments.unshift(comment)\r\n        this.props.save(newCard)\r\n        this.setState({ newCommentTxt: '' })\r\n    }\r\n\r\n    get data() {\r\n        const { comments, activities } = this.props.card\r\n        if (!this.state.isShown) return comments\r\n        else {\r\n            const data = [...comments, ...activities]\r\n            return data.sort((a, b) => b.createdAt - a.createdAt)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isShown } = this.state\r\n        return <div className=\"card-comments\">\r\n            <header className=\"in-card-section flex space-bt align-end\">\r\n                <div className=\"flex align-start\">\r\n                    <FormatListBulletedIcon />\r\n                    <h3>Activity</h3>\r\n                </div>\r\n                <button onClick={this.showActivities}>{isShown ? 'Hide' : 'Show'} Details</button>\r\n            </header>\r\n            <div className={`hidden-actions-form-container`}>\r\n                <form onSubmit={(ev => ev.preventDefault())} className={`hidden-actions-form`}>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        onChange={this.onInput}\r\n                        value={this.state.newCommentTxt}\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Write a comment..\"\r\n                        name=\"newCommentTxt\"\r\n                    />\r\n                </form>\r\n                <div className=\"hidden-actions flex\">\r\n                    <button type=\"button\"\r\n                        className={this.state.newCommentTxt ? '' : 'disabled'}\r\n                        onClick={this.onAddComment}\r\n                    >\r\n                        Save\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n            <CardCommentPreview data={this.data} />\r\n        </div>\r\n    }\r\n}","C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPreview.jsx",["362","363","364"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\CardChecklist.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev2.jsx",["365","366","367","368","369","370"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\CardPrev.jsx",["371","372","373","374"],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\card\\Todo.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\LinearProgressBar.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\GroupMenu.jsx",[],"C:\\Users\\97250\\Desktop\\Sprint4 trello\\frontend\\src\\cmps\\AddCardInput.jsx",["375"],"import CloseSharpIcon from '@material-ui/icons/CloseSharp';\r\nimport React, { Component } from 'react'\r\n\r\nexport class AddCardInput extends Component {\r\n\r\n    render() {\r\n\r\n        const {title,onShowAddBtn,handleEnter,onAddCard,discardChanges,handleChange,isAddingToTop} =this.props\r\n        \r\n        return (\r\n\r\n            <div className=\"hidden-actions-form-container\">\r\n                <form action=\"\" className=\"hidden-actions-form\">\r\n                    <input  onClick={onShowAddBtn} onKeyDown={handleEnter}  value ={title}  type=\"text\" placeholder=\"+ Add another card \" onChange={handleChange} />\r\n                </form> \r\n                {/* className=\"add-card-input-bottom\" */}\r\n\r\n                <div className=\"hidden-actions flex\">\r\n                    <button  onClick={onAddCard}> Add Card</button>\r\n                    <button onClick={discardChanges} className=\"icon\">\r\n                        <CloseSharpIcon />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":19,"column":35,"nodeType":"382","messageId":"383","endLine":19,"endColumn":37},{"ruleId":"384","severity":1,"message":"385","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":21},{"ruleId":"388","severity":1,"message":"389","line":91,"column":79,"nodeType":"390","endLine":91,"endColumn":94},{"ruleId":"384","severity":1,"message":"391","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":16},{"ruleId":"384","severity":1,"message":"385","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":21},{"ruleId":"384","severity":1,"message":"392","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":14},{"ruleId":"384","severity":1,"message":"393","line":6,"column":8,"nodeType":"386","messageId":"387","endLine":6,"endColumn":21},{"ruleId":"384","severity":1,"message":"394","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":17},{"ruleId":"384","severity":1,"message":"395","line":58,"column":38,"nodeType":"386","messageId":"387","endLine":58,"endColumn":44},{"ruleId":"384","severity":1,"message":"396","line":2,"column":16,"nodeType":"386","messageId":"387","endLine":2,"endColumn":23},{"ruleId":"384","severity":1,"message":"397","line":3,"column":38,"nodeType":"386","messageId":"387","endLine":3,"endColumn":47},{"ruleId":"384","severity":1,"message":"398","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":22},{"ruleId":"399","severity":1,"message":"400","line":52,"column":13,"nodeType":"386","messageId":"401","endLine":52,"endColumn":18},{"ruleId":"402","severity":1,"message":"403","line":37,"column":29,"nodeType":"404","endLine":37,"endColumn":75},{"ruleId":"402","severity":1,"message":"403","line":43,"column":29,"nodeType":"404","endLine":43,"endColumn":75},{"ruleId":"405","severity":1,"message":"406","line":62,"column":20,"nodeType":"404","endLine":62,"endColumn":24},{"ruleId":"402","severity":1,"message":"403","line":50,"column":29,"nodeType":"404","endLine":50,"endColumn":54},{"ruleId":"405","severity":1,"message":"406","line":37,"column":20,"nodeType":"404","endLine":37,"endColumn":24},{"ruleId":"384","severity":1,"message":"407","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":21},{"ruleId":"384","severity":1,"message":"394","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":17},{"ruleId":"408","severity":1,"message":"409","line":17,"column":50,"nodeType":"410","messageId":"411","endLine":17,"endColumn":51},{"ruleId":"402","severity":1,"message":"403","line":118,"column":29,"nodeType":"404","endLine":118,"endColumn":50},{"ruleId":"384","severity":1,"message":"412","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":25},{"ruleId":"384","severity":1,"message":"413","line":6,"column":27,"nodeType":"386","messageId":"387","endLine":6,"endColumn":36},{"ruleId":"384","severity":1,"message":"414","line":131,"column":17,"nodeType":"386","messageId":"387","endLine":131,"endColumn":25},{"ruleId":"384","severity":1,"message":"415","line":131,"column":79,"nodeType":"386","messageId":"387","endLine":131,"endColumn":87},{"ruleId":"384","severity":1,"message":"416","line":37,"column":17,"nodeType":"386","messageId":"387","endLine":37,"endColumn":21},{"ruleId":"384","severity":1,"message":"416","line":30,"column":17,"nodeType":"386","messageId":"387","endLine":30,"endColumn":21},{"ruleId":"384","severity":1,"message":"417","line":4,"column":9,"nodeType":"386","messageId":"387","endLine":4,"endColumn":20},{"ruleId":"384","severity":1,"message":"418","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":14},{"ruleId":"384","severity":1,"message":"416","line":33,"column":17,"nodeType":"386","messageId":"387","endLine":33,"endColumn":21},{"ruleId":"384","severity":1,"message":"419","line":4,"column":8,"nodeType":"386","messageId":"387","endLine":4,"endColumn":22},{"ruleId":"384","severity":1,"message":"412","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":25},{"ruleId":"384","severity":1,"message":"397","line":6,"column":38,"nodeType":"386","messageId":"387","endLine":6,"endColumn":47},{"ruleId":"380","severity":1,"message":"420","line":46,"column":48,"nodeType":"382","messageId":"421","endLine":46,"endColumn":50},{"ruleId":"384","severity":1,"message":"422","line":1,"column":10,"nodeType":"386","messageId":"387","endLine":1,"endColumn":19},{"ruleId":"384","severity":1,"message":"423","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":25},{"ruleId":"384","severity":1,"message":"424","line":13,"column":19,"nodeType":"386","messageId":"387","endLine":13,"endColumn":23},{"ruleId":"384","severity":1,"message":"425","line":13,"column":25,"nodeType":"386","messageId":"387","endLine":13,"endColumn":29},{"ruleId":"384","severity":1,"message":"426","line":13,"column":31,"nodeType":"386","messageId":"387","endLine":13,"endColumn":36},{"ruleId":"384","severity":1,"message":"422","line":1,"column":10,"nodeType":"386","messageId":"387","endLine":1,"endColumn":19},{"ruleId":"384","severity":1,"message":"427","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":24},{"ruleId":"384","severity":1,"message":"426","line":12,"column":19,"nodeType":"386","messageId":"387","endLine":12,"endColumn":24},{"ruleId":"384","severity":1,"message":"424","line":12,"column":26,"nodeType":"386","messageId":"387","endLine":12,"endColumn":30},{"ruleId":"428","severity":1,"message":"429","line":27,"column":17,"nodeType":"404","endLine":27,"endColumn":64},{"ruleId":"384","severity":1,"message":"430","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":21},{"ruleId":"384","severity":1,"message":"412","line":7,"column":10,"nodeType":"386","messageId":"387","endLine":7,"endColumn":25},{"ruleId":"384","severity":1,"message":"413","line":7,"column":27,"nodeType":"386","messageId":"387","endLine":7,"endColumn":36},{"ruleId":"384","severity":1,"message":"431","line":24,"column":30,"nodeType":"386","messageId":"387","endLine":24,"endColumn":41},{"ruleId":"384","severity":1,"message":"432","line":14,"column":10,"nodeType":"386","messageId":"387","endLine":14,"endColumn":17},{"ruleId":"384","severity":1,"message":"433","line":42,"column":19,"nodeType":"386","messageId":"387","endLine":42,"endColumn":27},{"ruleId":"384","severity":1,"message":"434","line":106,"column":41,"nodeType":"386","messageId":"387","endLine":106,"endColumn":47},{"ruleId":"384","severity":1,"message":"435","line":106,"column":49,"nodeType":"386","messageId":"387","endLine":106,"endColumn":58},{"ruleId":"384","severity":1,"message":"436","line":106,"column":60,"nodeType":"386","messageId":"387","endLine":106,"endColumn":71},{"ruleId":"388","severity":1,"message":"389","line":136,"column":36,"nodeType":"390","endLine":136,"endColumn":77},{"ruleId":"384","severity":1,"message":"437","line":8,"column":8,"nodeType":"386","messageId":"387","endLine":8,"endColumn":25},{"ruleId":"384","severity":1,"message":"438","line":37,"column":25,"nodeType":"386","messageId":"387","endLine":37,"endColumn":31},{"ruleId":"384","severity":1,"message":"439","line":37,"column":72,"nodeType":"386","messageId":"387","endLine":37,"endColumn":84},{"ruleId":"384","severity":1,"message":"440","line":37,"column":93,"nodeType":"386","messageId":"387","endLine":37,"endColumn":106},{"ruleId":"384","severity":1,"message":"441","line":8,"column":85,"nodeType":"386","messageId":"387","endLine":8,"endColumn":98},"no-native-reassign",["442"],"no-negated-in-lhs",["443"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'httpService' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'RoomIcon' is defined but never used.","'Sort' is defined but never used.","'MoreHorizIcon' is defined but never used.","'connect' is defined but never used.","'inMenu' is assigned a value but never used.","'NavLink' is defined but never used.","'Draggable' is defined but never used.","'boardService' is defined but never used.","no-redeclare","'todos' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'menuService' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'isAdding' is assigned a value but never used.","'topTitle' is assigned a value but never used.","'card' is assigned a value but never used.","'cardService' is defined but never used.","'Save' is defined but never used.","'CloseSharpIcon' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Component' is defined but never used.","'MemberListModal' is defined but never used.","'save' is assigned a value but never used.","'user' is assigned a value but never used.","'board' is assigned a value but never used.","'LabelListModal' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'utilService' is defined but never used.","'isModalOpen' is assigned a value but never used.","'Archive' is defined but never used.","'finalPos' is assigned a value but never used.","'onSave' is assigned a value but never used.","'currGroup' is assigned a value but never used.","'onOpenLabel' is assigned a value but never used.","'AccountCircleIcon' is defined but never used.","'isEdit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'EnterEditMode' is assigned a value but never used.","'isAddingToTop' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]